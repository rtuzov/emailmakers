import { EmailGeneratorAgent } from './src/agent/agent';

async function testEmailImagesFix() {
  console.log('üß™ Testing Email Images Fix...');
  
  const agent = new EmailGeneratorAgent(true, 'quality');
  
  const testRequest = {
    topic: '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ –ü–∞—Ä–∏–∂',
    content_brief: '–°–æ–∑–¥–∞–π —Ä–µ–∫–ª–∞–º–Ω–æ–µ –ø–∏—Å—å–º–æ –æ —Å–∫–∏–¥–∫–∞—Ö –Ω–∞ –±–∏–ª–µ—Ç—ã –≤ –ü–∞—Ä–∏–∂. –î–æ–±–∞–≤—å –∑–∞–π—Ü–∞-—Ç–∞–ª–∏—Å–º–∞–Ω–∞ –∏ –∫—Ä–∞—Å–∏–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.',
    origin: 'LED',
    destination: 'CDG',
    target_audience: 'travelers',
    campaign_type: 'promotional' as const,
    tone: 'friendly',
    language: 'ru',
    brand: 'Kupibilet'
  };
  
  try {
    console.log('üöÄ Generating email with image fixes...');
    const result = await agent.generateEmail(testRequest);
    
    console.log('‚úÖ Email generation result:', {
      status: result.status,
      hasHtmlUrl: !!result.html_url,
      campaignId: result.campaign_metadata?.campaign_id,
      hasImages: result.status === 'success' ? 'Check HTML file' : 'N/A'
    });
    
    if (result.status === 'success') {
      console.log('üéØ Generated email successfully!');
      console.log('üìß HTML URL:', result.html_url);
      console.log('üìä Generation time:', result.generation_time);
      console.log('üîç Check the HTML file for:');
      console.log('  - Working logo in header');
      console.log('  - Hero image from Figma assets');
      console.log('  - Rabbit component if promotional');
    } else {
      console.error('‚ùå Email generation failed:', result.error_message);
    }
    
  } catch (error) {
    console.error('üí• Test failed:', error);
  }
}

// Run the test
testEmailImagesFix().catch(console.error); 