// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ loadEmailFolder
const { execSync } = require('child_process');

async function testLoadFolder() {
  try {
    console.log('üîç Testing loadEmailFolder via TypeScript...');
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π TypeScript —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∞
    const testScript = `
import EmailFolderManager from './src/agent/tools/email-folder-manager';

async function test() {
  const campaignId = 'kupibilet_newyear_sale_family_2025';
  console.log('Testing campaign:', campaignId);
  
  try {
    const emailFolder = await EmailFolderManager.loadEmailFolder(campaignId);
    
    if (emailFolder) {
      console.log('‚úÖ EmailFolder loaded successfully');
      console.log('üìÅ Campaign ID:', emailFolder.campaignId);
      console.log('üìÇ Base path:', emailFolder.basePath);
      console.log('üìÑ HTML path:', emailFolder.htmlPath);
      console.log('üìÑ MJML path:', emailFolder.mjmlPath);
      
      return emailFolder;
    } else {
      console.log('‚ùå EmailFolder not found');
      return null;
    }
  } catch (error) {
    console.error('‚ùå Error:', error.message);
    return null;
  }
}

test().then(result => {
  if (result) {
    console.log('Test completed successfully');
  } else {
    console.log('Test failed');
  }
}).catch(error => {
  console.error('Test error:', error);
});
`;
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    const fs = require('fs').promises;
    await fs.writeFile('temp-test.ts', testScript);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º —Å –ø–æ–º–æ—â—å—é ts-node
    console.log('Executing TypeScript test...');
    const result = execSync('npx ts-node temp-test.ts', { encoding: 'utf8' });
    console.log('Test output:', result);
    
    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    await fs.unlink('temp-test.ts');
    
  } catch (error) {
    console.error('‚ùå Test failed:', error.message);
  }
}

testLoadFolder(); 