/**
 * ü§ñ –¢–ï–°–¢ –¢–û–õ–¨–ö–û OPENAI SDK AGENT
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ OpenAI Agents SDK –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
 */

import { Agent, run } from '@openai/agents';
import { z } from 'zod';

// –ü—Ä–æ—Å—Ç–∞—è —Å—Ö–µ–º–∞ –¥–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
const emailAnalysisSchema = z.object({
  topic: z.string().describe('–¢–µ–º–∞ email –∫–∞–º–ø–∞–Ω–∏–∏'),
  audience: z.string().describe('–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è'),
  goal: z.string().describe('–¶–µ–ª—å –∫–∞–º–ø–∞–Ω–∏–∏')
});

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
async function analyzeEmailCampaign(input: z.infer<typeof emailAnalysisSchema>) {
  console.log('üîç –ê–Ω–∞–ª–∏–∑ email –∫–∞–º–ø–∞–Ω–∏–∏:', input);
  
  // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
  const analysis = {
    topic: input.topic,
    audience: input.audience,
    goal: input.goal,
    recommendations: [
      '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥',
      '–î–æ–±–∞–≤–∏—Ç—å —è—Ä–∫–∏–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã',
      '–°–æ–∑–¥–∞—Ç—å —á–µ—Ç–∫–∏–π call-to-action'
    ],
    confidence: 85,
    timestamp: new Date().toISOString()
  };
  
  console.log('‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω:', analysis);
  return analysis;
}

/**
 * üéØ –°–æ–∑–¥–∞–Ω–∏–µ OpenAI Agent
 */
function createEmailAgent(): Agent {
  const agent = new Agent({
    name: 'EmailCampaignAgent',
    instructions: `
      –¢—ã - —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ email –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É.
      
      –¢–≤–æ—è –∑–∞–¥–∞—á–∞:
      1. –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–º—ã email –∫–∞–º–ø–∞–Ω–∏–π
      2. –û–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é
      3. –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π
      4. –î–∞–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
      
      –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
      –ë—É–¥—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º.
      
      –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é analyzeEmailCampaign.
    `,
    model: 'gpt-4o-mini',
    tools: [
      {
        name: 'analyzeEmailCampaign',
        description: '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç email –∫–∞–º–ø–∞–Ω–∏—é –∏ –¥–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
        parameters: emailAnalysisSchema,
        execute: analyzeEmailCampaign
      }
    ]
  });

  return agent;
}

/**
 * üöÄ –¢–µ—Å—Ç OpenAI Agent
 */
async function testOpenAIAgent() {
  console.log('üöÄ ========== –¢–ï–°–¢ OPENAI AGENT ==========');
  console.log('üìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å—Ç–æ–≥–æ OpenAI Agents SDK');
  console.log('========================================\n');

  try {
    // ü§ñ –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    console.log('ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ OpenAI Agent...');
    const agent = createEmailAgent();
    
    // üéØ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    const request = '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π email –∫–∞–º–ø–∞–Ω–∏—é –¥–ª—è –æ—Å–µ–Ω–Ω–∏—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π –≤ –ù–æ—Ä–≤–µ–≥–∏—é. –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è - –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ 25-45 –ª–µ—Ç. –¶–µ–ª—å - —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤ –Ω–∞ 20%.';
    
    console.log('üìù –ó–∞–ø—Ä–æ—Å:', request);
    console.log('\nüöÄ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞...\n');
    
    // üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    const result = await run(agent, request);
    
    console.log('\n‚úÖ –ê–≥–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É!');
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('‚îÄ'.repeat(50));
    console.log(result.finalOutput);
    console.log('‚îÄ'.repeat(50));
    
    // üìà –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if (result.steps && result.steps.length > 0) {
      console.log('\nüìã –®–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:');
      result.steps.forEach((step, index) => {
        console.log(`${index + 1}. ${step.type}: ${step.message || '–í—ã–ø–æ–ª–Ω–µ–Ω–æ'}`);
      });
    }
    
    console.log('\n‚úÖ ========== –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û ==========');
    return true;
    
  } catch (error) {
    console.error('‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:', error);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏
    if (error instanceof Error) {
      console.error('üìù –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:');
      console.error('  –ù–∞–∑–≤–∞–Ω–∏–µ:', error.name);
      console.error('  –°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
      if (error.stack) {
        console.error('  –°—Ç–µ–∫:', error.stack.split('\n').slice(0, 5).join('\n'));
      }
    }
    
    return false;
  }
}

/**
 * üîÑ –¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
 */
async function testMultipleRequests() {
  console.log('\nüîÑ ========== –¢–ï–°–¢ –ù–ï–°–ö–û–õ–¨–ö–ò–• –ó–ê–ü–†–û–°–û–í ==========');
  console.log('üìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤');
  console.log('============================================\n');

  try {
    const agent = createEmailAgent();
    
    const requests = [
      '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞–º–ø–∞–Ω–∏—é –¥–ª—è –±–∏–∑–Ω–µ—Å-–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π',
      '–°–æ–∑–¥–∞–π —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–ª—è —Å–µ–º–µ–π–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞',
      '–ü—Ä–µ–¥–ª–æ–∂–∏ –ø–æ–¥—Ö–æ–¥ –¥–ª—è –º–æ–ª–æ–¥–µ–∂–Ω–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏'
    ];
    
    console.log(`üöÄ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ ${requests.length} –∑–∞–ø—Ä–æ—Å–æ–≤...\n`);
    
    for (let i = 0; i < requests.length; i++) {
      const request = requests[i];
      console.log(`üìù –ó–∞–ø—Ä–æ—Å ${i + 1}: ${request}`);
      
      try {
        const result = await run(agent, request);
        console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç ${i + 1}:`, result.finalOutput.slice(0, 100) + '...');
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ ${i + 1}:`, error);
      }
      
      console.log(''); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
    }
    
    console.log('‚úÖ ========== –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ï –ó–ê–ü–†–û–°–´ –ó–ê–í–ï–†–®–ï–ù–´ ==========');
    return true;
    
  } catch (error) {
    console.error('‚ùå –¢–µ—Å—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:', error);
    return false;
  }
}

/**
 * üéØ –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function main() {
  console.log('üé¨ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ OpenAI Agent...\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
  if (!process.env.OPENAI_API_KEY) {
    console.error('‚ùå OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    console.error('üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–ª—é—á: export OPENAI_API_KEY=your_key_here');
    process.exit(1);
  }
  
  console.log('‚úÖ OpenAI API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω');
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...\n');

  try {
    const singleTest = await testOpenAIAgent();
    const multipleTest = await testMultipleRequests();
    
    if (singleTest && multipleTest) {
      console.log('\nüéâ ========== –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û ==========');
      console.log('‚úÖ OpenAI Agents SDK —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log('‚úÖ –ê–≥–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–¥–∞—á–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã');
      console.log('‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.log('\n‚ùå ========== –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ò–õ–ò–°–¨ ==========');
      process.exit(1);
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

// üöÄ –ó–∞–ø—É—Å–∫
if (require.main === module) {
  main();
}

export { testOpenAIAgent, testMultipleRequests, createEmailAgent }; 