/**
 * üöÄ –ñ–ò–í–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø DESIGN SPECIALIST AGENT V2
 * 
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
 * - –ó–∞–ø—É—Å–∫ –±–µ–∑ Jest (–∏–∑–±–µ–≥–∞–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å ES –º–æ–¥—É–ª—è–º–∏)
 * - –°–æ–∑–¥–∞–Ω–∏–µ –≤—ã—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
 * - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 */

import { DesignSpecialistAgentV2, DesignSpecialistInputV2 } from '../src/agent/specialists/design-specialist-agent-v2';
import * as fs from 'fs';
import * as path from 'path';

async function main() {
  console.log('üöÄ –ó–ê–ü–£–°–ö –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò DESIGN SPECIALIST AGENT V2');
  console.log('='.repeat(60));

  // –°–æ–∑–¥–∞–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
  const outputDir = path.join(__dirname, '../test-results');
  if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
  }

  console.log(`üìÅ –í—ã—Ö–æ–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${outputDir}`);
  console.log('');

  // 1. –¢–ï–°–¢ –ü–û–ò–°–ö–ê –ê–°–°–ï–¢–û–í
  console.log('üîç –¢–ï–°–¢ 1: –ü–û–ò–°–ö –ê–°–°–ï–¢–û–í');
  console.log('-'.repeat(40));

  try {
    const agent1 = new DesignSpecialistAgentV2();
    console.log('‚úÖ –ê–≥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');

         const input1: DesignSpecialistInputV2 = {
       task_type: 'find_assets',
       content_package: {
         content: {
           subject: '–õ–µ—Ç–Ω–∏–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è —Å –≤—ã–≥–æ–¥–æ–π',
           preheader: '–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
           body: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ç—ã—Å—è—á–∞–º –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–≤–µ—Ä—è—é—Ç –Ω–∞—à–∏–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º',
           cta: '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–µ–∑–¥–∫—É'
         },
         brand_guidelines: {
           colors: {
             primary: '#4BFF7E',
             secondary: '#004E89', 
             accent: '#FFD23F'
           },
           fonts: {
             primary: 'Montserrat',
             secondary: 'Open Sans'
           }
         }
       },
       asset_requirements: {
         tags: ['travel', 'summer', 'vacation'],
         emotional_tone: 'positive',
         campaign_type: 'promotional',
         target_count: 5
       }
     };

     console.log('‚è±Ô∏è  –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ –∞—Å—Å–µ—Ç–æ–≤...');
     const startTime1 = Date.now();
     const result1 = await agent1.executeTask(input1);
     const executionTime1 = Date.now() - startTime1;

         console.log(`‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ ${executionTime1}ms`);
     console.log(`üìä –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: ${result1.success}`);
     console.log(`üéØ –ù–∞–π–¥–µ–Ω–æ –∞—Å—Å–µ—Ç–æ–≤: ${result1.results.assets?.assets?.length || 0}`);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const outputFile1 = path.join(outputDir, 'demo-asset-search-result.json');
    const outputData1 = {
      test_name: 'Asset Search Demo',
      timestamp: new Date().toISOString(),
      execution_time_ms: executionTime1,
      input: input1,
      result: result1,
      performance: {
        memory_usage: process.memoryUsage(),
        execution_time_ms: executionTime1
      }
    };

    fs.writeFileSync(outputFile1, JSON.stringify(outputData1, null, 2));
    console.log(`üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${outputFile1}`);
    console.log('');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –ø–æ–∏—Å–∫–∞ –∞—Å—Å–µ—Ç–æ–≤:', error);
    console.log('');
  }

  // 2. –¢–ï–°–¢ –†–ï–ù–î–ï–†–ò–ù–ì–ê EMAIL
  console.log('üìß –¢–ï–°–¢ 2: –†–ï–ù–î–ï–†–ò–ù–ì EMAIL –®–ê–ë–õ–û–ù–ê');  
  console.log('-'.repeat(40));

  try {
    const agent2 = new DesignSpecialistAgentV2();

         const input2: DesignSpecialistInputV2 = {
       task_type: 'render_email',
       content_package: {
         content: {
           subject: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É —Ä–∞—Å—Å—ã–ª–∫—É!',
           preheader: '–ì–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –ø–æ—Ç—Ä—è—Å–∞—é—â–µ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É',
           body: `
             <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h1>
             <p>–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.</p>
             <p>–í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å:</p>
             <ul>
               <li>–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –∏–¥–µ–∏</li>
               <li>–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</li>
               <li>–ù–æ–≤–æ—Å—Ç–∏ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏</li>
             </ul>
             <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!</p>
           `,
           cta: '–ß–∏—Ç–∞—Ç—å –Ω–∞—à—É –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç–∞—Ç—å—é'
         },
         brand_guidelines: {
           colors: {
             primary: '#2563EB',
             secondary: '#EF4444',
             accent: '#10B981',
             background: '#F8FAFC',
             text: '#1E293B'
           },
           fonts: {
             primary: 'Inter',
             secondary: 'Roboto'
           }
         }
       },
       rendering_requirements: {
         template_type: 'newsletter',
         email_client_optimization: 'universal',
         responsive_design: true,
         include_dark_mode: true
       }
     };

     console.log('‚è±Ô∏è  –ó–∞–ø—É—Å–∫ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ email...');
     const startTime2 = Date.now();
     const result2 = await agent2.executeTask(input2);
     const executionTime2 = Date.now() - startTime2;

         console.log(`‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ ${executionTime2}ms`);
     console.log(`üìä –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: ${result2.success}`);
     console.log(`üìÑ MJML —à–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω: ${result2.results.rendering?.mjml_source ? '–î–ê' : '–ù–ï–¢'}`);

     if (result2.results.rendering?.mjml_source) {
       const mjmlFile = path.join(outputDir, 'demo-email-template.mjml');
       fs.writeFileSync(mjmlFile, result2.results.rendering.mjml_source);
       console.log(`üíæ MJML —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${mjmlFile}`);
       console.log(`üìè –†–∞–∑–º–µ—Ä —à–∞–±–ª–æ–Ω–∞: ${result2.results.rendering.mjml_source.length} —Å–∏–º–≤–æ–ª–æ–≤`);
     }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const outputFile2 = path.join(outputDir, 'demo-email-render-result.json');
    const outputData2 = {
      test_name: 'Email Rendering Demo',
      timestamp: new Date().toISOString(),
      execution_time_ms: executionTime2,
      input: input2,
             result: {
         ...result2,
         mjml_template: result2.results.rendering?.mjml_source ? `${result2.results.rendering.mjml_source.length} characters` : null
       },
      performance: {
        memory_usage: process.memoryUsage(),
        execution_time_ms: executionTime2
      }
    };

    fs.writeFileSync(outputFile2, JSON.stringify(outputData2, null, 2));
    console.log(`üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${outputFile2}`);
    console.log('');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ email:', error);
    console.log('');
  }

  // 3. –¢–ï–°–¢ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò –î–ò–ó–ê–ô–ù–ê
  console.log('üé® –¢–ï–°–¢ 3: –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –î–ò–ó–ê–ô–ù–ê');
  console.log('-'.repeat(40));

  try {
    const agent3 = new DesignSpecialistAgentV2();

         const input3: DesignSpecialistInputV2 = {
       task_type: 'optimize_design',
       content_package: {
         content: {
           subject: '–ê–Ω–æ–Ω—Å –∑–∞–ø—É—Å–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞',
           preheader: '–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ',
           body: '–ü–æ—Å–ª–µ –º–µ—Å—è—Ü–µ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º—ã —Ä–∞–¥—ã –∞–Ω–æ–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—É—Å–∫ –Ω–∞—à–µ–π –Ω–æ–≤–µ–π—à–µ–π –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏.',
           cta: '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –ø—Ä–æ–¥—É–∫—Ç–µ'
         },
         brand_guidelines: {
           colors: {
             primary: '#8B5CF6',
             secondary: '#06B6D4',
             accent: '#F59E0B'
           },
           fonts: {
             primary: 'Poppins',
             secondary: 'Source Sans Pro'
           }
         }
       },
       rendering_requirements: {
         template_type: 'promotional',
         email_client_optimization: 'all',
         responsive_design: true
       }
     };

     console.log('‚è±Ô∏è  –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–∏–∑–∞–π–Ω–∞...');
     const startTime3 = Date.now();
     const result3 = await agent3.executeTask(input3);
     const executionTime3 = Date.now() - startTime3;

         console.log(`‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ ${executionTime3}ms`);
     console.log(`üìä –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: ${result3.success}`);
     console.log(`üí° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: ${result3.results.optimization ? '–î–ê' : '–ù–ï–¢'}`);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const outputFile3 = path.join(outputDir, 'demo-design-optimization-result.json');
    const outputData3 = {
      test_name: 'Design Optimization Demo',
      timestamp: new Date().toISOString(),
      execution_time_ms: executionTime3,
      input: input3,
      result: result3,
      performance: {
        memory_usage: process.memoryUsage(),
        execution_time_ms: executionTime3
      }
    };

    fs.writeFileSync(outputFile3, JSON.stringify(outputData3, null, 2));
    console.log(`üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${outputFile3}`);
    console.log('');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–∏–∑–∞–π–Ω–∞:', error);
    console.log('');
  }

  // 4. –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò (–ö–û–ù–ö–£–†–ï–ù–¢–ù–´–ï –ó–ê–ü–†–û–°–´)
  console.log('‚ö° –¢–ï–°–¢ 4: –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨ (–ö–û–ù–ö–£–†–ï–ù–¢–ù–´–ï –ó–ê–ü–†–û–°–´)');
  console.log('-'.repeat(40));

  try {
    const concurrentRequests = 3;
    const promises: Promise<any>[] = [];
    const startTimeTotal = Date.now();

    console.log(`üöÄ –ó–∞–ø—É—Å–∫ ${concurrentRequests} –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤...`);

    for (let i = 0; i < concurrentRequests; i++) {
      const agent = new DesignSpecialistAgentV2();
             const input: DesignSpecialistInputV2 = {
         task_type: 'find_assets',
         content_package: {
           content: {
             subject: `–¢–µ—Å—Ç–æ–≤—ã–π email ${i + 1}`,
             preheader: `–¢–µ—Å—Ç–æ–≤—ã–π preheader ${i + 1}`,
             body: `–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è email ${i + 1}`,
             cta: `CTA ${i + 1}`
           },
           brand_guidelines: {
             colors: { primary: '#000000' },
             fonts: { primary: 'Arial' }
           }
         },
         asset_requirements: {
           tags: ['test'],
           emotional_tone: 'neutral',
           target_count: 3
         }
       };

       promises.push(agent.executeTask(input));
    }

    const results = await Promise.all(promises);
    const totalExecutionTime = Date.now() - startTimeTotal;

    console.log(`‚úÖ –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã –∑–∞ ${totalExecutionTime}ms`);
    console.log(`üìä –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—Ä–æ—Å: ${Math.round(totalExecutionTime / concurrentRequests)}ms`);

         results.forEach((result, index) => {
       console.log(`   –ó–∞–ø—Ä–æ—Å ${index + 1}: ${result.success ? '‚úÖ –£—Å–ø–µ—Ö' : '‚ùå –û—à–∏–±–∫–∞'} (${result.trace_id})`);
     });

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    const outputFile4 = path.join(outputDir, 'demo-performance-result.json');
    const outputData4 = {
      test_name: 'Performance Demo',
      timestamp: new Date().toISOString(),
      concurrent_requests: concurrentRequests,
      total_execution_time_ms: totalExecutionTime,
      average_time_per_request_ms: Math.round(totalExecutionTime / concurrentRequests),
             results_summary: results.map((result, index) => ({
         request_id: index + 1,
         task_completed: result.success,
         trace_id: result.trace_id
       })),
      performance: {
        memory_usage: process.memoryUsage(),
        total_execution_time_ms: totalExecutionTime
      }
    };

    fs.writeFileSync(outputFile4, JSON.stringify(outputData4, null, 2));
    console.log(`üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${outputFile4}`);
    console.log('');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:', error);
    console.log('');
  }

  // –ò–¢–û–ì–ò
  console.log('üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê');
  console.log('='.repeat(60));
  console.log(`üìÅ –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${outputDir}`);
  console.log('');
  console.log('üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:');
  
  try {
    const files = fs.readdirSync(outputDir).filter(f => f.startsWith('demo-'));
    files.forEach(file => {
      const filePath = path.join(outputDir, file);
      const stats = fs.statSync(filePath);
      console.log(`   üìÑ ${file} (${stats.size} –±–∞–π—Ç)`);
    });
  } catch (error) {
    console.log('   (–Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤)');
  }

  console.log('');
  console.log('üèÜ DesignSpecialistAgentV2 —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω!');
  console.log('   –ê–≥–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é üöÄ');
}

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
if (require.main === module) {
  main().catch(error => {
    console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error);
    process.exit(1);
  });
} 