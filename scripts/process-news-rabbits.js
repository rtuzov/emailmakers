#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–∏—Å—Ç–∞ "–ó–∞–π—Ü—ã –ù–æ–≤–æ—Å—Ç–∏" –∏–∑ Figma
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç —Å GPT-4 –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–≥–æ–≤ –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
 */

const { processNewsRabbits } = require('../src/agent/tools/figma-news-rabbits-processor');
const path = require('path');

async function main() {
  console.log('üê∞ –ó–ê–ü–£–°–ö –û–ë–†–ê–ë–û–¢–ö–ò "–ó–ê–ô–¶–´ –ù–û–í–û–°–¢–ò"');
  console.log('‚ïê'.repeat(50));

  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏
  const params = {
    figmaUrl: 'https://www.figma.com/design/GBnGxSQlfM1XhjSkLHogk6/%F0%9F%8C%88-%D0%91%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B0-%D0%BC%D0%B0%D1%80%D0%BA%D0%B5%D1%82%D0%B8%D0%BD%D0%B3%D0%B0--Copy-?t=z7QX9Qp6s7y2dhFi-0',
    outputDirectory: path.join(process.cwd(), `news-rabbits-output-${Date.now()}`),
    context: {
      campaign_type: 'newsletter',
      content_theme: '–Ω–æ–≤–æ—Å—Ç–∏ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–π –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π',
      target_audience: '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–µ—Ä–≤–∏—Å–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –±–∏–ª–µ—Ç–æ–≤',
      brand_guidelines: [
        '–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ç–æ–Ω',
        '–ø–æ–∑–∏—Ç–∏–≤–Ω–∞—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è',
        '–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ—Å—Ç—å',
        '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º'
      ]
    }
  };

  try {
    console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:');
    console.log(`   Figma URL: ${params.figmaUrl}`);
    console.log(`   –í—ã—Ö–æ–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${params.outputDirectory}`);
    console.log(`   –¢–∏–ø –∫–∞–º–ø–∞–Ω–∏–∏: ${params.context.campaign_type}`);
    console.log(`   –¢–µ–º–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${params.context.content_theme}`);
    console.log('');

    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
    const result = await processNewsRabbits(params);

    if (result.success) {
      console.log('‚úÖ –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
      console.log('‚îÄ'.repeat(40));
      
      const { data } = result;
      console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
      console.log(`   –í—Å–µ–≥–æ –∞—Å—Å–µ—Ç–æ–≤: ${data.summary.totalAssets}`);
      console.log(`   –° –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏: ${data.summary.assetsWithVariants}`);
      console.log(`   –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤: ${data.summary.uniqueTags.length}`);
      console.log('');

      console.log(`üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${data.outputDirectory}`);
      console.log(`üìÑ –û—Ç—á–µ—Ç: ${data.report}`);
      console.log('');

      console.log('üè∑Ô∏è –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–µ–≥–∏:');
      data.summary.uniqueTags.forEach(tag => {
        console.log(`   ‚Ä¢ ${tag}`);
      });
      console.log('');

      console.log('üìã –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∞—Å—Å–µ—Ç—ã:');
      data.processedAssets.forEach((asset, index) => {
        console.log(`   ${index + 1}. ${asset.originalName}`);
        console.log(`      ‚Üí ${asset.newName}`);
        console.log(`      –¢–µ–≥–∏: ${asset.tags.join(', ')}`);
        console.log(`      –í–∞—Ä–∏–∞–Ω—Ç—ã: ${asset.metadata.hasVariants ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`      Confidence: ${(asset.metadata.aiAnalysis.confidence * 100).toFixed(1)}%`);
        console.log('');
      });

    } else {
      console.error('‚ùå –û–®–ò–ë–ö–ê –û–ë–†–ê–ë–û–¢–ö–ò:');
      console.error(result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
    }

  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    console.error(error.stack);
    process.exit(1);
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
function checkEnvironment() {
  const requiredVars = ['FIGMA_ACCESS_TOKEN', 'OPENAI_API_KEY'];
  const missing = requiredVars.filter(varName => !process.env[varName]);

  if (missing.length > 0) {
    console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
    missing.forEach(varName => {
      console.error(`   ‚Ä¢ ${varName}`);
    });
    console.error('');
    console.error('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env.local —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª—é—á–∏.');
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  checkEnvironment();
  main().catch(error => {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
}

module.exports = { main }; 