#!/usr/bin/env node

/**
 * –°–±–æ—Ä –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Figma –ø—Ä–æ–µ–∫—Ç–∞
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–ò–∫–æ–Ω–∫–∏ –¥–æ–ø.—É—Å–ª—É–≥"
 */

const fs = require('fs');
const FigmaDataProcessor = require('./figma-data-processor');

// –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–ò–∫–æ–Ω–∫–∏ –¥–æ–ø.—É—Å–ª—É–≥"
const iconsServiceData = {
  "metadata": {
    "framework": "html",
    "source": "selection",
    "processed": 6709,
    "selectedNode": {
      "id": "1816:2",
      "name": "–ò–∫–æ–Ω–∫–∏ –¥–æ–ø.—É—Å–ª—É–≥",
      "type": "CANVAS",
      "childCount": 17
    }
  },
  "data": {
    "id": "1816:2",
    "name": "–ò–∫–æ–Ω–∫–∏ –¥–æ–ø.—É—Å–ª—É–≥",
    "type": "CANVAS",
    "children": [
      {
        "id": "1828:9",
        "name": "Icons_KupiBilet_MRK Main",
        "type": "COMPONENT_SET"
      },
      {
        "id": "1828:369",
        "name": "published!",
        "type": "TEXT",
        "bounds": {
          "x": -1580,
          "y": -722.1463623046875,
          "width": 1258,
          "height": 313
        },
        "css": {
          "width": "1258px",
          "height": "313px",
          "fontSize": "256px",
          "fontFamily": "\"SuisseIntl-SemiBold\", Suisse Int'l",
          "boxShadow": "0 0 0 4px rgb(75, 255, 126)"
        },
        "role": {
          "type": "text",
          "hierarchy": 1,
          "contentType": "text",
          "textAlign": "left"
        },
        "accessibility": {
          "ariaLabel": "published!"
        },
        "tokens": [
          {
            "name": "published!-font-size",
            "value": "256px",
            "type": "typography"
          },
          {
            "name": "published!-line-height",
            "value": "312.8467712402344px",
            "type": "typography"
          },
          {
            "name": "published!-border",
            "value": "4px solid rgb(75, 255, 126)",
            "type": "border"
          }
        ],
        "text": "published!",
        "textStyle": {
          "fontFamily": "Suisse Int'l",
          "fontSize": 256,
          "lineHeight": 312.8467712402344
        }
      },
      {
        "id": "1828:370",
        "name": "Group 567408",
        "type": "GROUP",
        "bounds": {
          "x": -1580,
          "y": -328.7157897949219,
          "width": 1806.34375,
          "height": 361.75555419921875
        },
        "css": {
          "width": "1806.34375px",
          "height": "361.75555419921875px",
          "borderRadius": "0px 0px 0px 0px"
        }
      },
      {
        "id": "1828:378",
        "name": "!",
        "type": "FRAME",
        "bounds": {
          "x": -1580,
          "y": 141,
          "width": 712,
          "height": 71
        },
        "css": {
          "width": "712px",
          "height": "71px",
          "padding": "13px 36px 13px 36px",
          "gap": "8px",
          "borderRadius": "64px",
          "boxShadow": "inset 0 0 0 1px rgb(75, 255, 126)",
          "display": "flex",
          "flexDirection": "row"
        },
        "layout": {
          "mode": "HORIZONTAL",
          "direction": "row",
          "gap": 8,
          "padding": "13px 36px 13px 36px"
        }
      },
      {
        "id": "2610:275",
        "name": "Note",
        "type": "FRAME",
        "bounds": {
          "x": 1258,
          "y": 840.6568603515625,
          "width": 319,
          "height": 313
        },
        "css": {
          "width": "319px",
          "height": "313px",
          "padding": "16px 16px 16px 16px",
          "gap": "16px",
          "backgroundColor": "rgb(255, 223, 128)",
          "borderRadius": "8px",
          "boxShadow": "inset 0 0 0 1px rgb(221, 221, 221), 0px 4px 10px 0px rgba(0, 0, 0, 0.05000000074505806)",
          "display": "flex",
          "flexDirection": "column"
        },
        "tokens": [
          {
            "name": "Note-fill-0",
            "value": "rgb(255, 223, 128)",
            "type": "color"
          },
          {
            "name": "Note-padding",
            "value": "16px 16px 16px 16px",
            "type": "spacing"
          },
          {
            "name": "Note-drop-shadow-0",
            "value": "0px 4px 10px 0px rgba(0, 0, 0, 0.05000000074505806)",
            "type": "shadow"
          },
          {
            "name": "Note-border",
            "value": "1px solid rgb(221, 221, 221)",
            "type": "border"
          },
          {
            "name": "Note-border-radius",
            "value": "8px",
            "type": "border"
          }
        ],
        "layout": {
          "mode": "VERTICAL",
          "direction": "column",
          "gap": 16,
          "padding": "16px"
        }
      },
      // –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–∫–æ–Ω–æ–∫ –¥–ª—è –¥–æ–ø. —É—Å–ª—É–≥
      {
        "id": "2635:525",
        "name": "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã",
        "type": "FRAME",
        "bounds": {
          "x": 1120,
          "y": 840.6568603515625,
          "width": 68,
          "height": 68
        },
        "css": {
          "width": "68px",
          "height": "68px"
        }
      },
      {
        "id": "2635:491",
        "name": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏",
        "type": "FRAME",
        "bounds": {
          "x": 1120,
          "y": 934.6568603515625,
          "width": 68,
          "height": 68
        },
        "css": {
          "width": "68px",
          "height": "68px"
        }
      },
      {
        "id": "2635:507",
        "name": "–û—Ç–≤–µ—Ç—ã –°–ª—É–∂–±—ã –∑–∞–±–æ—Ç—ã",
        "type": "FRAME",
        "bounds": {
          "x": 1120,
          "y": 1028.6568603515625,
          "width": 68,
          "height": 68
        },
        "css": {
          "width": "68px",
          "height": "68px"
        }
      },
      {
        "id": "2635:572",
        "name": "–ó–∞–ø–∏—Å–Ω–∞—è –∫–Ω–∏–∂–∫–∞",
        "type": "FRAME",
        "bounds": {
          "x": 1120,
          "y": 1122.6568603515625,
          "width": 68,
          "height": 68
        },
        "css": {
          "width": "68px",
          "height": "68px"
        }
      },
      {
        "id": "2635:549",
        "name": "–°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã",
        "type": "FRAME",
        "bounds": {
          "x": 1120,
          "y": 1216.6568603515625,
          "width": 68,
          "height": 68
        },
        "css": {
          "width": "68px",
          "height": "68px"
        }
      },
      {
        "id": "2635:473",
        "name": "–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤",
        "type": "FRAME",
        "bounds": {
          "x": 1120,
          "y": 1310.6568603515625,
          "width": 68,
          "height": 68
        },
        "css": {
          "width": "68px",
          "height": "68px"
        }
      }
    ]
  }
};

console.log('üéØ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ê–ù–ê–õ–ò–ó–ê FIGMA –ü–†–û–ï–ö–¢–ê');
console.log('‚ïê'.repeat(50));

const processor = new FigmaDataProcessor();

// –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
console.log('üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ...');
try {
    const previousCSV = fs.readFileSync('figma-complete-analysis-2025-06-26T09-25-47.csv', 'utf8');
    const lines = previousCSV.split('\n');
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${lines.length - 1} –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–∞–ø–∏—Å–µ–π`);
} catch (error) {
    console.log('‚ö†Ô∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–∞—á–∏–Ω–∞–µ–º —Å –Ω—É–ª—è');
}

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
console.log('\nüìÑ –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–ò–∫–æ–Ω–∫–∏ –¥–æ–ø.—É—Å–ª—É–≥"...');
processor.processJSONData(iconsServiceData, '–ò–∫–æ–Ω–∫–∏ –¥–æ–ø.—É—Å–ª—É–≥');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∞–Ω–∞–ª–∏–∑–æ–≤ (—Å–∏–º—É–ª—è—Ü–∏—è)
console.log('üìÑ –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–Ω–µ–µ —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...');

// –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∞–Ω–∞–ª–∏–∑–æ–≤
const previouslyCollectedPages = [
    { name: '–û–±–ª–æ–∂–∫–∞', nodeCount: 4 },
    { name: '–¢–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞', nodeCount: 2 },
    { name: '–ê–π–¥–µ–Ω—Ç–∏–∫–∞', nodeCount: 14 },
    { name: '–õ–æ–≥–æ—Ç–∏–ø—ã –ê–ö', nodeCount: 11 }
];

console.log('\nüìä –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
console.log('‚ïê'.repeat(50));

const currentNodes = processor.processedNodes;
const totalCollectedNodes = currentNodes.length;

console.log(`\nüéØ –¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å:`);
console.log(`  üìÑ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: 5 –∏–∑ 10`);
console.log(`  üìù –ù–æ–≤—ã—Ö –Ω–æ–¥–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–æ: ${currentNodes.length}`);
console.log(`  üé≠ –ü—Ä–∏–º–µ—Ä–Ω–∞—è –æ–±—â–∞—è —Å—É–º–º–∞: ~60+ –Ω–æ–¥–æ–≤`);

// –ê–Ω–∞–ª–∏–∑ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
const newPageStats = {};
currentNodes.forEach(node => {
    const type = node.type || 'Unknown';
    newPageStats[type] = (newPageStats[type] || 0) + 1;
});

console.log(`\nüîß –ù–æ–≤—ã–µ —Ç–∏–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ "–ò–∫–æ–Ω–∫–∏ –¥–æ–ø.—É—Å–ª—É–≥"):`);
Object.entries(newPageStats)
    .sort(([,a], [,b]) => b - a)
    .forEach(([type, count]) => {
        console.log(`  ${type}: ${count}`);
    });

// –ê–Ω–∞–ª–∏–∑ –∏–∫–æ–Ω–æ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
const iconFrames = currentNodes.filter(n => 
    n.type === 'FRAME' && 
    (n.name.includes('–∏–∑–º–µ–Ω–µ–Ω–∏–µ') || 
     n.name.includes('–ó–∞–ø–∏—Å–Ω–∞—è') || 
     n.name.includes('–°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ') ||
     n.name.includes('–°–ø–∏—Å–æ–∫') ||
     n.name.includes('–û—Ç–≤–µ—Ç—ã') ||
     n.name.includes('–ü–æ–¥–ø–∏—Å–∫–∞'))
).length;

console.log(`\nüé® –ê–Ω–∞–ª–∏–∑ –∏–∫–æ–Ω–æ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã:`);
console.log(`  üîß –ò–∫–æ–Ω–æ–∫ –¥–æ–ø. —É—Å–ª—É–≥: ${iconFrames}`);
console.log(`  üìè –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 68x68px`);
console.log(`  üéØ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è: 100%`);

// –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–∫–æ–Ω–æ–∫
const colorsFound = new Set();
currentNodes.forEach(node => {
    if (node.css_background_color) {
        colorsFound.add(node.css_background_color);
    }
    if (node.primary_color) {
        colorsFound.add(node.primary_color);
    }
});

console.log(`\nüé® –¶–≤–µ—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–∫–æ–Ω–æ–∫:`);
Array.from(colorsFound).forEach(color => {
    if (color && color !== '') {
        console.log(`  üé® ${color}`);
    }
});

console.log(`\nüí° –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ù–ê–ë–õ–Æ–î–ï–ù–ò–Ø:`);
console.log(`\n1. üìê –ò–ö–û–ù–û–ß–ù–ê–Ø –°–ò–°–¢–ï–ú–ê:`);
console.log(`   ‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã (68x68px)`);
console.log(`   ‚úÖ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –∏–∫–æ–Ω–æ–∫`);
console.log(`   ‚úÖ –õ–æ–≥–∏—á–µ—Å–∫–∞—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ñ—É–Ω–∫—Ü–∏—è–º`);

console.log(`\n2. üé® –î–ò–ó–ê–ô–ù-–¢–û–ö–ï–ù–´:`);
console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Ü–≤–µ—Ç–∞ (–∂–µ–ª—Ç—ã–π –¥–ª—è –∑–∞–º–µ—Ç–æ–∫)`);
console.log(`   ‚úÖ –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã –∏ —Ä–∞–¥–∏—É—Å—ã`);
console.log(`   ‚ö†Ô∏è –ù—É–∂–Ω–∞ –ø–æ–ª–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–¶–≤–µ—Ç–∞"`);

console.log(`\n3. üèóÔ∏è –ú–ê–ö–ï–¢–ù–ê–Ø –°–ò–°–¢–ï–ú–ê:`);
console.log(`   ‚úÖ Flex-layout —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏`);
console.log(`   ‚úÖ –°–∏—Å—Ç–µ–º–∞ gap –∏ padding`);
console.log(`   ‚úÖ Responsive-ready —Å—Ç—Ä—É–∫—Ç—É—Ä–∞`);

console.log(`\nüöÄ –°–õ–ï–î–£–Æ–©–ò–ï –ü–†–ò–û–†–ò–¢–ï–¢–´:`);
console.log(`\n1. üé® –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û - –¶–≤–µ—Ç–∞:`);
console.log(`   ‚Ä¢ –°—Ç—Ä–∞–Ω–∏—Ü–∞ "–¶–≤–µ—Ç–∞" —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Å–Ω–æ–≤–Ω—É—é –ø–∞–ª–∏—Ç—Ä—É`);
console.log(`   ‚Ä¢ –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –±—Ä–µ–Ω–¥–∏–Ω–≥–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é`);
console.log(`   ‚Ä¢ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å–±–æ—Ä–∞`);

console.log(`\n2. üê∞ –ó–∞–π—Ü—ã –∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏:`);
console.log(`   ‚Ä¢ –í–∞–∂–Ω—ã –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å—Ç–∏–ª—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π`);
console.log(`   ‚Ä¢ –°–æ–¥–µ—Ä–∂–∞—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç`);

console.log(`\n3. üë• –õ—é–¥–∏:`);
console.log(`   ‚Ä¢ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤`);
console.log(`   ‚Ä¢ –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å`);

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
const timestamp = new Date().toISOString().slice(0, 19).replace(/:/g, '-');
const filename = `figma-analysis-updated-with-icons-${timestamp}.csv`;
processor.saveToCSV(filename);

console.log(`\nüíæ –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –î–ê–ù–ù–´–ï –°–û–•–†–ê–ù–ï–ù–´:`);
console.log(`üìÅ –§–∞–π–ª: ${filename}`);

// –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
const challengesReport = {
    timestamp: new Date().toISOString(),
    completedPages: [
        '–û–±–ª–æ–∂–∫–∞ (4 nodes)',
        '–¢–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞ (2 nodes)', 
        '–ê–π–¥–µ–Ω—Ç–∏–∫–∞ (14 nodes)',
        '–õ–æ–≥–æ—Ç–∏–ø—ã –ê–ö (11 nodes)',
        '–ò–∫–æ–Ω–∫–∏ –¥–æ–ø.—É—Å–ª—É–≥ (17 nodes)'
    ],
    challenges: {
        '–¶–≤–µ—Ç–∞': {
            issue: 'Token limit exceeded (300+ nodes)',
            attempts: ['depth=1', 'minimal extraction'],
            status: 'blocked',
            criticality: 'high',
            suggestion: 'Use Node.js collector or segment approach'
        },
        '–õ—é–¥–∏': {
            issue: 'Token limit exceeded (200+ nodes)',
            attempts: ['depth=1'],
            status: 'blocked', 
            criticality: 'high',
            suggestion: 'Segment by photo groups'
        },
        '–¢–µ–≥–∏ –¥–ª—è —Ñ–æ—Ç–æ': {
            issue: 'Token limit exceeded even at depth=1',
            attempts: ['depth=1'],
            status: 'blocked',
            criticality: 'medium',
            suggestion: 'Process in smaller chunks'
        }
    },
    recommendations: [
        'Use alternative collection method for large pages',
        'Focus on Color page as highest priority',
        'Consider segmented approach for photo-heavy pages'
    ]
};

const challengesFilename = `figma-collection-challenges-${timestamp}.json`;
fs.writeFileSync(challengesFilename, JSON.stringify(challengesReport, null, 2));

console.log(`üìã –û—Ç—á–µ—Ç –æ —Å–ª–æ–∂–Ω–æ—Å—Ç—è—Ö: ${challengesFilename}`);
console.log(`\nüéØ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Node.js —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü!`);

module.exports = processor;