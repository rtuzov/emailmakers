const { consolidateTags } = require('./consolidate-tags');
const { createAIOptimizedTags } = require('./create-ai-tags-file');

/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Ç–µ–≥–æ–≤:
 * 1. –°–æ–±–∏—Ä–∞–µ—Ç –≤—Å–µ tag-dictionary.json —Ñ–∞–π–ª—ã –≤ consolidated-tags.json
 * 2. –°–æ–∑–¥–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª ai-optimized-tags.json –¥–ª—è –ò–ò
 */

async function consolidateAllTags() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Ç–µ–≥–æ–≤...\n');
  
  try {
    // –®–∞–≥ 1: –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ tag-dictionary.json —Ñ–∞–π–ª—ã
    console.log('üìã –®–∞–≥ 1: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö tag-dictionary.json —Ñ–∞–π–ª–æ–≤...');
    const consolidatedData = await consolidateTags();
    console.log('‚úÖ –®–∞–≥ 1 –∑–∞–≤–µ—Ä—à–µ–Ω\n');
    
    // –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –ò–ò
    console.log('ü§ñ –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –ò–ò...');
    const aiOptimizedData = createAIOptimizedTags();
    console.log('‚úÖ –®–∞–≥ 2 –∑–∞–≤–µ—Ä—à–µ–Ω\n');
    
    // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('üéâ –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Ç–µ–≥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log('üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`   üìÅ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–∞–ø–æ–∫: ${consolidatedData.metadata.total_folders}`);
    console.log(`   üìÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${consolidatedData.metadata.total_files}`);
    console.log(`   üè∑Ô∏è –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤: ${consolidatedData.metadata.total_unique_tags}`);
    console.log(`   üî• –¢–æ–ø-5 —Ç–µ–≥–æ–≤: ${Object.keys(consolidatedData.statistics.most_common_tags_global).slice(0, 5).join(', ')}`);
    
    console.log('\nüìÑ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:');
    console.log('   üìã consolidated-tags.json - –ø–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
    console.log('   ü§ñ ai-optimized-tags.json - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ò–ò');
    
    console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:');
    console.log('   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ai-optimized-tags.json –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –Ω–µ–π—Ä–æ—Å–µ—Ç—å');
    console.log('   ‚Ä¢ –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ò–ò –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–∏—Å–∫—É');
    console.log('   ‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–µ–≥–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ø–æ –ø–∞–ø–∫–∞–º –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞');
    
    return {
      consolidated: consolidatedData,
      aiOptimized: aiOptimizedData
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
if (require.main === module) {
  consolidateAllTags()
    .then(() => {
      console.log('\n‚úÖ –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      process.exit(0);
    })
    .catch(error => {
      console.error('\n‚ùå –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π:', error);
      process.exit(1);
    });
}

module.exports = { consolidateAllTags }; 