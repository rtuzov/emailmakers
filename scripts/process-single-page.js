#!/usr/bin/env node

/**
 * CLI —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã Figma
 */

const FIGMA_URL = 'https://www.figma.com/design/GBnGxSQlfM1XhjSkLHogk6/%F0%9F%8C%88-%D0%91%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B0-%D0%BC%D0%B0%D1%80%D0%BA%D0%B5%D1%82%D0%B8%D0%BD%D0%B3%D0%B0--Copy-?t=z7QX9Qp6s7y2dhFi';
const API_BASE = 'http://localhost:3000';

// –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
const AVAILABLE_PAGES = {
  '—Ü–≤–µ—Ç–∞': { name: '–¶–≤–µ—Ç–∞', id: '930:967' },
  '–∞–π–¥–µ–Ω—Ç–∏–∫–∞': { name: '–ê–π–¥–µ–Ω—Ç–∏–∫–∞', id: '1989:9' },
  '–∑–∞–π—Ü—ã-–æ–±—â–∏–µ': { name: '–ó–∞–π—Ü—ã –æ–±—â–∏–µ', id: '1718:2' },
  '–∑–∞–π—Ü—ã-–ø—Ä–æ—á–µ–µ': { name: '–ó–∞–π—Ü—ã –ø—Ä–æ—á–µ–µ', id: '9622:1080' },
  '–∑–∞–π—Ü—ã-–ø–æ–¥–±–æ—Ä–∫–∞': { name: '–ó–∞–π—Ü—ã –ø–æ–¥–±–æ—Ä–∫–∞', id: '9622:1059' },
  '–∑–∞–π—Ü—ã-–Ω–æ–≤–æ—Å—Ç–∏': { name: '–ó–∞–π—Ü—ã –Ω–æ–≤–æ—Å—Ç–∏', id: '9622:1068' },
  '–∑–∞–π—Ü—ã-—ç–º–æ—Ü–∏–∏': { name: '–ó–∞–π—Ü—ã —ç–º–æ—Ü–∏–∏', id: '9622:1076' },
  '–∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏': { name: '–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏', id: '3077:274' },
  '–∏–∫–æ–Ω–∫–∏': { name: '–ò–∫–æ–Ω–∫–∏ –¥–æ–ø.—É—Å–ª—É–≥', id: '1816:2' },
  '–ª–æ–≥–æ—Ç–∏–ø—ã': { name: '–õ–æ–≥–æ—Ç–∏–ø—ã –ê–ö', id: '2926:2' }
};

async function processSinglePage(pageKey) {
  try {
    if (!pageKey || !AVAILABLE_PAGES[pageKey]) {
      console.log('‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
      showAvailablePages();
      return;
    }

    const page = AVAILABLE_PAGES[pageKey];
    
    console.log(`üéØ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: "${page.name}"`);
    console.log(`üîó Figma URL: ${FIGMA_URL}`);

         const requestBody = {
       figmaUrl: FIGMA_URL,
       outputDirectory: `./figma-page-${pageKey}-${Date.now()}`,
       targetPageId: page.id,  // –î–æ–±–∞–≤–ª—è–µ–º ID –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
       context: null  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥–Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
     };

         console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:');
     console.log(`   üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞: ${page.name} (${page.id})`);
     console.log(`   üìÅ –ü–∞–ø–∫–∞: ${requestBody.outputDirectory}`);
     console.log(`   üé® –ö–æ–Ω—Ç–µ–∫—Å—Ç: ${requestBody.context ? '–Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π' : '—á–∏—Å—Ç—ã–π –∞–Ω–∞–ª–∏–∑'}`);

    console.log('\n‚è≥ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É...');

    const response = await fetch(`${API_BASE}/api/figma/process-single-page`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(requestBody)
    });

    const data = await response.json();

    if (!response.ok) {
      throw new Error(`API Error: ${response.status} - ${data.error || data.details || 'Unknown error'}`);
    }

    if (!data.success) {
      throw new Error(`Processing failed: ${data.error || 'Unknown error'}`);
    }

    console.log('\nüéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log(`   üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞: ${page.name}`);
    console.log(`   üñºÔ∏è  –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∞—Å—Å–µ—Ç–æ–≤: ${data.data.processedAssets}`);
    console.log(`   üè∑Ô∏è  –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤: ${data.data.summary.uniqueTags}`);
    console.log(`   üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${data.data.outputDirectory}`);

    console.log('\n‚ú® –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.');

  } catch (error) {
    console.error('\nüí• –û—à–∏–±–∫–∞:', error.message);
    
    if (error.message.includes('ECONNREFUSED')) {
      console.error('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: npm run dev');
    } else if (error.message.includes('FIGMA_ACCESS_TOKEN')) {
      console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω FIGMA_ACCESS_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      console.error('   –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª .env.local');
    } else if (error.message.includes('API Error: 500')) {
      console.error('‚ùå –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞.');
    } else if (error.message.includes('404')) {
      console.error('‚ùå API endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å /api/figma/process-single-page');
    }
    
    process.exit(1);
  }
}

function showAvailablePages() {
  console.log('\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:');
  Object.entries(AVAILABLE_PAGES).forEach(([key, page]) => {
    console.log(`   ${key.padEnd(15)} ‚Üí "${page.name}"`);
  });
  
  console.log('\nüí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
  console.log('   node process-single-page.js –∑–∞–π—Ü—ã-–ø—Ä–æ—á–µ–µ');
  console.log('   node process-single-page.js –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏');
  console.log('   node process-single-page.js –∑–∞–π—Ü—ã-—ç–º–æ—Ü–∏–∏');
}

function showHelp() {
  console.log(`
üéØ Figma Single Page Processor - CLI

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –û–î–ù–£ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É Figma —Ñ–∞–π–ª–∞.

üìã –ö–æ–º–∞–Ω–¥—ã:
  node process-single-page.js <page-key>     - –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  node process-single-page.js list          - –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  node process-single-page.js help          - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞:
  1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: npm run dev
  2. –î–æ–±–∞–≤—å—Ç–µ FIGMA_ACCESS_TOKEN –≤ .env.local

üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç:
  –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–∞–ø–∫—É:
  - figma-page-[page-key]-[timestamp]/
    ‚îú‚îÄ‚îÄ *.png                    (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
    ‚îú‚îÄ‚îÄ tag-dictionary.json      (—Å–ª–æ–≤–∞—Ä—å —Ç–µ–≥–æ–≤)
    ‚îú‚îÄ‚îÄ agent-file-mapping.json  (–¥–ª—è –∞–≥–µ–Ω—Ç–∞)
    ‚îî‚îÄ‚îÄ page-processing-report.json (–æ—Ç—á–µ—Ç)

‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
  - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
  - –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ç–µ–≥–æ–≤ (–º–∞–∫—Å–∏–º—É–º 6 —Ç–µ–≥–æ–≤ –Ω–∞ —Ñ–∞–π–ª)
  - –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  - –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
`);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);
const command = args[0];

switch (command) {
  case 'list':
    showAvailablePages();
    break;
  case 'help':
  case '--help':
  case '-h':
    showHelp();
    break;
  case undefined:
    console.log('‚ùå –£–∫–∞–∂–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏');
    showAvailablePages();
    break;
  default:
    processSinglePage(command);
    break;
} 