/**
 * Test Improved Handoff System
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å–æ–∑–¥–∞–Ω–∏—è handoff —Ñ–∞–π–ª–æ–≤ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö
 */

const fs = require('fs').promises;
const path = require('path');

/**
 * –°–∏–º—É–ª–∏—Ä—É–µ—Ç –≤—ã–∑–æ–≤ createHandoffFile —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–∫–∞–∫ –¥–µ–ª–∞–µ—Ç –∞–≥–µ–Ω—Ç)
 */
async function simulateAgentCall(campaignPath, campaignId) {
  console.log('ü§ñ –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ –∞–≥–µ–Ω—Ç–∞ —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–¥–∞–µ—Ç –∞–≥–µ–Ω—Ç
  const emptySpecialistData = {
    destination_analysis: null,
    market_intelligence: null,
    emotional_profile: null,
    trend_analysis: null,
    consolidated_insights: null,
    travel_intelligence: null,
    collection_metadata: null
  };
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É createHandoffFile
  const hasValidSpecialistData = emptySpecialistData && 
    Object.keys(emptySpecialistData).some(key => 
      emptySpecialistData[key] && 
      typeof emptySpecialistData[key] === 'object' && 
      Object.keys(emptySpecialistData[key]).length > 0 &&
      !Array.isArray(emptySpecialistData[key])
    );
  
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö: ${hasValidSpecialistData ? '–í–ê–õ–ò–î–ù–´–ï' : '–ü–£–°–¢–´–ï'}`);
  
  let finalSpecialistData = emptySpecialistData;
  
  if (!hasValidSpecialistData) {
    console.log('‚ö†Ô∏è –ê–≥–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–ª –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ specialist_data, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ —Ñ–∞–π–ª–æ–≤ –∫–∞–º–ø–∞–Ω–∏–∏...');
    finalSpecialistData = await forceLoadSpecialistDataFromCampaign(campaignPath);
    
    if (Object.keys(finalSpecialistData).length === 0) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–æ–≤ –∫–∞–º–ø–∞–Ω–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
      finalSpecialistData = emptySpecialistData;
    } else {
      console.log(`‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${Object.keys(finalSpecialistData).length} —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö`);
    }
  } else {
    console.log('‚úÖ –ê–≥–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–ª –≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ specialist_data');
  }
  
  return finalSpecialistData;
}

/**
 * –°–∏–º—É–ª–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 */
async function forceLoadSpecialistDataFromCampaign(campaignPath) {
  console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ specialist_data –∏–∑ —Ñ–∞–π–ª–æ–≤ –∫–∞–º–ø–∞–Ω–∏–∏...');
  
  const dataPath = path.join(campaignPath, 'data');
  const loadedData = {};

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ JSON —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ data
    const files = await fs.readdir(dataPath);
    const jsonFiles = files.filter(file => file.endsWith('.json'));
    
    console.log(`üìÇ –ù–∞–π–¥–µ–Ω–æ ${jsonFiles.length} JSON —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ data –¥–ª—è specialist_data`);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ JSON —Ñ–∞–π–ª—ã
    for (const fileName of jsonFiles) {
      try {
        const filePath = path.join(dataPath, fileName);
        const fileContent = await fs.readFile(filePath, 'utf8');
        const data = JSON.parse(fileContent);
        
        // –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
        let key = fileName.replace('.json', '');
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        if (key.includes('_insights_')) {
          // key_insights_insights.json -> key_insights
          key = key.replace('_insights_insights', '_insights');
        } else if (key.endsWith('-insights')) {
          // travel_intelligence-insights.json -> travel_intelligence
          key = key.replace('-insights', '');
        }
        
        // –ó–∞–º–µ–Ω—è–µ–º –¥–µ—Ñ–∏—Å—ã –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
        key = key.replace(/-/g, '_');
        
        loadedData[key] = data;
        
        console.log(`‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω ${fileName} –∫–∞–∫ '${key}' –¥–ª—è specialist_data`);
      } catch (fileError) {
        console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å ${fileName}: ${fileError.message}`);
      }
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    loadedData.collection_metadata = {
      files_created: jsonFiles.map(file => `data/${file}`),
      total_analyses: jsonFiles.length,
      data_quality_score: 100,
      processing_completed_at: new Date().toISOString(),
      data_types: jsonFiles.map(file => {
        let type = file.replace('.json', '');
        if (type.includes('_insights_')) {
          type = type.replace('_insights_insights', '_insights');
        } else if (type.endsWith('-insights')) {
          type = type.replace('-insights', '');
        }
        return type.replace(/-/g, '_');
      })
    };

    console.log(`üìä –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${Object.keys(loadedData).filter(key => 
      loadedData[key] && typeof loadedData[key] === 'object' && Object.keys(loadedData[key]).length > 0
    ).length} –≤–∞–ª–∏–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö`);
    
    return loadedData;
  } catch (error) {
    console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: ${error.message}`);
    return {};
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π handoff —Ñ–∞–π–ª —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
 */
async function createImprovedHandoffFile(campaignPath, campaignId, specialistData) {
  console.log('\nüìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π handoff —Ñ–∞–π–ª...');
  
  const handoffData = {
    from_specialist: "data-collection",
    to_specialist: "content",
    campaign_id: campaignId,
    campaign_path: campaignPath,
    specialist_data: specialistData,
    handoff_context: {
      summary: "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ handoff —Ñ–∞–π–ª–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö",
      context_for_next: "–í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–æ–≤ –∫–∞–º–ø–∞–Ω–∏–∏",
      recommendations: [
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
        "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
      ],
      success_criteria: [
        "–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã"
      ]
    },
    deliverables: {
      created_files: specialistData.collection_metadata?.files_created?.map(file => ({
        file_name: file.split('/').pop() || file,
        file_path: file,
        file_type: 'data',
        description: `Auto-loaded data file: ${file}`,
        is_primary: false
      })) || [],
      key_outputs: Object.keys(specialistData).filter(key => 
        specialistData[key] && 
        typeof specialistData[key] === 'object' && 
        Object.keys(specialistData[key]).length > 0 &&
        !key.includes('metadata')
      ),
      data_quality_metrics: {
        total_analyses: specialistData.collection_metadata?.total_analyses || 0,
        completion_rate: Math.round((Object.keys(specialistData).filter(key => 
          specialistData[key] && typeof specialistData[key] === 'object' && Object.keys(specialistData[key]).length > 0
        ).length / 8) * 100),
        quality_score: specialistData.collection_metadata?.data_quality_score || 0
      }
    },
    quality_metadata: {
      data_quality_score: specialistData.collection_metadata?.data_quality_score || 100,
      completeness_score: 100,
      validation_status: "passed",
      error_count: 0,
      warning_count: 0,
      processing_time: 500
    },
    trace_id: `test_handoff_${Date.now()}_data-collection`,
    validate_context: true,
    created_at: new Date().toISOString(),
    test_mode: true,
    auto_loaded: true
  };
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º handoff —Ñ–∞–π–ª
  const handoffId = `handoff_${campaignId}_data-collection_to_content`;
  const handoffFilePath = path.join(campaignPath, 'handoffs', `${handoffId}.json`);
  
  // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –ø–∞–ø–∫–∞ handoffs —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  const handoffsDir = path.join(campaignPath, 'handoffs');
  await fs.mkdir(handoffsDir, { recursive: true });
  
  await fs.writeFile(handoffFilePath, JSON.stringify(handoffData, null, 2), 'utf-8');
  
  console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π handoff —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: ${handoffFilePath}`);
  console.log(`üìä –î–∞–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${Object.keys(specialistData).length}`);
  console.log(`üéØ –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${handoffData.deliverables.data_quality_metrics.completion_rate}%`);
  console.log(`üèÜ –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: ${handoffData.deliverables.data_quality_metrics.quality_score}%`);
  
  return handoffFilePath;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
async function main() {
  const campaignId = process.argv[2] || 'campaign_1753795787750_oek9ly4wjbm';
  const campaignPath = path.join(__dirname, '..', 'campaigns', campaignId);
  
  try {
    await fs.access(campaignPath);
    
    console.log(`üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã handoff –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏: ${campaignId}`);
    console.log(`üìÅ –ü—É—Ç—å: ${campaignPath}\n`);
    
    // –®–∞–≥ 1: –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ –∞–≥–µ–Ω—Ç–∞ —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const loadedSpecialistData = await simulateAgentCall(campaignPath, campaignId);
    
    // –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º handoff —Ñ–∞–π–ª —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const handoffFilePath = await createImprovedHandoffFile(campaignPath, campaignId, loadedSpecialistData);
    
    console.log(`\nüéâ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!`);
    console.log(`üìÑ Handoff —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: ${handoffFilePath}`);
    console.log(`\n‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ç–µ–ø–µ—Ä—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –∞–≥–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–µ—Ç –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è!`);
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    console.log(`üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: node scripts/test-improved-handoff.js campaign_1753795787750_oek9ly4wjbm`);
  }
}

main().catch(console.error); 