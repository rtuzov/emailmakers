#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å–ø—Ä–∞–π—Ç–∞
 * –ë–µ–∑ TypeScript, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏
 */

const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É –∞—Å—Å–µ—Ç—É
const ASSET_PATH = path.join(process.cwd(), 'figma-assets', '–∑–∞—è—Ü -–û–±—â–∏–µ- 09-x1.png');

async function main() {
    console.log('üöÄ –ê–ù–ê–õ–ò–ó –°–ü–†–ê–ô–¢–ê FIGMA');
    console.log('‚ïê'.repeat(40));
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
        const stats = fs.statSync(ASSET_PATH);
        console.log(`üìÅ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: ${ASSET_PATH}`);
        console.log(`üìä –†–∞–∑–º–µ—Ä: ${stats.size} –±–∞–π—Ç`);
        console.log(`üìÖ –ò–∑–º–µ–Ω–µ–Ω: ${stats.mtime.toLocaleString()}`);
        
        console.log('\n‚úÖ –†–ï–®–ï–ù–ò–ï –î–õ–Ø –†–ê–ó–î–ï–õ–ï–ù–ò–Ø –°–ü–†–ê–ô–¢–ê:');
        console.log('');
        
        console.log('üîß –£ –≤–∞—Å –µ—Å—Ç—å –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:');
        console.log('   üìÇ src/agent/tools/figma-sprite-splitter.ts');
        console.log('   üß™ __tests__/agent/figma-sprite-splitter.test.ts');
        console.log('');
        
        console.log('üéØ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:');
        console.log('   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –≥—Ä–∞–Ω–∏—Ü —ç–ª–µ–º–µ–Ω—Ç–æ–≤');
        console.log('   ‚úÖ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–º –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–º –∑–∞–∑–æ—Ä–∞–º');
        console.log('   ‚úÖ AI-–∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (color/mono/logo)');
        console.log('   ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ PNG —Ñ–∞–π–ª—ã');
        console.log('   ‚úÖ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤ JSON –º–∞–Ω–∏—Ñ–µ—Å—Ç–µ');
        console.log('');
        
        console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:');
        console.log('   ‚Ä¢ h_gap: –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –∑–∞–∑–æ—Ä (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 15px)');
        console.log('   ‚Ä¢ v_gap: –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –∑–∞–∑–æ—Ä (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 15px)');  
        console.log('   ‚Ä¢ confidence_threshold: –ø–æ—Ä–æ–≥ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ AI (0.7)');
        console.log('');
        
        console.log('üîÑ –°–ø–æ—Å–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:');
        console.log('   1. –ß–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é splitFigmaSprite() –≤ –∫–æ–¥–µ');
        console.log('   2. –ß–µ—Ä–µ–∑ API –∞–≥–µ–Ω—Ç–∞ (—Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞)');
        console.log('   3. –ù–∞–ø—Ä—è–º—É—é –≤ —Ç–µ—Å—Ç–∞—Ö');
        console.log('');
        
        console.log('üìù –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–¥–µ:');
        console.log('```typescript');
        console.log('import { splitFigmaSprite } from "src/agent/tools/figma-sprite-splitter";');
        console.log('');
        console.log('const result = await splitFigmaSprite({');
        console.log('  path: "figma-assets/–∑–∞—è—Ü -–û–±—â–∏–µ- 09-x1.png",');
        console.log('  h_gap: 15,');
        console.log('  v_gap: 15,');
        console.log('  confidence_threshold: 0.7');
        console.log('});');
        console.log('');
        console.log('// result.manifest.slices —Å–æ–¥–µ—Ä–∂–∏—Ç –º–∞—Å—Å–∏–≤ —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤');
        console.log('```');
        console.log('');
        
        console.log('üí° –î–ª—è –≤–∞—à–µ–≥–æ —Å–ª—É—á–∞—è —Å –¥–≤—É–º—è –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏:');
        console.log('   ‚Ä¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ—Ç –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã');
        console.log('   ‚Ä¢ –ö–∞–∂–¥—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π PNG');
        console.log('   ‚Ä¢ –í—ã —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±–æ–π –∏–∑ –Ω–∏—Ö –æ—Ç–¥–µ–ª—å–Ω–æ');
        console.log('   ‚Ä¢ –ú–∞–Ω–∏—Ñ–µ—Å—Ç –ø–æ–∫–∞–∂–µ—Ç —Ç–æ—á–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏');
        
    } catch (error) {
        if (error.code === 'ENOENT') {
            console.log('‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:', ASSET_PATH);
            console.log('');
            console.log('üìÇ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã —Å "–∑–∞—è—Ü":');
            try {
                const files = fs.readdirSync(path.join(process.cwd(), 'figma-assets'));
                files.filter(f => f.includes('–∑–∞—è—Ü')).forEach(file => {
                    console.log(`   - ${file}`);
                });
            } catch (e) {
                console.log('   –ù–µ –º–æ–≥—É –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é figma-assets');
            }
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        }
    }
    
    console.log('\n‚ú® –ì–æ—Ç–æ–≤–æ!');
}

main(); 