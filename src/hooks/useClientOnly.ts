/**
 * üîß CLIENT-ONLY HOOK
 * 
 * –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç hydration mismatches –¥–ª—è client-only –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
 * –°–ª–µ–¥—É–µ—Ç –ª—É—á—à–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º React 18+ –∏ Next.js
 */

import { useEffect, useState } from 'react';

/**
 * Hook –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ client-only –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 * –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç hydration errors –º–µ–∂–¥—É server –∏ client
 */
export function useClientOnly(): boolean {
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    // –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –ø–æ—Å–ª–µ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    setIsClient(true);
  }, []);

  return isClient;
}

/**
 * Hook –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
 * –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–µ–∂–¥—É server/client state
 */
export function useClientData<T>(
  fetchData: () => Promise<T>,
  fallbackData?: T
): {
  data: T | undefined;
  loading: boolean;
  error: Error | null;
  isClient: boolean;
} {
  const [data, setData] = useState<T | undefined>(fallbackData);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<Error | null>(null);
  const isClient = useClientOnly();

  useEffect(() => {
    if (!isClient) return;

    let isCancelled = false;
    setLoading(true);
    setError(null);

    fetchData()
      .then((result) => {
        if (!isCancelled) {
          setData(result);
        }
      })
      .catch((err) => {
        if (!isCancelled) {
          setError(err instanceof Error ? err : new Error(String(err)));
        }
      })
      .finally(() => {
        if (!isCancelled) {
          setLoading(false);
        }
      });

    return () => {
      isCancelled = true;
    };
  }, [isClient]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ—Ç isClient

  return { data, loading, error, isClient };
}