import { z } from 'zod';

/**
 * üéØ BASE AGENT TYPES
 * 
 * –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—Å–µ—Ö —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –≤–≤–æ–¥–∞/–≤—ã–≤–æ–¥–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é
 */

// –ë–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤
export interface BaseAgentInput {
  task_type: string;
  campaign_brief: {
    topic: string;
    campaign_type?: 'promotional' | 'informational' | 'seasonal' | 'urgent' | 'newsletter';
    target_audience?: string;
    destination?: string;
    origin?: string;
  };
  handoff_context?: any;
  trace_id?: string;
}

// –ë–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤
export interface BaseAgentOutput {
  success: boolean;
  task_type: string;
  results: Record<string, any>;
  recommendations: {
    next_agent?: 'content_specialist' | 'design_specialist' | 'quality_specialist' | 'delivery_specialist';
    next_actions?: string[];
    handoff_data?: any;
  };
  analytics: {
    execution_time: number;
    operations_performed: number;
    confidence_score: number;
    agent_efficiency: number;
  };
  error?: string;
}

// Zod —Å—Ö–µ–º–∞ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –±–∞–∑–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∞–≥–µ–Ω—Ç–∞
export const BaseAgentOutputSchema = z.object({
  success: z.boolean(),
  task_type: z.string(),
  results: z.record(z.any()),
  recommendations: z.object({
    next_agent: z.enum(['content_specialist', 'design_specialist', 'quality_specialist', 'delivery_specialist']).optional(),
    next_actions: z.array(z.string()).optional(),
    handoff_data: z.any().optional()
  }),
  analytics: z.object({
    execution_time: z.number(),
    operations_performed: z.number(),
    confidence_score: z.number().min(0).max(100),
    agent_efficiency: z.number().min(0).max(100)
  }),
  error: z.string().optional()
});

// –¢–∏–ø –¥–ª—è –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∞–≥–µ–Ω—Ç–∞
export type ValidatedAgentOutput = z.infer<typeof BaseAgentOutputSchema>;

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤ –∞–≥–µ–Ω—Ç–æ–≤
export interface AgentResponseValidator {
  validateOutput(output: any, agentType: string): {
    valid: boolean;
    errors: string[];
    sanitized?: BaseAgentOutput;
  };
}

// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–¥—ã –æ—à–∏–±–æ–∫ –¥–ª—è –∞–≥–µ–Ω—Ç–æ–≤
export enum AgentErrorCodes {
  INVALID_INPUT = 'INVALID_INPUT',
  TOOL_EXECUTION_FAILED = 'TOOL_EXECUTION_FAILED',
  DATA_EXTRACTION_FAILED = 'DATA_EXTRACTION_FAILED',
  VALIDATION_FAILED = 'VALIDATION_FAILED',
  HANDOFF_FAILED = 'HANDOFF_FAILED',
  TIMEOUT = 'TIMEOUT',
  UNKNOWN_ERROR = 'UNKNOWN_ERROR'
}

// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –∞–≥–µ–Ω—Ç–∞
export class AgentError extends Error {
  constructor(
    public code: AgentErrorCodes,
    message: string,
    public agentType: string,
    public context?: any
  ) {
    super(message);
    this.name = 'AgentError';
  }
}

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –∞–≥–µ–Ω—Ç–æ–≤
export class AgentResponseUtils {
  /**
   * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ—Ç–≤–µ—Ç–∞ OpenAI –∞–≥–µ–Ω—Ç–∞
   */
  static extractDataFromOpenAIResponse(response: any): any {
    if (!response) return null;
    
    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ OpenAI
    return response.content_data ||
           response.data ||
           response.result ||
           response.output ||
           response.results ||
           response;
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–µ
   */
  static createErrorResponse(
    taskType: string,
    error: string | Error,
    startTime: number,
    agentType: string
  ): BaseAgentOutput {
    return {
      success: false,
      task_type: taskType,
      results: {},
      recommendations: {
        next_actions: ['Check error logs', 'Verify input parameters', 'Retry with different parameters']
      },
      analytics: {
        execution_time: Date.now() - startTime,
        operations_performed: 0,
        confidence_score: 0,
        agent_efficiency: 0
      },
      error: error instanceof Error ? error.message : error
    };
  }

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –∞–≥–µ–Ω—Ç–∞
   */
  static validateAndSanitize(output: any, agentType: string): {
    valid: boolean;
    errors: string[];
    sanitized?: BaseAgentOutput;
  } {
    try {
      const result = BaseAgentOutputSchema.parse(output);
      return {
        valid: true,
        errors: [],
        sanitized: result
      };
    } catch (error) {
      if (error instanceof z.ZodError) {
        return {
          valid: false,
          errors: error.errors.map(e => `${e.path.join('.')}: ${e.message}`)
        };
      }
      
      return {
        valid: false,
        errors: [`Unknown validation error for ${agentType}: ${error}`]
      };
    }
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ fallback –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
   */
  static createFallbackContentData(topic: string, language: 'ru' | 'en' = 'ru'): any {
    const templates = {
      ru: {
        subject: `–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: ${topic}`,
        preheader: '–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤—ã–≥–æ–¥–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å!',
        body: `–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è ${topic}. –ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è –≤–∞—Å –æ—Å–æ–±–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å –æ—Ç–ª–∏—á–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏.`,
        cta: '–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ'
      },
      en: {
        subject: `Special Offer: ${topic}`,
        preheader: 'Don\'t miss this great opportunity!',
        body: `Discover ${topic}. We have prepared a special offer with excellent conditions for you.`,
        cta: 'Learn More'
      }
    };

    return {
      complete_content: templates[language]
    };
  }
}

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∞–≥–µ–Ω—Ç–æ–≤
export const AGENT_CONSTANTS = {
  DEFAULT_TIMEOUT: 30000, // 30 seconds
  MAX_RETRIES: 2,
  MIN_CONFIDENCE_SCORE: 70,
  DEFAULT_TEMPERATURE: 0.8,
  MAX_TOKENS: 10000
} as const; 