/**
 * üîÑ STANDARDIZED HANDOFF TOOL
 * 
 * –ï–¥–∏–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö handoff —Ñ–∞–π–ª–æ–≤
 * –º–µ–∂–¥—É –≤—Å–µ–º–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ –≤ Email-Makers —Å–∏—Å—Ç–µ–º–µ.
 * 
 * –ó–∞–º–µ–Ω—è–µ—Ç —Ä–∞–∑—Ä–æ–∑–Ω–µ–Ω–Ω—ã–µ createHandoffFile —Ñ—É–Ω–∫—Ü–∏–∏ –µ–¥–∏–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º.
 */

import { tool } from '@openai/agents';
import { z } from 'zod';
import { promises as fs } from 'fs';
import * as path from 'path';
import { 
  createHandoffMetadata,
  validateHandoffData,
  serializeHandoffData
} from './handoff-schemas';

// ============================================================================
// STANDARDIZED HANDOFF SCHEMA
// ============================================================================

/**
 * –ï–¥–∏–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ handoff —Ñ–∞–π–ª–∞ –¥–ª—è –≤—Å–µ—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
 */
const StandardizedHandoffSchema = z.object({
  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ handoff
  handoff_info: z.object({
    from_specialist: z.enum(['data-collection', 'content', 'design', 'quality', 'delivery']).describe('–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç-–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å'),
    to_specialist: z.enum(['content', 'design', 'quality', 'delivery']).describe('–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç-–ø–æ–ª—É—á–∞—Ç–µ–ª—å'),
    handoff_id: z.string().describe('–£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –ø–µ—Ä–µ–¥–∞—á–∏'),
    created_at: z.string().describe('–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è ISO'),
    campaign_id: z.string().describe('ID –∫–∞–º–ø–∞–Ω–∏–∏'),
    campaign_path: z.string().describe('–ü—É—Ç—å –∫ –∫–∞–º–ø–∞–Ω–∏–∏'),
    trace_id: z.string().nullable().describe('ID —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏'),
    data_version: z.string().default('2.0').describe('–í–µ—Ä—Å–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö'),
    execution_time: z.number().nullable().describe('–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –º—Å')
  }).describe('–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—á–∏'),

  // –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫–∞–º–ø–∞–Ω–∏–∏
  campaign_context: z.object({
    campaign_id: z.string().describe('ID –∫–∞–º–ø–∞–Ω–∏–∏'),
    campaign_name: z.string().optional().describe('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏'),
    brand: z.string().optional().describe('–ë—Ä–µ–Ω–¥'),
    type: z.enum(['promotional', 'transactional', 'newsletter', 'announcement']).optional().describe('–¢–∏–ø –∫–∞–º–ø–∞–Ω–∏–∏'),
    target_audience: z.string().optional().describe('–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è'),
    language: z.string().default('ru').describe('–Ø–∑—ã–∫ –∫–∞–º–ø–∞–Ω–∏–∏'),
    campaign_path: z.string().describe('–ü—É—Ç—å –∫ —Ñ–∞–π–ª–∞–º –∫–∞–º–ø–∞–Ω–∏–∏'),
    status: z.enum(['active', 'draft', 'completed', 'archived']).default('active').describe('–°—Ç–∞—Ç—É—Å –∫–∞–º–ø–∞–Ω–∏–∏')
  }).describe('–ö–æ–Ω—Ç–µ–∫—Å—Ç –∫–∞–º–ø–∞–Ω–∏–∏'),

  // –î–∞–Ω–Ω—ã–µ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
  specialist_outputs: z.object({
    data_collection: z.object({
          destination_analysis: z.object({}).nullable().describe('–ê–Ω–∞–ª–∏–∑ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è'),
    market_intelligence: z.object({}).nullable().describe('–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞'),
    emotional_profile: z.object({}).nullable().describe('–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å'),
    trend_analysis: z.object({}).nullable().describe('–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤'),
    consolidated_insights: z.object({}).nullable().describe('–ö–æ–Ω—Å–æ–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã'),
    travel_intelligence: z.object({}).nullable().describe('–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞'),
    collection_metadata: z.object({}).nullable().describe('–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–±–æ—Ä–∞')
    }).optional().describe('–í—ã—Ö–æ–¥—ã Data Collection Specialist'),

    content: z.object({
          context_analysis: z.object({}).nullable().describe('–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞'),
    date_analysis: z.object({}).nullable().describe('–ê–Ω–∞–ª–∏–∑ –¥–∞—Ç'),
    pricing_analysis: z.object({}).nullable().describe('–ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω'),
    asset_strategy: z.object({}).nullable().describe('–°—Ç—Ä–∞—Ç–µ–≥–∏—è –∞—Å—Å–µ—Ç–æ–≤'),
    generated_content: z.object({}).nullable().describe('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç'),
    technical_requirements: z.object({}).nullable().describe('–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è'),
    design_brief: z.object({}).nullable().describe('–î–∏–∑–∞–π–Ω-–±—Ä–∏—Ñ')
    }).optional().describe('–í—ã—Ö–æ–¥—ã Content Specialist'),

    design: z.object({
          asset_manifest: z.object({}).nullable().describe('–ú–∞–Ω–∏—Ñ–µ—Å—Ç –∞—Å—Å–µ—Ç–æ–≤'),
    mjml_template: z.object({}).nullable().describe('MJML —à–∞–±–ª–æ–Ω'),
    design_decisions: z.object({}).nullable().describe('–î–∏–∑–∞–π–Ω —Ä–µ—à–µ–Ω–∏—è'),
    preview_files: z.array(z.object({})).optional().describe('–§–∞–π–ª—ã –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞'),
    performance_metrics: z.object({}).nullable().describe('–ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'),
    template_specifications: z.object({}).nullable().describe('–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–∞')
    }).optional().describe('–í—ã—Ö–æ–¥—ã Design Specialist'),

    quality: z.object({
          quality_report: z.object({}).nullable().describe('–û—Ç—á—ë—Ç –æ –∫–∞—á–µ—Å—Ç–≤–µ'),
    test_artifacts: z.object({}).nullable().describe('–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'),
    compliance_status: z.object({}).nullable().describe('–°—Ç–∞—Ç—É—Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è'),
    validation_results: z.object({}).nullable().describe('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏'),
    client_compatibility: z.object({}).nullable().describe('–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏'),
    accessibility_results: z.object({}).nullable().describe('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏')
    }).optional().describe('–í—ã—Ö–æ–¥—ã Quality Specialist')
  }).describe('–í—ã—Ö–æ–¥—ã –≤—Å–µ—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤'),

  // –°—Ç–∞—Ç—É—Å —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
  workflow_status: z.object({
    completed_specialists: z.array(z.enum(['data-collection', 'content', 'design', 'quality', 'delivery'])).describe('–ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã'),
    current_specialist: z.enum(['data-collection', 'content', 'design', 'quality', 'delivery']).describe('–¢–µ–∫—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç'),
    next_specialist: z.enum(['content', 'design', 'quality', 'delivery']).nullable().describe('–°–ª–µ–¥—É—é—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç'),
    workflow_phase: z.enum(['data-collection', 'content-generation', 'design-creation', 'quality-assurance', 'delivery-preparation']).describe('–§–∞–∑–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞'),
    completion_percentage: z.number().min(0).max(100).describe('–ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è'),
    estimated_completion_time: z.string().nullable().describe('–û—Ü–µ–Ω–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è')
  }).describe('–°—Ç–∞—Ç—É—Å —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞'),

  // –§–∞–π–ª—ã –∏ —Ä–µ—Å—É—Ä—Å—ã
  deliverables: z.object({
    created_files: z.array(z.object({
      file_name: z.string().describe('–ò–º—è —Ñ–∞–π–ª–∞'),
      file_path: z.string().describe('–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É'),
      file_type: z.enum(['data', 'content', 'template', 'asset', 'report', 'documentation']).describe('–¢–∏–ø —Ñ–∞–π–ª–∞'),
      file_size: z.number().optional().describe('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö'),
      description: z.string().describe('–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∞–π–ª–∞'),
      created_at: z.string().describe('–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è'),
      is_primary: z.boolean().default(false).describe('–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª')
    })).describe('–°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã'),
    
    output_directories: z.array(z.object({
      directory_name: z.string().describe('–ò–º—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏'),
      directory_path: z.string().describe('–ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏'),
      content_type: z.enum(['data', 'content', 'assets', 'templates', 'reports', 'handoffs']).describe('–¢–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ'),
      file_count: z.number().describe('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤'),
      total_size: z.number().optional().describe('–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö')
    })).describe('–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏'),

    key_outputs: z.array(z.string()).describe('–ö–ª—é—á–µ–≤—ã–µ –≤—ã—Ö–æ–¥—ã (—Å–ø–∏—Å–æ–∫ –∏–º—ë–Ω —Ñ–∞–π–ª–æ–≤)')
  }).describe('–ü–æ—Å—Ç–∞–≤–ª—è–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã'),

  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
  handoff_data: z.object({
    summary: z.string().describe('–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã'),
    context_for_next: z.string().describe('–ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞'),
    recommendations: z.array(z.string()).describe('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞'),
    priority_items: z.array(z.string()).describe('–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –≤–Ω–∏–º–∞–Ω–∏—è'),
    potential_issues: z.array(z.string()).describe('–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –¥–ª—è –≤–Ω–∏–º–∞–Ω–∏—è'),
    validation_notes: z.array(z.string()).describe('–ó–∞–º–µ—Ç–∫–∏ –ø–æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏'),
    success_criteria: z.array(z.string()).describe('–ö—Ä–∏—Ç–µ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —ç—Ç–∞–ø–∞')
  }).describe('–î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—á–∏'),

  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞
  quality_metadata: z.object({
    data_quality_score: z.number().min(0).max(100).describe('–û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö'),
    completeness_score: z.number().min(0).max(100).describe('–û—Ü–µ–Ω–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã'),
    validation_status: z.enum(['passed', 'warning', 'failed']).describe('–°—Ç–∞—Ç—É—Å –≤–∞–ª–∏–¥–∞—Ü–∏–∏'),
    error_count: z.number().describe('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫'),
    warning_count: z.number().describe('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π'),
    processing_time: z.number().describe('–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –º—Å'),
    memory_usage: z.number().optional().describe('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –≤ –±–∞–π—Ç–∞—Ö')
  }).describe('–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞')
});

type StandardizedHandoff = z.infer<typeof StandardizedHandoffSchema>;

// Context validation will be handled externally

// ============================================================================
// STANDARDIZED HANDOFF TOOL
// ============================================================================

/**
 * –ï–¥–∏–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö handoff —Ñ–∞–π–ª–æ–≤
 */
const createStandardizedHandoff = tool({
  name: 'createStandardizedHandoff',
  description: '–°–æ–∑–¥–∞—ë—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π handoff —Ñ–∞–π–ª –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –º–µ–∂–¥—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ —Å –µ–¥–∏–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞',
  parameters: z.object({
    // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    from_specialist: z.enum(['data-collection', 'content', 'design', 'quality', 'delivery']).describe('–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç-–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å'),
    to_specialist: z.enum(['content', 'design', 'quality', 'delivery']).describe('–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç-–ø–æ–ª—É—á–∞—Ç–µ–ª—å'),
    campaign_id: z.string().describe('ID –∫–∞–º–ø–∞–Ω–∏–∏'),
    campaign_path: z.string().describe('–ü—É—Ç—å –∫ –∫–∞–º–ø–∞–Ω–∏–∏'),
    
    // –î–∞–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
    specialist_data: z.object({}).describe('–î–∞–Ω–Ω—ã–µ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ (—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞)'),
    
    // –ö–æ–Ω—Ç–µ–∫—Å—Ç handoff
    handoff_context: z.object({
      summary: z.string().describe('–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã'),
      context_for_next: z.string().describe('–ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞'),
      recommendations: z.array(z.string()).describe('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞'),
      priority_items: z.array(z.string()).nullable().describe('–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã'),
      potential_issues: z.array(z.string()).nullable().describe('–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã'),
      success_criteria: z.array(z.string()).nullable().describe('–ö—Ä–∏—Ç–µ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞')
    }).describe('–ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥–∞—á–∏'),
    
    // –§–∞–π–ª—ã –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    deliverables: z.object({
      created_files: z.array(z.object({
        file_name: z.string().describe('–ò–º—è —Ñ–∞–π–ª–∞'),
        file_path: z.string().describe('–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É'),
        file_type: z.enum(['data', 'content', 'template', 'asset', 'report', 'documentation']).describe('–¢–∏–ø —Ñ–∞–π–ª–∞'),
        description: z.string().describe('–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∞–π–ª–∞'),
        is_primary: z.boolean().default(false).describe('–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª')
      })).describe('–°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã'),
      key_outputs: z.array(z.string()).describe('–ö–ª—é—á–µ–≤—ã–µ –≤—ã—Ö–æ–¥—ã')
    }).describe('–ü–æ—Å—Ç–∞–≤–ª—è–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã'),
    
    // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞
    quality_metadata: z.object({
      data_quality_score: z.number().min(0).max(100).describe('–û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö'),
      completeness_score: z.number().min(0).max(100).describe('–û—Ü–µ–Ω–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã'),
      validation_status: z.enum(['passed', 'warning', 'failed']).describe('–°—Ç–∞—Ç—É—Å –≤–∞–ª–∏–¥–∞—Ü–∏–∏'),
      error_count: z.number().default(0).describe('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫'),
      warning_count: z.number().default(0).describe('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π'),
      processing_time: z.number().describe('–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –º—Å')
    }).describe('–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞'),
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    trace_id: z.string().nullable().describe('ID —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏'),
    execution_time: z.number().nullable().describe('–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –º—Å'),
    
    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    validate_context: z.boolean().default(true).describe('–í—ã–ø–æ–ª–Ω—è—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)')
  }),
  
  execute: async (params) => {
    console.log(`\nüîÑ === CREATING STANDARDIZED HANDOFF ===`);
    console.log(`üì§ From: ${params.from_specialist}`);
    console.log(`üì• To: ${params.to_specialist}`);
    console.log(`üÜî Campaign: ${params.campaign_id}`);
    console.log(`üìÅ Path: ${params.campaign_path}`);
    console.log(`üîç Trace ID: ${params.trace_id || 'none'}`);
    console.log(`‚úÖ Context Validation: ${params.validate_context ? 'enabled' : 'disabled'}`);
    
    try {
      // 1. –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤–Ω–µ—à–Ω–µ –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º —ç—Ç–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
      if (params.validate_context) {
        console.log('üîç Context validation is handled externally');
      }
      // –°–æ–∑–¥–∞—ë–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ handoff
      const handoffMetadata = createHandoffMetadata(
        params.from_specialist as any,
        params.to_specialist as any,
        params.trace_id || undefined
      );
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
      const existingData = await loadExistingSpecialistData(params.campaign_path);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
      const updatedSpecialistOutputs = {
        ...existingData.specialist_outputs,
        [params.from_specialist.replace('-', '_')]: params.specialist_data
      };
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å workflow
      const completedSpecialists = [
        ...existingData.workflow_status?.completed_specialists || [],
        params.from_specialist
      ];
      
      const workflowPhaseMap = {
        'data-collection': 'data-collection',
        'content': 'content-generation',
        'design': 'design-creation',
        'quality': 'quality-assurance',
        'delivery': 'delivery-preparation'
      } as const;
      
      // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
      const totalSpecialists = 5; // data-collection, content, design, quality, delivery
      const completionPercentage = (completedSpecialists.length / totalSpecialists) * 100;
      
      // –°–æ–∑–¥–∞—ë–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π handoff –æ–±—ä–µ–∫—Ç
      const standardizedHandoff: StandardizedHandoff = {
        handoff_info: {
          from_specialist: params.from_specialist as any,
          to_specialist: params.to_specialist as any,
          handoff_id: handoffMetadata.handoffId,
          created_at: handoffMetadata.timestamp,
          campaign_id: params.campaign_id,
          campaign_path: params.campaign_path,
          trace_id: params.trace_id,
          data_version: '2.0',
          execution_time: params.execution_time
        },
        
        campaign_context: {
          campaign_id: params.campaign_id,
          campaign_path: params.campaign_path,
          language: 'ru',
          status: 'active'
        },
        
        specialist_outputs: updatedSpecialistOutputs,
        
        workflow_status: {
          completed_specialists: completedSpecialists as any,
          current_specialist: params.to_specialist as any,
          next_specialist: getNextSpecialist(params.to_specialist),
          workflow_phase: workflowPhaseMap[params.from_specialist],
          completion_percentage: completionPercentage,
          estimated_completion_time: null
        },
        
        deliverables: {
          created_files: params.deliverables.created_files.map(file => ({
            ...file,
            created_at: new Date().toISOString(),
            file_size: undefined
          })),
          output_directories: [], // –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
          key_outputs: params.deliverables.key_outputs
        },
        
        handoff_data: {
          summary: params.handoff_context.summary,
          context_for_next: params.handoff_context.context_for_next,
          recommendations: params.handoff_context.recommendations,
          priority_items: params.handoff_context.priority_items || [],
          potential_issues: params.handoff_context.potential_issues || [],
          validation_notes: [],
          success_criteria: params.handoff_context.success_criteria || []
        },
        
        quality_metadata: params.quality_metadata
      };
      
      // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
      const validation = validateHandoffData(standardizedHandoff, StandardizedHandoffSchema);
      if (!validation.success) {
        const errors = 'errors' in validation ? validation.errors : ['Unknown validation error'];
        console.error('‚ùå Handoff validation failed:', errors);
        throw new Error(`Handoff validation failed: ${errors.join(', ')}`);
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º handoff —Ñ–∞–π–ª
      await saveStandardizedHandoff(standardizedHandoff);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
      await updateCampaignMetadata(params.campaign_path, {
        last_handoff: {
          from: params.from_specialist,
          to: params.to_specialist,
          created_at: new Date().toISOString(),
          handoff_id: handoffMetadata.handoffId
        },
        workflow_status: {
          current_phase: workflowPhaseMap[params.from_specialist],
          completion_percentage: completionPercentage,
          last_updated: new Date().toISOString()
        }
      });
      
      console.log('‚úÖ Standardized handoff created successfully');
      console.log(`üìã Handoff ID: ${handoffMetadata.handoffId}`);
      console.log(`üìä Completion: ${completionPercentage.toFixed(1)}%`);
      console.log(`üìÅ Files created: ${params.deliverables.created_files.length}`);
      
      return {
        success: true,
        handoff_id: handoffMetadata.handoffId,
        from_specialist: params.from_specialist,
        to_specialist: params.to_specialist,
        campaign_id: params.campaign_id,
        completion_percentage: completionPercentage,
        files_created: params.deliverables.created_files.length,
        data_quality_score: params.quality_metadata.data_quality_score,
        validation_status: params.quality_metadata.validation_status,
        handoff_file_path: path.join(params.campaign_path, 'handoffs', `${params.from_specialist}-to-${params.to_specialist}.json`),
        created_at: new Date().toISOString()
      };
      
    } catch (error) {
      console.error('‚ùå Failed to create standardized handoff:', error);
      throw error;
    }
  }
});

// ============================================================================
// UTILITY FUNCTIONS
// ============================================================================

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
 */
async function loadExistingSpecialistData(campaignPath: string): Promise<{
  specialist_outputs: any;
  workflow_status: any;
}> {
  try {
    // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π handoff —Ñ–∞–π–ª
    const handoffsDir = path.join(campaignPath, 'handoffs');
    const handoffFiles = await fs.readdir(handoffsDir).catch(() => []);
    
    if (handoffFiles.length === 0) {
      return {
        specialist_outputs: {},
        workflow_status: { completed_specialists: [] }
      };
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π handoff —Ñ–∞–π–ª
    const latestHandoffFile = handoffFiles
      .filter(file => file.endsWith('.json'))
      .sort()
      .pop();
    
    if (!latestHandoffFile) {
      return {
        specialist_outputs: {},
        workflow_status: { completed_specialists: [] }
      };
    }
    
    const handoffPath = path.join(handoffsDir, latestHandoffFile);
    const handoffContent = await fs.readFile(handoffPath, 'utf-8');
    const handoffData = JSON.parse(handoffContent);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    return {
      specialist_outputs: handoffData.specialist_outputs || {},
      workflow_status: handoffData.workflow_status || { completed_specialists: [] }
    };
    
  } catch (error) {
    console.warn('‚ö†Ô∏è Failed to load existing specialist data:', error);
    return {
      specialist_outputs: {},
      workflow_status: { completed_specialists: [] }
    };
  }
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –≤ workflow
 */
function getNextSpecialist(currentSpecialist: string): 'content' | 'design' | 'quality' | 'delivery' | null {
  const workflow = ['content', 'design', 'quality', 'delivery'];
  const currentIndex = workflow.indexOf(currentSpecialist);
  
  if (currentIndex === -1 || currentIndex === workflow.length - 1) {
    return null;
  }
  
  return workflow[currentIndex + 1] as any;
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π handoff —Ñ–∞–π–ª
 */
async function saveStandardizedHandoff(handoff: StandardizedHandoff): Promise<void> {
  const handoffsDir = path.join(handoff.campaign_context.campaign_path, 'handoffs');
  
  // –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  await fs.mkdir(handoffsDir, { recursive: true });
  
  // –°–æ–∑–¥–∞—ë–º –∏–º—è —Ñ–∞–π–ª–∞
  const fileName = `${handoff.handoff_info.from_specialist}-to-${handoff.handoff_info.to_specialist}.json`;
  const filePath = path.join(handoffsDir, fileName);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
  const serializedData = serializeHandoffData(handoff);
  await fs.writeFile(filePath, serializedData);
  
  console.log(`üìÑ Handoff saved: ${fileName}`);
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
 */
async function updateCampaignMetadata(campaignPath: string, updates: any): Promise<void> {
  try {
    const metadataPath = path.join(campaignPath, 'campaign-metadata.json');
    
    // –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    let metadata = {};
    try {
      const existingMetadata = await fs.readFile(metadataPath, 'utf-8');
      metadata = JSON.parse(existingMetadata);
    } catch {
      // –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    const updatedMetadata = {
      ...metadata,
      ...updates,
      last_updated: new Date().toISOString()
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    await fs.writeFile(metadataPath, JSON.stringify(updatedMetadata, null, 2));
    
    console.log('üìä Campaign metadata updated');
    
  } catch (error) {
    console.warn('‚ö†Ô∏è Failed to update campaign metadata:', error);
  }
}

// ============================================================================
// EXPORTS
// ============================================================================

export { createStandardizedHandoff, StandardizedHandoffSchema };
export type { StandardizedHandoff };