/**
 * Campaign State Manager - –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ email –∫–∞–º–ø–∞–Ω–∏–∏
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –µ–¥–∏–Ω—ã–π campaignId –¥–ª—è –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏
 */

import { EmailFolder } from '../tools/email-folder-manager';

interface CampaignState {
  campaignId: string;
  emailFolder: EmailFolder;
  topic: string;
  campaign_type: string;
  created_at: string;
  trace_id?: string;
}

class CampaignStateManager {
  private static instance: CampaignStateManager;
  private currentCampaign: CampaignState | null = null;

  private constructor() {}

  static getInstance(): CampaignStateManager {
    if (!CampaignStateManager.instance) {
      CampaignStateManager.instance = new CampaignStateManager();
    }
    return CampaignStateManager.instance;
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∫–∞–º–ø–∞–Ω–∏—é
   */
  setCampaign(campaign: CampaignState): void {
    this.currentCampaign = campaign;
    console.log(`üìã Campaign state set: ${campaign.campaignId}`);
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∫–∞–º–ø–∞–Ω–∏—é
   */
  getCurrentCampaign(): CampaignState | null {
    return this.currentCampaign;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç campaignId —Ç–µ–∫—É—â–µ–π –∫–∞–º–ø–∞–Ω–∏–∏
   */
  getCurrentCampaignId(): string | null {
    return this.currentCampaign?.campaignId || null;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç EmailFolder —Ç–µ–∫—É—â–µ–π –∫–∞–º–ø–∞–Ω–∏–∏
   */
  getCurrentEmailFolder(): EmailFolder | null {
    return this.currentCampaign?.emailFolder || null;
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç EmailFolder –≤ —Ç–µ–∫—É—â–µ–π –∫–∞–º–ø–∞–Ω–∏–∏
   */
  updateEmailFolder(emailFolder: EmailFolder): void {
    if (this.currentCampaign) {
      this.currentCampaign.emailFolder = emailFolder;
      console.log(`üìÅ Email folder updated for campaign: ${this.currentCampaign.campaignId}`);
    }
  }

  /**
   * –û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏ (–¥–ª—è –Ω–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏)
   */
  clearCampaign(): void {
    this.currentCampaign = null;
    console.log('üóëÔ∏è Campaign state cleared');
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è
   */
  hasActiveCampaign(): boolean {
    return this.currentCampaign !== null;
  }
}

export const campaignState = CampaignStateManager.getInstance();
export type { CampaignState }; 