import { Agent, run } from '@openai/agents';
import { z } from 'zod';
import {
  CorrectionSuggestion,
  AGENT_CONSTANTS
} from '../types/base-agent-types';

export type HandoffType = 'content-to-design' | 'design-to-quality' | 'quality-to-delivery';
import { getUsageModel } from '../../shared/utils/model-config';

/**
 * ü§ñ AI CORRECTOR
 * 
 * –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ AI
 * –ü—Ä–∏–Ω—Ü–∏–ø: –ü–æ–ª—É—á–∞–µ—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */

export interface CorrectionResult {
  success: boolean;
  correctedData?: any;
  error?: string;
  attemptsMade: number;
  correctionApplied: string[];
}

export class AICorrector {
  private agent: Agent;
  private correctionAttempts: Map<string, number> = new Map();

  constructor() {
    this.agent = new Agent({
      name: "data-corrector",
      instructions: this.getCorrectorInstructions(),
      model: getUsageModel(),
      modelSettings: {
        temperature: 0.3, // –ù–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ—á–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
        maxTokens: 8000,
        toolChoice: 'auto'
      },
      tools: []
    });

    console.log('ü§ñ AICorrector initialized');
  }

  /**
   * üîÑ –û–°–ù–û–í–ù–û–ô –ú–ï–¢–û–î –ö–û–†–†–ï–ö–¶–ò–ò –î–ê–ù–ù–´–•
   */
  async correctData(
    invalidData: any,
    correctionSuggestions: CorrectionSuggestion[],
    handoffType: HandoffType
  ): Promise<any> {
    const dataHash = this.generateDataHash(invalidData);
    const currentAttempts = this.correctionAttempts.get(dataHash) || 0;
    
    if (currentAttempts >= AGENT_CONSTANTS.HANDOFF_VALIDATION.MAX_AI_CORRECTION_ATTEMPTS) {
      console.error(`üö´ AICorrector: –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–ª—è –¥–∞–Ω–Ω—ã—Ö ${dataHash}`);
      return null;
    }

    try {
      this.correctionAttempts.set(dataHash, currentAttempts + 1);

      const correctionPrompt = this.buildCorrectionPrompt(
        invalidData,
        correctionSuggestions,
        handoffType,
        currentAttempts + 1
      );

      console.log(`üîÑ AICorrector: –ü–æ–ø—ã—Ç–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ ${currentAttempts + 1}/${AGENT_CONSTANTS.HANDOFF_VALIDATION.MAX_AI_CORRECTION_ATTEMPTS} –¥–ª—è ${handoffType}`);
      console.log(`üîç AICorrector: –ü—Ä–∏—á–∏–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏:`, correctionSuggestions.map(s => `${s.field}: ${s.issue}`));

      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
      const CORRECTION_TIMEOUT = 15000; // 15 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º
      const correctionPromise = run(this.agent, correctionPrompt);
      
      const response = await Promise.race([
        correctionPromise,
        new Promise((_, reject) => 
          setTimeout(() => reject(new Error('–ö–æ—Ä—Ä–µ–∫—Ü–∏—è –ø—Ä–µ–≤—ã—Å–∏–ª–∞ —Ç–∞–π–º–∞—É—Ç 15 —Å–µ–∫—É–Ω–¥')), CORRECTION_TIMEOUT)
        )
      ]);
      
      if (!response) {
        throw new Error('AI –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –æ—Ç–≤–µ—Ç');
      }

      // –ü–æ–ø—ã—Ç–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ –∫–∞–∫ JSON
      const correctedData = this.parseAIResponse(response, handoffType);
      
      if (correctedData) {
        console.log(`‚úÖ AICorrector: –£—Å–ø–µ—à–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –¥–ª—è ${handoffType} –∑–∞ ${Date.now() - Date.now()} –º—Å`);
        this.correctionAttempts.delete(dataHash); // –°–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
        return correctedData;
      } else {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞ AI');
      }

    } catch (error) {
      console.error(`‚ùå AICorrector: –ü–æ–ø—ã—Ç–∫–∞ ${currentAttempts + 1} –Ω–µ —É–¥–∞–ª–∞—Å—å:`, error instanceof Error ? error instanceof Error ? error.message : String(error) : String(error));
      
      // –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–π–º–∞—É—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
      if (error instanceof Error ? error instanceof Error ? error.message : String(error) : String(error).includes('—Ç–∞–π–º–∞—É—Ç')) {
        console.error(`‚è±Ô∏è AICorrector: –ö–æ—Ä—Ä–µ–∫—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –∏–∑-–∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è`);
        this.correctionAttempts.delete(dataHash);
        return null;
      }
      
      return null;
    }
  }

  /**
   * üìù –ü–û–°–¢–†–û–ï–ù–ò–ï –ü–†–û–ú–ü–¢–ê –î–õ–Ø –ö–û–†–†–ï–ö–¶–ò–ò
   */
  private buildCorrectionPrompt(
    invalidData: any,
    suggestions: CorrectionSuggestion[],
    handoffType: HandoffType,
    attemptNumber: number
  ): string {
    const prioritizedSuggestions = suggestions
      .sort((a, b) => {
        const priorityOrder = { high: 3, medium: 2, low: 1 };
        return priorityOrder[b.priority] - priorityOrder[a.priority];
      });

    const criticalSuggestions = prioritizedSuggestions.filter(s => s.priority === 'high');
    const majorSuggestions = prioritizedSuggestions.filter(s => s.priority === 'medium');

    let prompt = `# –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ö–û–†–†–ï–ö–¶–ò–Ø –î–ê–ù–ù–´–• - –ü–û–ü–´–¢–ö–ê ${attemptNumber}

## –ö–û–ù–¢–ï–ö–°–¢
–¢–∏–ø handoff: ${handoffType}
–î–∞–Ω–Ω—ã–µ –ù–ï –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏ —Ç—Ä–µ–±—É—é—Ç –ù–ï–ú–ï–î–õ–ï–ù–ù–û–ì–û –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.

## –ò–°–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï (–° –û–®–ò–ë–ö–ê–ú–ò)
\`\`\`json
${JSON.stringify(invalidData, null, 2)}
\`\`\`

## –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´ (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ò–°–ü–†–ê–í–ò–¢–¨):
${criticalSuggestions.map((s, i) => `
${i + 1}. **–ü–æ–ª–µ**: ${s.field}
   **–ü—Ä–æ–±–ª–µ–º–∞**: ${s.issue}
   **–†–µ—à–µ–Ω–∏–µ**: ${s.suggestion}
   **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è**: ${s.correctionPrompt}
`).join('\n')}

## –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –£–õ–£–ß–®–ï–ù–ò–Ø:
${majorSuggestions.map((s, i) => `
${i + 1}. **–ü–æ–ª–µ**: ${s.field} - ${s.suggestion}
`).join('\n')}

## –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ö–û–†–†–ï–ö–¶–ò–ò:

### ${handoffType === 'content-to-design' ? 'CONTENT ‚Üí DESIGN –°–ü–ï–¶–ò–§–ò–ß–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:' : ''}
${handoffType === 'content-to-design' ? `
- ‚úÖ Subject: 1-100 —Å–∏–º–≤–æ–ª–æ–≤, –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
- ‚úÖ Preheader: 1-150 —Å–∏–º–≤–æ–ª–æ–≤, –¥–æ–ø–æ–ª–Ω—è–µ—Ç subject
- ‚úÖ Body: 10-5000 —Å–∏–º–≤–æ–ª–æ–≤, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
- ‚úÖ CTA: 1-50 —Å–∏–º–≤–æ–ª–æ–≤, —á–µ—Ç–∫–∏–π –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
- ‚úÖ trace_id: –í–∞–ª–∏–¥–Ω—ã–π UUID —Ñ–æ—Ä–º–∞—Ç
- ‚úÖ timestamp: ISO datetime —Ñ–æ—Ä–º–∞—Ç
- ‚úÖ language: 'ru' –∏–ª–∏ 'en'
- ‚úÖ template_type: 'promotional', 'informational', 'newsletter', 'transactional'
` : ''}

### ${handoffType === 'design-to-quality' ? 'DESIGN ‚Üí QUALITY –°–ü–ï–¶–ò–§–ò–ß–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:' : ''}
${handoffType === 'design-to-quality' ? `
- ‚úÖ HTML –∫–æ–Ω—Ç–µ–Ω—Ç: –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π, –≤–∞–ª–∏–¥–Ω—ã–π, >100 —Å–∏–º–≤–æ–ª–æ–≤
- ‚úÖ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: –°–¢–†–û–ì–û ‚â§100KB (102400 –±–∞–π—Ç)
- ‚úÖ MJML source: –í–∞–ª–∏–¥–Ω—ã–π MJML –∫–æ–¥
- ‚úÖ Asset URLs: –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ URL –∞–¥—Ä–µ—Å–∞
- ‚úÖ –í—Ä–µ–º—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞: ‚â§1000–º—Å
- ‚úÖ CSS –ø—Ä–∞–≤–∏–ª–∞: –ú–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã, –∏–Ω–ª–∞–π–Ω —Å—Ç–∏–ª–∏
- ‚úÖ total_size_kb: ‚â§100KB –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û
` : ''}

### ${handoffType === 'quality-to-delivery' ? 'QUALITY ‚Üí DELIVERY –°–ü–ï–¶–ò–§–ò–ß–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:' : ''}
${handoffType === 'quality-to-delivery' ? `
- ‚úÖ Quality score: –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û ‚â•70 –±–∞–ª–ª–æ–≤
- ‚úÖ WCAG AA compliance: –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û true
- ‚úÖ Email client compatibility: ‚â•95% —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
- ‚úÖ Spam score: ‚â§3 –±–∞–ª–ª–æ–≤ –°–¢–†–û–ì–û
- ‚úÖ W3C HTML compliance: –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û true
- ‚úÖ Accessibility score: ‚â•80 –±–∞–ª–ª–æ–≤
- ‚úÖ –í—Å–µ performance scores: ‚â•70 –±–∞–ª–ª–æ–≤
` : ''}

## –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –í–´–í–û–î–£:

1. **–ê–ù–ê–õ–ò–ó–ò–†–£–ô–¢–ï** –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ
2. **–ò–°–ü–†–ê–í–¨–¢–ï** –í–°–ï –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ (priority: high)
3. **–£–õ–£–ß–®–ò–¢–ï** –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
4. **–í–ï–†–ù–ò–¢–ï** –¢–û–õ–¨–ö–û –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
5. **–ù–ï –î–û–ë–ê–í–õ–Ø–ô–¢–ï** –Ω–∏–∫–∞–∫–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–ª–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è

## –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
–í–µ—Ä–Ω–∏—Ç–µ –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–π JSON –æ–±—ä–µ–∫—Ç —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –ù–∏–∫–∞–∫–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤, –æ–±—ä—è—Å–Ω–µ–Ω–∏–π –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤. –¢–æ–ª—å–∫–æ —á–∏—Å—Ç—ã–π JSON:

\`\`\`json
{
  // –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–¥–µ—Å—å
}
\`\`\`

–ö–†–ò–¢–ò–ß–ù–û: –î–∞–Ω–Ω—ã–µ –î–û–õ–ñ–ù–´ –ø—Ä–æ–π—Ç–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–æ—Å–ª–µ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏. –≠—Ç–æ –ø–æ–ø—ã—Ç–∫–∞ ${attemptNumber} –∏–∑ ${AGENT_CONSTANTS.HANDOFF_VALIDATION.MAX_AI_CORRECTION_ATTEMPTS}.`;

    return prompt;
  }

  /**
   * üß† –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø AI –ö–û–†–†–ï–ö–¢–û–†–ê
   */
  private getCorrectorInstructions(): string {
    return `You are a Data Correction Specialist for email generation workflow.

MISSION: Fix validation errors in handoff data between agents quickly and accurately.

CORE PRINCIPLES:
1. Fix only what's broken, preserve what works
2. Ensure compliance with size and format requirements
3. Return ONLY valid JSON, no explanations

KEY REQUIREMENTS BY HANDOFF TYPE:
- content-to-design: Valid content structure, proper metadata
- design-to-quality: HTML validation, size <100KB, MJML compliance
- quality-to-delivery: Quality scores ‚â•70, WCAG AA compliance

OUTPUT: Return ONLY the corrected JSON object. No markdown, no explanations, no additional text.

TIMEOUT: You have 10 seconds maximum to complete the correction.`;
  }

  /**
   * üîç –ü–ê–†–°–ò–ù–ì –û–¢–í–ï–¢–ê AI
   */
  private parseAIResponse(response: any, handoffType: HandoffType): any {
    const content = typeof response === 'string' ? response : JSON.stringify(response);
    try {
      // –ü–æ–∏—Å–∫ JSON –≤ –æ—Ç–≤–µ—Ç–µ
      const jsonMatch = content.match(/```json\s*(\{[\s\S]*?\})\s*```/);
      if (jsonMatch) {
        return JSON.parse(jsonMatch[1]);
      }

      // –ü–æ–ø—ã—Ç–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–∞–∫ JSON
      const trimmedContent = content.trim();
      if (trimmedContent.startsWith('{') && trimmedContent.endsWith('}')) {
        return JSON.parse(trimmedContent);
      }

      // –ü–æ–∏—Å–∫ JSON –æ–±—ä–µ–∫—Ç–∞ –≤ —Ç–µ–∫—Å—Ç–µ
      const jsonObjectMatch = content.match(/\{[\s\S]*\}/);
      if (jsonObjectMatch) {
        return JSON.parse(jsonObjectMatch[0]);
      }

      console.error('‚ùå AICorrector: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ JSON –≤ –æ—Ç–≤–µ—Ç–µ AI:', content.substring(0, 200));
      return null;

    } catch (error) {
      console.error('‚ùå AICorrector: –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç–≤–µ—Ç–∞:', error);
      console.error('–ü—Ä–æ–±–ª–µ–º–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:', content.substring(0, 500));
      return null;
    }
  }

  /**
   * üîê –ì–ï–ù–ï–†–ê–¶–ò–Ø –•–ï–®–ê –î–õ–Ø –î–ê–ù–ù–´–•
   */
  private generateDataHash(data: any): string {
    const dataString = JSON.stringify(data);
    let hash = 0;
    for (let i = 0; i < dataString.length; i++) {
      const char = dataString.charCodeAt(i);
      hash = ((hash << 5) - hash) + char;
      hash = hash & hash; // Convert to 32bit integer
    }
    return Math.abs(hash).toString(16);
  }

  /**
   * üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–û–†–†–ï–ö–¶–ò–ô
   */
  public getCorrectionStats(): {
    activeCorrections: number;
    totalAttempts: number;
    averageAttempts: number;
  } {
    const attempts = Array.from(this.correctionAttempts.values());
    return {
      activeCorrections: this.correctionAttempts.size,
      totalAttempts: attempts.reduce((sum, count) => sum + count, 0),
      averageAttempts: attempts.length > 0 ? attempts.reduce((sum, count) => sum + count, 0) / attempts.length : 0
    };
  }

  /**
   * üßπ –û–ß–ò–°–¢–ö–ê –°–¢–ê–†–´–• –ü–û–ü–´–¢–û–ö
   */
  public clearCorrectionHistory(): void {
    this.correctionAttempts.clear();
    console.log('üßπ AICorrector: –ò—Å—Ç–æ—Ä–∏—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–π –æ—á–∏—â–µ–Ω–∞');
  }
}