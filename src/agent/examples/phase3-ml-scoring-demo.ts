#!/usr/bin/env tsx

import MLQualityScorer from '../tools/ml/quality-scoring';
import { analyzeEmailQualityTool, quickQualityCheckTool } from '../tools/ml/quality-scoring';

// ============================================================================
// –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï
// ============================================================================

const testEmailData = {
  html_content: `
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>–ò—Å–ø–∞–Ω–∏—è –ª–µ—Ç–æ–º - –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–π –æ—Ç–¥—ã—Ö</title>
</head>
<body>
  <table width="600" cellpadding="0" cellspacing="0" style="margin: 0 auto; font-family: Arial, sans-serif;">
    <tr>
      <td style="background-color: #ff6b35; padding: 20px; text-align: center;">
        <h1 style="color: white; margin: 0; font-size: 28px;">üåû –ò—Å–ø–∞–Ω–∏—è –ª–µ—Ç–æ–º</h1>
        <p style="color: white; margin: 10px 0 0 0; font-size: 16px;">–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∞–≥–∏—é —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ª–µ—Ç–∞</p>
      </td>
    </tr>
    <tr>
      <td style="padding: 30px;">
        <h2 style="color: #333; font-size: 24px; margin: 0 0 20px 0;">–õ—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–∞—Å</h2>
        <p style="color: #666; font-size: 16px; line-height: 1.6; margin: 0 0 20px 0;">
          –ò—Å–ø–∞–Ω–∏—è –ª–µ—Ç–æ–º - —ç—Ç–æ —Å–æ–ª–Ω–µ—á–Ω—ã–µ –ø–ª—è–∂–∏, –±–æ–≥–∞—Ç–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–∞—è –∫—É–ª—å—Ç—É—Ä–∞. 
          –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Å—Ç–∏ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–π –æ—Ç–ø—É—Å–∫ –≤ –æ–¥–Ω–æ–π –∏–∑ —Å–∞–º—ã—Ö –∫—Ä–∞—Å–∏–≤—ã—Ö —Å—Ç—Ä–∞–Ω –ï–≤—Ä–æ–ø—ã.
        </p>
        <img src="https://example.com/spain-beach.jpg" alt="–ü–ª—è–∂–∏ –ò—Å–ø–∞–Ω–∏–∏" style="width: 100%; max-width: 540px; height: auto;">
        <div style="background-color: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 8px;">
          <h3 style="color: #ff6b35; margin: 0 0 15px 0;">üéØ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</h3>
          <p style="margin: 0 0 15px 0; font-size: 18px; color: #333;">
            <strong>–°–∫–∏–¥–∫–∞ –¥–æ 40%</strong> –Ω–∞ —Ç—É—Ä—ã –≤ –ë–∞—Ä—Å–µ–ª–æ–Ω—É –∏ –ú–∞–¥—Ä–∏–¥
          </p>
          <p style="margin: 0; color: #666;">–¢–æ–ª—å–∫–æ –¥–æ 31 –∞–≤–≥—É—Å—Ç–∞! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ.</p>
        </div>
        <div style="text-align: center; margin: 30px 0;">
          <a href="https://example.com/book-now" style="background-color: #ff6b35; color: white; text-decoration: none; padding: 15px 30px; border-radius: 5px; font-size: 18px; font-weight: bold; display: inline-block;">
            –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å
          </a>
        </div>
        <p style="color: #999; font-size: 14px; margin: 20px 0 0 0;">
          –° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>
          –ö–æ–º–∞–Ω–¥–∞ TravelExperts
        </p>
      </td>
    </tr>
  </table>
</body>
</html>
  `,
  mjml_content: `
<mjml>
  <mj-head>
    <mj-title>–ò—Å–ø–∞–Ω–∏—è –ª–µ—Ç–æ–º</mj-title>
    <mj-font name="Arial" href="https://fonts.googleapis.com/css?family=Arial" />
  </mj-head>
  <mj-body>
    <mj-section background-color="#ff6b35">
      <mj-column>
        <mj-text color="white" font-size="28px" align="center">
          üåû –ò—Å–ø–∞–Ω–∏—è –ª–µ—Ç–æ–º
        </mj-text>
        <mj-text color="white" font-size="16px" align="center">
          –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∞–≥–∏—é —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ª–µ—Ç–∞
        </mj-text>
      </mj-column>
    </mj-section>
    <mj-section>
      <mj-column>
        <mj-text font-size="24px" color="#333">
          –õ—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–∞—Å
        </mj-text>
        <mj-text font-size="16px" color="#666" line-height="1.6">
          –ò—Å–ø–∞–Ω–∏—è –ª–µ—Ç–æ–º - —ç—Ç–æ —Å–æ–ª–Ω–µ—á–Ω—ã–µ –ø–ª—è–∂–∏, –±–æ–≥–∞—Ç–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–∞—è –∫—É–ª—å—Ç—É—Ä–∞.
        </mj-text>
        <mj-image src="https://example.com/spain-beach.jpg" alt="–ü–ª—è–∂–∏ –ò—Å–ø–∞–Ω–∏–∏" />
        <mj-button background-color="#ff6b35" color="white" href="https://example.com/book-now">
          –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å
        </mj-button>
      </mj-column>
    </mj-section>
  </mj-body>
</mjml>
  `,
  subject: '–ò—Å–ø–∞–Ω–∏—è –ª–µ—Ç–æ–º: —Å–∫–∏–¥–∫–∏ –¥–æ 40% –Ω–∞ –ª—É—á—à–∏–µ —Ç—É—Ä—ã üåû',
  preheader: '–°–æ–ª–Ω–µ—á–Ω—ã–µ –ø–ª—è–∂–∏ –∏ –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞ –∂–¥—É—Ç –≤–∞—Å',
  content_data: {
    body: '–ò—Å–ø–∞–Ω–∏—è –ª–µ—Ç–æ–º - —ç—Ç–æ —Å–æ–ª–Ω–µ—á–Ω—ã–µ –ø–ª—è–∂–∏, –±–æ–≥–∞—Ç–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–∞—è –∫—É–ª—å—Ç—É—Ä–∞. –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Å—Ç–∏ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–π –æ—Ç–ø—É—Å–∫ –≤ –æ–¥–Ω–æ–π –∏–∑ —Å–∞–º—ã—Ö –∫—Ä–∞—Å–∏–≤—ã—Ö —Å—Ç—Ä–∞–Ω –ï–≤—Ä–æ–ø—ã. –°–∫–∏–¥–∫–∞ –¥–æ 40% –Ω–∞ —Ç—É—Ä—ã –≤ –ë–∞—Ä—Å–µ–ª–æ–Ω—É –∏ –ú–∞–¥—Ä–∏–¥. –¢–æ–ª—å–∫–æ –¥–æ 31 –∞–≤–≥—É—Å—Ç–∞! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ.',
    cta_text: '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å',
    cta_url: 'https://example.com/book-now',
    assets: ['https://example.com/spain-beach.jpg']
  },
  brand_guidelines: {
    primary_color: '#ff6b35',
    secondary_color: '#333333',
    font_family: 'Arial, sans-serif',
    brand_voice: '–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π'
  }
};

const lowQualityEmailData = {
  html_content: `
<div>
  <h1>–°–†–û–ß–ù–û!!! –°–£–ü–ï–† –°–ö–ò–î–ö–ò!!!</h1>
  <p>–ü–æ–∫—É–ø–∞–π—Ç–µ —Å–µ–π—á–∞—Å –∏–ª–∏ –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –Ω–∞–≤—Å–µ–≥–¥–∞! –≠—Ç–æ –ª—É—á—à–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ –≤–∞—à–µ–π –∂–∏–∑–Ω–∏! –ì–∞—Ä–∞–Ω—Ç–∏—è 100%!</p>
  <img src="image.jpg">
  <a href="#">–ö–ª–∏–∫</a>
</div>
  `,
  subject: '–°–†–û–ß–ù–û!!! –°–£–ü–ï–† –°–ö–ò–î–ö–ò!!! –ù–ï –ü–†–û–ü–£–°–¢–ò–¢–ï!!!',
  content_data: {
    body: '–ü–æ–∫—É–ø–∞–π—Ç–µ —Å–µ–π—á–∞—Å –∏–ª–∏ –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –Ω–∞–≤—Å–µ–≥–¥–∞! –≠—Ç–æ –ª—É—á—à–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ –≤–∞—à–µ–π –∂–∏–∑–Ω–∏! –ì–∞—Ä–∞–Ω—Ç–∏—è 100%! –ë–µ—Å–ø–ª–∞—Ç–Ω–æ! –°—Ä–æ—á–Ω–æ! –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ!',
    cta_text: '–ö–ª–∏–∫',
    cta_url: '#'
  }
};

// ============================================================================
// –î–ï–ú–û –§–£–ù–ö–¶–ò–ò
// ============================================================================

async function demo1_BasicQualityAnalysis() {
  console.log('\nüß™ –î–ï–ú–û 1: –ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞');
  console.log('=' .repeat(60));
  
  const startTime = Date.now();
  
  try {
    const qualityReport = await MLQualityScorer.analyzeQuality(testEmailData);
    const endTime = Date.now();
    
    console.log('‚úÖ –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –∑–∞–≤–µ—Ä—à–µ–Ω');
    console.log(`‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${endTime - startTime}ms`);
    console.log('\nüìä –û–¶–ï–ù–ö–ò –ö–ê–ß–ï–°–¢–í–ê:');
    console.log(`   –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: ${qualityReport.score.overall}/100`);
    console.log(`   –ö–æ–Ω—Ç–µ–Ω—Ç: ${qualityReport.score.content}/100`);
    console.log(`   –î–∏–∑–∞–π–Ω: ${qualityReport.score.design}/100`);
    console.log(`   –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å: ${qualityReport.score.technical}/100`);
    console.log(`   –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${qualityReport.score.performance}/100`);
    
    console.log('\nüí° –¢–û–ü-3 –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    qualityReport.recommendations.slice(0, 3).forEach((rec, i) => {
      console.log(`   ${i + 1}. ${rec}`);
    });
    
    console.log('\n‚ö†Ô∏è  –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:');
    const criticalIssues = qualityReport.issues.filter(issue => 
      issue.severity === 'critical' || issue.severity === 'high'
    );
    if (criticalIssues.length > 0) {
      criticalIssues.forEach((issue, i) => {
        console.log(`   ${i + 1}. [${issue.severity.toUpperCase()}] ${issue.issue}`);
        console.log(`      –†–µ—à–µ–Ω–∏–µ: ${issue.fix_suggestion}`);
      });
    } else {
      console.log('   –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚úÖ');
    }
    
    return {
      execution_time: endTime - startTime,
      overall_score: qualityReport.score.overall,
      recommendations_count: qualityReport.recommendations.length,
      critical_issues: criticalIssues.length
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ 1:', error);
    return { execution_time: Date.now() - startTime, overall_score: 0, error: true };
  }
}

async function demo2_QualityComparison() {
  console.log('\nüß™ –î–ï–ú–û 2: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ email-—à–∞–±–ª–æ–Ω–æ–≤');
  console.log('=' .repeat(60));
  
  const startTime = Date.now();
  
  try {
    console.log('üìß –ê–Ω–∞–ª–∏–∑ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ email...');
    const highQualityReport = await MLQualityScorer.analyzeQuality(testEmailData);
    
    console.log('üìß –ê–Ω–∞–ª–∏–∑ –Ω–∏–∑–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ email...');
    const lowQualityReport = await MLQualityScorer.analyzeQuality(lowQualityEmailData);
    
    const endTime = Date.now();
    
    console.log('\nüìä –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–ê–Ø –¢–ê–ë–õ–ò–¶–ê:');
    console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
    console.log('‚îÇ –ú–µ—Ç—Ä–∏–∫–∞             ‚îÇ –í—ã—Å–æ–∫–æ–µ –∫–∞—á.‚îÇ –ù–∏–∑–∫–æ–µ –∫–∞—á. ‚îÇ –†–∞–∑–Ω–∏—Ü–∞     ‚îÇ');
    console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
    console.log(`‚îÇ –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞        ‚îÇ ${highQualityReport.score.overall.toString().padStart(11)} ‚îÇ ${lowQualityReport.score.overall.toString().padStart(11)} ‚îÇ ${(highQualityReport.score.overall - lowQualityReport.score.overall).toString().padStart(11)} ‚îÇ`);
    console.log(`‚îÇ –ö–æ–Ω—Ç–µ–Ω—Ç             ‚îÇ ${highQualityReport.score.content.toString().padStart(11)} ‚îÇ ${lowQualityReport.score.content.toString().padStart(11)} ‚îÇ ${(highQualityReport.score.content - lowQualityReport.score.content).toString().padStart(11)} ‚îÇ`);
    console.log(`‚îÇ –î–∏–∑–∞–π–Ω              ‚îÇ ${highQualityReport.score.design.toString().padStart(11)} ‚îÇ ${lowQualityReport.score.design.toString().padStart(11)} ‚îÇ ${(highQualityReport.score.design - lowQualityReport.score.design).toString().padStart(11)} ‚îÇ`);
    console.log(`‚îÇ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å   ‚îÇ ${highQualityReport.score.technical.toString().padStart(11)} ‚îÇ ${lowQualityReport.score.technical.toString().padStart(11)} ‚îÇ ${(highQualityReport.score.technical - lowQualityReport.score.technical).toString().padStart(11)} ‚îÇ`);
    console.log(`‚îÇ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å  ‚îÇ ${highQualityReport.score.performance.toString().padStart(11)} ‚îÇ ${lowQualityReport.score.performance.toString().padStart(11)} ‚îÇ ${(highQualityReport.score.performance - lowQualityReport.score.performance).toString().padStart(11)} ‚îÇ`);
    console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò');
    
    console.log('\nüîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ù–ò–ó–ö–û–ö–ê–ß–ï–°–¢–í–ï–ù–ù–û–ì–û EMAIL:');
    lowQualityReport.issues.forEach((issue, i) => {
      console.log(`   ${i + 1}. [${issue.severity.toUpperCase()}] ${issue.issue}`);
    });
    
    const qualityImprovement = highQualityReport.score.overall - lowQualityReport.score.overall;
    console.log(`\nüìà –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ: +${qualityImprovement} –±–∞–ª–ª–æ–≤ (${Math.round(qualityImprovement / lowQualityReport.score.overall * 100)}%)`);
    
    return {
      execution_time: endTime - startTime,
      quality_difference: qualityImprovement,
      high_quality_score: highQualityReport.score.overall,
      low_quality_score: lowQualityReport.score.overall
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ 2:', error);
    return { execution_time: Date.now() - startTime, error: true };
  }
}

async function demo3_OpenAIToolsIntegration() {
  console.log('\nüß™ –î–ï–ú–û 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OpenAI Agents SDK');
  console.log('=' .repeat(60));
  
  const startTime = Date.now();
  
  try {
    console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ML Quality Scorer –Ω–∞–ø—Ä—è–º—É—é...');
    const fullAnalysisResult = await MLQualityScorer.analyzeQuality(testEmailData);
    const fullAnalysis = {
      success: true,
      data: fullAnalysisResult
    };
    
    console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...');
    const quickCheckData = {
      html_content: testEmailData.html_content,
      subject: testEmailData.subject,
      content_data: {
        body: testEmailData.content_data.body,
        cta_text: testEmailData.content_data.cta_text,
        cta_url: testEmailData.content_data.cta_url
      }
    };
    const quickCheckResult = await MLQualityScorer.analyzeQuality(quickCheckData);
    const quickCheck = {
      success: true,
      quick_score: quickCheckResult.score.overall,
      category_scores: {
        content: quickCheckResult.score.content,
        design: quickCheckResult.score.design,
        technical: quickCheckResult.score.technical,
        performance: quickCheckResult.score.performance
      },
      top_recommendations: quickCheckResult.recommendations.slice(0, 3),
      critical_issues: quickCheckResult.issues.filter(issue => 
        issue.severity === 'critical' || issue.severity === 'high'
      ).length,
      analysis_time_ms: quickCheckResult.analysis_duration_ms
    };
    
    const endTime = Date.now();
    
    console.log('\n‚úÖ OpenAI Tools —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã');
    console.log(`‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${endTime - startTime}ms`);
    
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–û–õ–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê:');
    console.log(`   –£—Å–ø–µ—Ö: ${fullAnalysis.success ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: ${fullAnalysisResult.score.overall}/100`);
    console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${fullAnalysisResult.recommendations.length}`);
    console.log(`   –í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: ${fullAnalysisResult.analysis_duration_ms}ms`);
    
    console.log('\n‚ö° –†–ï–ó–£–õ–¨–¢–ê–¢ –ë–´–°–¢–†–û–ô –ü–†–û–í–ï–†–ö–ò:');
    console.log(`   –£—Å–ø–µ—Ö: ${quickCheck.success ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –ë—ã—Å—Ç—Ä–∞—è –æ—Ü–µ–Ω–∫–∞: ${quickCheck.quick_score}/100`);
    console.log(`   –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: ${quickCheck.critical_issues}`);
    console.log(`   –í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: ${quickCheck.analysis_time_ms}ms`);
    
    console.log('\nüí° –¢–û–ü-3 –ë–´–°–¢–†–´–• –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    quickCheck.top_recommendations.forEach((rec, i) => {
      console.log(`   ${i + 1}. ${rec}`);
    });
    
    return {
      execution_time: endTime - startTime,
      full_analysis_score: fullAnalysisResult.score.overall,
      quick_check_score: quickCheck.quick_score,
      tools_working: fullAnalysis.success && quickCheck.success
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ 3:', error);
    return { execution_time: Date.now() - startTime, error: true };
  }
}

async function demo4_PerformanceBenchmark() {
  console.log('\nüß™ –î–ï–ú–û 4: –ë–µ–Ω—á–º–∞—Ä–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏');
  console.log('=' .repeat(60));
  
  const iterations = 10;
  const results = [];
  
  console.log(`üèÉ –ó–∞–ø—É—Å–∫ ${iterations} –∏—Ç–µ—Ä–∞—Ü–∏–π –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞...`);
  
  const startTime = Date.now();
  
  for (let i = 0; i < iterations; i++) {
    const iterationStart = Date.now();
    
    try {
      const qualityReport = await MLQualityScorer.analyzeQuality(testEmailData);
      const iterationTime = Date.now() - iterationStart;
      
      results.push({
        iteration: i + 1,
        execution_time: iterationTime,
        overall_score: qualityReport.score.overall,
        success: true
      });
      
      process.stdout.write(`${i + 1} `);
      
    } catch (error) {
      results.push({
        iteration: i + 1,
        execution_time: Date.now() - iterationStart,
        overall_score: 0,
        success: false,
        error: error instanceof Error ? error.message : 'Unknown error'
      });
      process.stdout.write(`‚ùå `);
    }
  }
  
  const totalTime = Date.now() - startTime;
  console.log('\n');
  
  // –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const successfulResults = results.filter(r => r.success);
  const avgExecutionTime = successfulResults.reduce((sum, r) => sum + r.execution_time, 0) / successfulResults.length;
  const minExecutionTime = Math.min(...successfulResults.map(r => r.execution_time));
  const maxExecutionTime = Math.max(...successfulResults.map(r => r.execution_time));
  const avgScore = successfulResults.reduce((sum, r) => sum + r.overall_score, 0) / successfulResults.length;
  
  console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ë–ï–ù–ß–ú–ê–†–ö–ê:');
  console.log(`   –£—Å–ø–µ—à–Ω—ã—Ö –∏—Ç–µ—Ä–∞—Ü–∏–π: ${successfulResults.length}/${iterations} (${Math.round(successfulResults.length / iterations * 100)}%)`);
  console.log(`   –û–±—â–µ–µ –≤—Ä–µ–º—è: ${totalTime}ms`);
  console.log(`   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞ –∏—Ç–µ—Ä–∞—Ü–∏—é: ${Math.round(avgExecutionTime)}ms`);
  console.log(`   –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: ${minExecutionTime}ms`);
  console.log(`   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: ${maxExecutionTime}ms`);
  console.log(`   –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: ${Math.round(avgScore)}/100`);
  console.log(`   –ü—Ä–æ–ø—É—Å–∫–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å: ${Math.round(1000 / avgExecutionTime)} –∞–Ω–∞–ª–∏–∑–æ–≤/—Å–µ–∫`);
  
  if (successfulResults.length < iterations) {
    console.log('\n‚ö†Ô∏è  –û–®–ò–ë–ö–ò:');
    results.filter(r => !r.success).forEach(r => {
      console.log(`   –ò—Ç–µ—Ä–∞—Ü–∏—è ${r.iteration}: ${r.error}`);
    });
  }
  
  return {
    total_time: totalTime,
    avg_execution_time: avgExecutionTime,
    success_rate: successfulResults.length / iterations,
    throughput: Math.round(1000 / avgExecutionTime),
    avg_score: avgScore
  };
}

async function demo5_RealWorldScenario() {
  console.log('\nüß™ –î–ï–ú–û 5: –†–µ–∞–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π - –ø–∞–∫–µ—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑');
  console.log('=' .repeat(60));
  
  // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ email –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const emailVariants = [
    { name: '–û—Ä–∏–≥–∏–Ω–∞–ª', data: testEmailData },
    { name: '–ë–µ–∑ CTA', data: { ...testEmailData, content_data: { ...testEmailData.content_data, cta_text: '', cta_url: '' } } },
    { name: '–ü–ª–æ—Ö–æ–π HTML', data: { ...testEmailData, html_content: testEmailData.html_content.replace(/<!DOCTYPE html>/, '').replace(/<meta[^>]*>/g, '') } },
    { name: '–î–ª–∏–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç', data: { ...testEmailData, content_data: { ...testEmailData.content_data, body: testEmailData.content_data.body.repeat(5) } } },
    { name: '–ù–∏–∑–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ', data: lowQualityEmailData }
  ];
  
  const startTime = Date.now();
  const results = [];
  
  console.log(`üìß –ê–Ω–∞–ª–∏–∑ ${emailVariants.length} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ email...`);
  
  for (const variant of emailVariants) {
    const variantStart = Date.now();
    
    try {
      const qualityReport = await MLQualityScorer.analyzeQuality(variant.data);
      const variantTime = Date.now() - variantStart;
      
      results.push({
        name: variant.name,
        score: qualityReport.score,
        execution_time: variantTime,
        issues_count: qualityReport.issues.length,
        recommendations_count: qualityReport.recommendations.length,
        success: true
      });
      
      console.log(`   ‚úÖ ${variant.name}: ${qualityReport.score.overall}/100 (${variantTime}ms)`);
      
    } catch (error) {
      results.push({
        name: variant.name,
        execution_time: Date.now() - variantStart,
        success: false,
        error: error instanceof Error ? error.message : 'Unknown error'
      });
      
      console.log(`   ‚ùå ${variant.name}: –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞`);
    }
  }
  
  const totalTime = Date.now() - startTime;
  
  console.log('\nüìä –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–ê–Ø –¢–ê–ë–õ–ò–¶–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:');
  console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
  console.log('‚îÇ –í–∞—Ä–∏–∞–Ω—Ç         ‚îÇ –û–±—â–∏–π   ‚îÇ –ö–æ–Ω—Ç–µ–Ω—Ç ‚îÇ –î–∏–∑–∞–π–Ω  ‚îÇ –¢–µ—Ö–Ω–∏—á. ‚îÇ –ü—Ä–æ–∏–∑–≤. ‚îÇ –í—Ä–µ–º—è   ‚îÇ');
  console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
  
  results.filter(r => r.success).forEach(result => {
    console.log(`‚îÇ ${result.name.padEnd(15)} ‚îÇ ${result.score.overall.toString().padStart(7)} ‚îÇ ${result.score.content.toString().padStart(7)} ‚îÇ ${result.score.design.toString().padStart(7)} ‚îÇ ${result.score.technical.toString().padStart(7)} ‚îÇ ${result.score.performance.toString().padStart(7)} ‚îÇ ${result.execution_time.toString().padStart(5)}ms ‚îÇ`);
  });
  
  console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò');
  
  // –ù–∞—Ö–æ–¥–∏–º –ª—É—á—à–∏–π –∏ —Ö—É–¥—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç—ã
  const successfulResults = results.filter(r => r.success);
  if (successfulResults.length > 0) {
    const bestVariant = successfulResults.reduce((best, current) => 
      current.score.overall > best.score.overall ? current : best
    );
    const worstVariant = successfulResults.reduce((worst, current) => 
      current.score.overall < worst.score.overall ? current : worst
    );
    
    console.log(`\nüèÜ –õ—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç: ${bestVariant.name} (${bestVariant.score.overall}/100)`);
    console.log(`üí© –•—É–¥—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç: ${worstVariant.name} (${worstVariant.score.overall}/100)`);
    console.log(`üìà –†–∞–∑–Ω–∏—Ü–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ: ${bestVariant.score.overall - worstVariant.score.overall} –±–∞–ª–ª–æ–≤`);
  }
  
  return {
    total_time: totalTime,
    variants_analyzed: emailVariants.length,
    successful_analyses: successfulResults.length,
    avg_score: successfulResults.reduce((sum, r) => sum + r.score.overall, 0) / successfulResults.length
  };
}

// ============================================================================
// –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
// ============================================================================

async function runPhase3MLScoringDemo() {
  console.log('üöÄ –î–ï–ú–û –§–ê–ó–´ 3.1: ML-SCORING –î–õ–Ø –ö–ê–ß–ï–°–¢–í–ê');
  console.log('=' .repeat(80));
  console.log('–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è ML-based —Å–∏—Å—Ç–µ–º—ã –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ email-—à–∞–±–ª–æ–Ω–æ–≤');
  console.log('–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OpenAI Agents SDK –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å');
  console.log('=' .repeat(80));
  
  const overallStart = Date.now();
  const demoResults = [];
  
  // –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –¥–µ–º–æ
  demoResults.push(await demo1_BasicQualityAnalysis());
  demoResults.push(await demo2_QualityComparison());
  demoResults.push(await demo3_OpenAIToolsIntegration());
  demoResults.push(await demo4_PerformanceBenchmark());
  demoResults.push(await demo5_RealWorldScenario());
  
  const overallTime = Date.now() - overallStart;
  
  console.log('\nüéØ –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –§–ê–ó–´ 3.1');
  console.log('=' .repeat(80));
  
  const successfulDemos = demoResults.filter(result => !result.error);
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –¥–µ–º–æ: ${successfulDemos.length}/5`);
  console.log(`‚è±Ô∏è  –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${overallTime}ms`);
  
  // –°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const avgExecutionTimes = demoResults
    .filter(r => r.execution_time && !r.error)
    .map(r => r.execution_time);
  
  if (avgExecutionTimes.length > 0) {
    const avgTime = avgExecutionTimes.reduce((sum, time) => sum + time, 0) / avgExecutionTimes.length;
    console.log(`üìä –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–º–æ: ${Math.round(avgTime)}ms`);
  }
  
  // –û—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
  const qualityScores = demoResults
    .filter(r => r.overall_score && !r.error)
    .map(r => r.overall_score);
  
  if (qualityScores.length > 0) {
    const avgQuality = qualityScores.reduce((sum, score) => sum + score, 0) / qualityScores.length;
    console.log(`üéØ –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: ${Math.round(avgQuality)}/100`);
  }
  
  // –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
  const performanceResult = demoResults.find(r => r.throughput);
  if (performanceResult) {
    console.log(`‚ö° –ü—Ä–æ–ø—É—Å–∫–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å: ${performanceResult.throughput} –∞–Ω–∞–ª–∏–∑–æ–≤/—Å–µ–∫`);
    console.log(`üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞: ${Math.round(performanceResult.success_rate * 100)}%`);
  }
  
  console.log('\nüîß –ö–õ–Æ–ß–ï–í–´–ï –î–û–°–¢–ò–ñ–ï–ù–ò–Ø:');
  console.log('   ‚úÖ ML-based –∞–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ email-—à–∞–±–ª–æ–Ω–æ–≤');
  console.log('   ‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ 4 –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–∫–æ–Ω—Ç–µ–Ω—Ç, –¥–∏–∑–∞–π–Ω, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)');
  console.log('   ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OpenAI Agents SDK —á–µ—Ä–µ–∑ tool() —Ñ—É–Ω–∫—Ü–∏–∏');
  console.log('   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏ –≤—ã—è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º');
  console.log('   ‚úÖ –í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å');
  console.log('   ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤');
  
  if (successfulDemos.length === 5) {
    console.log('\nüéâ –í–°–ï –î–ï–ú–û –£–°–ü–ï–®–ù–û –í–´–ü–û–õ–ù–ï–ù–´! –§–ê–ó–ê 3.1 –ó–ê–í–ï–†–®–ï–ù–ê!');
    console.log('üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π workflow');
  } else {
    console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–µ–º–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞.');
  }
  
  console.log('=' .repeat(80));
}

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ
if (require.main === module) {
  runPhase3MLScoringDemo().catch(console.error);
}

export default runPhase3MLScoringDemo; 