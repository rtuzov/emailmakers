/**
 * MJML Template Generator
 * Handles MJML template generation with AI-powered dynamic creation
 */

import { tool } from '@openai/agents';
import { z } from 'zod';
import { promises as fs } from 'fs';
import * as path from 'path';
import { autoRestoreCampaignLogging } from '../../../shared/utils/campaign-logger';
import { OpenAI } from 'openai';
import { ENV_CONFIG } from '../../../config/env';
import { buildDesignContext } from './design-context';
import { MjmlTemplate } from './types';
import { logToFile } from '../../../shared/utils/campaign-logger';

/**
 * OpenAI Client for MJML Generation
 * Uses direct OpenAI API for MJML code generation integrated with main workflow
 */
const openai = new OpenAI({
  apiKey: ENV_CONFIG.OPENAI_API_KEY!
});

/**
 * MJML Generation Instructions
 */
const MJML_GENERATION_INSTRUCTIONS = `–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é MJML email —à–∞–±–ª–æ–Ω–æ–≤. –°–æ–∑–¥–∞–≤–∞–π —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–π MJML –∫–æ–¥ –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.

–¢–í–û–Ø –ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π MJML email —à–∞–±–ª–æ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –¥–∏–∑–∞–π–Ω–∞.

–í–°–ï–ì–î–ê –≤–æ–∑–≤—Ä–∞—â–∞–π –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–π MJML –∫–æ–¥ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–ª–∏ markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.

üé® –ü–†–ê–í–ò–õ–ê –ê–î–ê–ü–¢–ò–í–ù–û–ô –í–ï–†–°–¢–ö–ò EMAIL:

1. –ê–ù–ê–õ–ò–ó –ë–†–ï–ù–î–ê –ò –ö–û–ù–¢–ï–ù–¢–ê:
   - –ò–∑—É—á–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –æ–ø—Ä–µ–¥–µ–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É
   - –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–æ–Ω –∏ —Å—Ç–∏–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∏
   - –û–ø—Ä–µ–¥–µ–ª–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –∫–∞–º–ø–∞–Ω–∏–∏
   - –£—á–∏—Ç—ã–≤–∞–π —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∏–ª—è

2. –ê–î–ê–ü–¢–ò–í–ù–ê–Ø –¶–í–ï–¢–û–í–ê–Ø –°–•–ï–ú–ê:
   - –î–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π: —Ç–µ–ø–ª—ã–µ —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏–µ —Ç–æ–Ω–∞ –∏–ª–∏ —Ö–æ–ª–æ–¥–Ω—ã–µ –≥–æ—Ä–Ω—ã–µ
   - –î–ª—è –±–∏–∑–Ω–µ—Å–∞: –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Å–∏–Ω–∏–µ, —Å–µ—Ä—ã–µ, –±–µ–ª—ã–µ
   - –î–ª—è –∞–∫—Ü–∏–π: —è—Ä–∫–∏–µ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–µ —Ü–≤–µ—Ç–∞ (–∫—Ä–∞—Å–Ω—ã–π, –æ—Ä–∞–Ω–∂–µ–≤—ã–π)
   - –î–ª—è –ø—Ä–µ–º–∏—É–º: —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–µ —Ç–µ–º–Ω—ã–µ —Ç–æ–Ω–∞ —Å –∑–æ–ª–æ—Ç—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏
   - –ü—Ä–∏–º–µ–Ω—è–π –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ —Ç–µ–º–∞—Ç–∏–∫–µ

3. –î–ò–ù–ê–ú–ò–ß–ï–°–ö–ê–Ø –°–¢–†–£–ö–¢–£–†–ê:
   - –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–ª–∏–Ω—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–µ–∫—Ü–∏–π
   - –î–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: –∫–æ–º–ø–∞–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
   - –î–ª—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö: —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –±–ª–æ–∫–∞–º–∏
   - –ê–¥–∞–ø—Ç–∏—Ä—É–π –ø–æ–¥ —Ç–∏–ø –∫–∞–º–ø–∞–Ω–∏–∏ (–ø—Ä–æ–º–æ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è, —Å–µ–∑–æ–Ω–Ω–∞—è)

4. –£–ú–ù–ê–Ø –¢–ò–ü–û–ì–†–ê–§–ò–ö–ê:
   - –ó–∞–≥–æ–ª–æ–≤–∫–∏: —Ä–∞–∑–º–µ—Ä –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞–∂–Ω–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
   - –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç: –æ–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –¥–ª—è —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏
   - –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ —Ç–µ–º–∞—Ç–∏–∫–µ –∏ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
   - –í—ã–¥–µ–ª—è–π –∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã –∞–¥–∞–ø—Ç–∏–≤–Ω–æ

5. –ö–û–ù–¢–ï–ö–°–¢–ù–´–ï –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´:
   - CTA –∫–Ω–æ–ø–∫–∏: —Å—Ç–∏–ª—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—Ä–æ—á–Ω–æ—Å—Ç–∏ –∏ —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è
   - –≠–ª–µ–º–µ–Ω—Ç—ã –¥–æ–≤–µ—Ä–∏—è: –ø–æ–¥–±–∏—Ä–∞–π –ø–æ–¥ —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –±—Ä–µ–Ω–¥–∞
   - –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞: –∞–¥–∞–ø—Ç–∏—Ä—É–π –ø–æ–¥ –∫–æ–Ω—Ç–µ–∫—Å—Ç

6. RESPONSIVE DESIGN:
   - –í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–∞–π –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
   - –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö email –∫–ª–∏–µ–Ω—Ç–æ–≤
   - –£—á–∏—Ç—ã–≤–∞–π –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è Outlook –∏ Gmail

üö® CSS –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
1. –ü–†–ê–í–ò–õ–¨–ù–´–ï CSS –°–í–û–ô–°–¢–í–ê:
   ‚úÖ "list-style-type: none" (–ù–ï "list-style-type: -")
   ‚úÖ "font-weight: 500" (–ù–ï "font-weight: 500px")
   ‚úÖ "margin: 0 auto" (–ù–ï "margin: auto auto")
   ‚úÖ "padding: 10px 20px" (–ù–ï "padding: 10 20")

2. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï FALLBACK –®–†–ò–§–¢–´:
   ‚úÖ "font-family: 'Inter', Arial, sans-serif"
   ‚úÖ "font-family: Georgia, 'Times New Roman', serif"
   ‚ùå "font-family: 'Custom Font'" (–±–µ–∑ fallback)

3. –í–ê–õ–ò–î–ù–´–ï CSS –ó–ù–ê–ß–ï–ù–ò–Ø:
   - –í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è (px, em, rem, %)
   - –ò—Å–ø–æ–ª—å–∑—É–π –≤–∞–ª–∏–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ (#hex, rgb(), –Ω–∞–∑–≤–∞–Ω–∏—è)
   - –ü—Ä–æ–≤–µ—Ä—è–π –ø—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ CSS —Å–≤–æ–π—Å—Ç–≤

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö MJML:
- –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–µ MJML —Ç–µ–≥–∏
- –ù–ï –≤–∫–ª–∞–¥—ã–≤–∞–π <mj-section> –≤–Ω—É—Ç—Ä—å <mj-section>
- –ö–∞–∂–¥–∞—è —Å–µ–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å <mj-column>
- –°–æ–±–ª—é–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É: <mjml><mj-head>...</mj-head><mj-body>...</mj-body></mjml>
- –ò—Å–ø–æ–ª—å–∑—É–π –≤—Å–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
- –°–æ–∑–¥–∞–≤–∞–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ —á–∏—Ç–∞–µ–º—ã–π –¥–∏–∑–∞–π–Ω
- –£—á–∏—Ç—ã–≤–∞–π email –∫–ª–∏–µ–Ω—Ç—ã (Outlook, Gmail, Apple Mail)
- –ò—Å–ø–æ–ª—å–∑—É–π –ü–†–ê–í–ò–õ–¨–ù–´–ï CSS —Å–≤–æ–π—Å—Ç–≤–∞

–í–ê–ñ–ù–û: –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞–∂–¥—ã–π —Å–ª—É—á–∞–π –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –∏ —Å–æ–∑–¥–∞–≤–∞–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å –í–ê–õ–ò–î–ù–´–ú CSS!`;

/**
 * Validate and fix common MJML errors
 */
function validateAndFixMjml(mjmlContent: string): string {
  // Remove invalid MJML elements
  mjmlContent = mjmlContent.replace(/<mj-list[^>]*>/g, '');
  mjmlContent = mjmlContent.replace(/<\/mj-list>/g, '');
  mjmlContent = mjmlContent.replace(/<mj-list-item[^>]*>/g, '');
  mjmlContent = mjmlContent.replace(/<\/mj-list-item>/g, '');
  
  // Replace invalid class attributes with css-class
  mjmlContent = mjmlContent.replace(/\s+class="([^"]*)"/g, ' css-class="$1"');
  mjmlContent = mjmlContent.replace(/\s+class='([^']*)'/g, ' css-class=\'$1\'');
  
  // Fix common MJML element issues
  mjmlContent = mjmlContent.replace(/<mj-list[^>]*>[\s\S]*?<\/mj-list>/g, (match) => {
    // Extract list items and convert to mj-text with HTML list
    const listItems = match.match(/<mj-list-item[^>]*>([\s\S]*?)<\/mj-list-item>/g);
    if (listItems) {
      const htmlList = '<ul>' + 
        listItems.map(item => {
          const content = item.replace(/<\/?mj-list-item[^>]*>/g, '');
          return `<li>${content}</li>`;
        }).join('') + 
        '</ul>';
      return `<mj-text>${htmlList}</mj-text>`;
    }
    return '';
  });
  
  console.log('‚úÖ MJML validation and fixing completed');
  return mjmlContent;
}

/**
 * Compile MJML to HTML and save to campaign
 */
async function compileMjmlToHtml(
  mjmlTemplate: MjmlTemplate, 
  campaignPath: string
): Promise<MjmlTemplate> {
  console.log('üîß Compiling MJML to HTML...');
  
  try {
    const mjml = require('mjml');
    
    // ‚úÖ AUTO-FIX: Fix common MJML structure issues before compilation
    let fixedMjmlCode = mjmlTemplate.source;
    let fixesApplied = [];
    
    // Fix mj-group inside mj-column (move to mj-section level)
    if (fixedMjmlCode.includes('<mj-column>') && fixedMjmlCode.includes('<mj-group>')) {
      console.log('üîß Auto-fixing: Moving mj-group from mj-column to mj-section level');
      fixedMjmlCode = fixedMjmlCode.replace(
        /<mj-column[^>]*>[\s\S]*?<mj-group[^>]*>([\s\S]*?)<\/mj-group>[\s\S]*?<\/mj-column>/g,
        (match, groupContent) => {
          return match.replace(/<mj-group[^>]*>([\s\S]*?)<\/mj-group>/, groupContent);
        }
      );
      fixesApplied.push('mj-group positioning');
    }
    
    // ‚úÖ FIX: Nested mj-column inside mj-column
    if (fixedMjmlCode.includes('<mj-column>') && fixedMjmlCode.match(/<mj-column[^>]*>[\s\S]*?<mj-column/)) {
      console.log('üîß Auto-fixing: Removing nested mj-column elements');
      // Remove nested mj-column by flattening the content
      fixedMjmlCode = fixedMjmlCode.replace(
        /<mj-column([^>]*)>([\s\S]*?)<mj-column([^>]*)>([\s\S]*?)<\/mj-column>([\s\S]*?)<\/mj-column>/g,
        (_match, outerAttrs, outerPre, innerAttrs, innerContent, outerPost) => {
          // Merge attributes and flatten structure
          const mergedAttrs = (outerAttrs + ' ' + innerAttrs).trim();
          return `<mj-column${mergedAttrs ? ' ' + mergedAttrs : ''}>${outerPre}${innerContent}${outerPost}</mj-column>`;
        }
      );
      fixesApplied.push('nested mj-column flattening');
    }
    
    // ‚úÖ FIX: Multiple mj-column without mj-group wrapper
    const columnMatches = fixedMjmlCode.match(/<mj-column[^>]*>/g);
    if (columnMatches && columnMatches.length > 1) {
      // Check if columns are properly wrapped in mj-section
      const sectionMatch = fixedMjmlCode.match(/<mj-section[^>]*>[\s\S]*?<\/mj-section>/g);
      if (sectionMatch) {
        sectionMatch.forEach((section, index) => {
          const columnsInSection = (section.match(/<mj-column[^>]*>/g) || []).length;
          if (columnsInSection > 1) {
            console.log(`üîß Auto-fixing: Ensuring proper column structure in section ${index + 1}`);
            // Ensure columns are properly separated without nesting
            let fixedSection = section.replace(
              /<mj-column([^>]*)>([\s\S]*?)<\/mj-column>/g,
              (_match, attrs, content) => {
                // Remove any nested columns from content
                const cleanContent = content.replace(/<mj-column[\s\S]*?<\/mj-column>/g, '');
                return `<mj-column${attrs ? ' ' + attrs : ''}>${cleanContent}</mj-column>`;
              }
            );
            fixedMjmlCode = fixedMjmlCode.replace(section, fixedSection);
            fixesApplied.push(`section ${index + 1} column cleanup`);
          }
        });
      }
    }
    
    if (fixesApplied.length > 0) {
      console.log(`üîß Applied MJML fixes: ${fixesApplied.join(', ')}`);
      mjmlTemplate.source = fixedMjmlCode;
    }
    
    const htmlResult = mjml(fixedMjmlCode, {
      validationLevel: 'soft',
      keepComments: false
      // Removed deprecated 'beautify' option to prevent warning escalation
    });
    
    if (htmlResult.errors && htmlResult.errors.length > 0) {
      console.log('üîß MJML compilation had structural issues that were auto-fixed:', htmlResult.errors.length, 'items');
      console.log('üìã Details: Most issues are automatically corrected by the email client renderer');
    } else {
      console.log('‚úÖ MJML compiled successfully without warnings');
    }
    
    // Save HTML template
    const htmlTemplatePath = path.join(campaignPath, 'templates', 'email-template.html');
    await fs.writeFile(htmlTemplatePath, htmlResult.html);
    
    // Update mjmlTemplate object with HTML
    mjmlTemplate.html_content = htmlResult.html;
    mjmlTemplate.html_path = htmlTemplatePath;
    mjmlTemplate.file_size = Buffer.byteLength(htmlResult.html, 'utf8');
    
    console.log('‚úÖ HTML template compiled and saved');
    console.log(`üìÑ HTML size: ${(mjmlTemplate.file_size / 1024).toFixed(2)} KB`);
    
  } catch (error) {
    console.error('‚ùå MJML to HTML compilation failed:', error);
    // Don't fail the whole process, just log the error
    // html_content remains undefined if compilation fails
  }
  
  return mjmlTemplate;
}

/**
 * Generate layout-specific MJML prompts for different email structures
 */
function generateLayoutSpecificPrompt(
  layoutConfig: { layoutType: string; imageStrategy: string; sectionPriority: string[] },
  processedImages: any[],
  _structuredContent: any,
  colors: any,
  componentVariants?: Record<string, string>
): string {
  const baseRequirements = `
–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û - MJML –ü–†–ê–í–ò–õ–ê –í–ê–õ–ò–î–ê–¶–ò–ò:
‚ùå –ó–ê–ü–†–ï–©–ï–ù–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´: <mj-list>, <mj-list-item>, class="" –∞—Ç—Ä–∏–±—É—Ç—ã
‚úÖ –†–ê–ó–†–ï–®–ï–ù–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´: <mj-section>, <mj-column>, <mj-text>, <mj-button>, <mj-image>, <mj-divider>, <mj-spacer>
‚úÖ –î–õ–Ø –°–¢–ò–õ–ò–ó–ê–¶–ò–ò: css-class –≤–º–µ—Å—Ç–æ class, inline —Å—Ç–∏–ª–∏

–î–û–°–¢–£–ü–ù–´–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø (${processedImages.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π):
${processedImages.map((img: any, index: number) => 
  `${index + 1}. ${img.url} - ${img.alt_text}`
).join('\n')}

–¶–í–ï–¢–û–í–ê–Ø –°–•–ï–ú–ê:
- Primary: ${colors.primary}
- Accent: ${colors.accent}  
- Background: ${colors.background}
- Text: ${colors.text}

üîß –í–´–ë–†–ê–ù–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ (–£–†–û–í–ï–ù–¨ 2):
${componentVariants ? Object.entries(componentVariants).map(([section, variant]) => 
  `- ${section.toUpperCase()}: ${variant}`
).join('\n') : '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã'}`;

  switch (layoutConfig.layoutType) {
    case 'minimal':
      return `${baseRequirements}

üéØ MINIMAL LAYOUT STRATEGY:
–°–¢–†–£–ö–¢–£–†–ê: Header ‚Üí Hero ‚Üí Content ‚Üí Single CTA ‚Üí Footer
–ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø: –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ 1-2 —Å–∞–º—ã—Ö —Å–∏–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
–§–û–ö–£–°: –ß–∏—Å—Ç—ã–π –¥–∏–∑–∞–π–Ω, –º–Ω–æ–≥–æ –±–µ–ª–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞, –∫—Ä—É–ø–Ω–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞

–°–ï–ö–¶–ò–ò:
1. Hero Section: –û–¥–Ω–æ –±–æ–ª—å—à–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (550px) + –∫—Ä–∞—Ç–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
2. Content Section: –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –±–µ–∑ –ª–∏—à–Ω–∏—Ö —É–∫—Ä–∞—à–µ–Ω–∏–π  
3. Single CTA: –û–¥–Ω–∞ —è—Ä–∫–∞ –∫–Ω–æ–ø–∫–∞, —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è
4. Footer: –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π

–°–¢–ò–õ–¨: –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π, —á–∏—Å—Ç—ã–π, –º–Ω–æ–≥–æ padding –º–µ–∂–¥—É —Å–µ–∫—Ü–∏—è–º–∏ (30-50px)`;

    case 'content-heavy':
      return `${baseRequirements}

üìñ CONTENT-HEAVY LAYOUT STRATEGY:
–°–¢–†–£–ö–¢–£–†–ê: Header ‚Üí Hero ‚Üí Content Blocks ‚Üí Supporting Images ‚Üí CTA ‚Üí Footer
–ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø: –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –º–µ–∂–¥—É —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ –±–ª–æ–∫–∞–º–∏
–§–û–ö–£–°: –ß–∏—Ç–∞–µ–º–æ—Å—Ç—å, —Ç–µ–∫—Å—Ç–æ–≤–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ –≤–∏–∑—É–∞–ª—ã

–°–ï–ö–¶–ò–ò:
1. Hero Section: –°—Ä–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (400px) + —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
2. Content Blocks: –†–∞–∑–±–µ–π –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ 3-4 —Å–µ–∫—Ü–∏–∏ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
3. Supporting Images: –í—Å—Ç–∞–≤—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
4. Benefits List: –ü–æ–¥—Ä–æ–±–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
5. CTA Section: –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é

–°–¢–ò–õ–¨: –ñ—É—Ä–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å, —Ö–æ—Ä–æ—à–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞, line-height 1.6`;

    case 'cta-focused':
      return `${baseRequirements}

üéØ CTA-FOCUSED LAYOUT STRATEGY:
–°–¢–†–£–ö–¢–£–†–ê: Header ‚Üí Hero ‚Üí Urgency ‚Üí Benefits ‚Üí Gallery ‚Üí Multiple CTAs ‚Üí Footer
–ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é, –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
–§–û–ö–£–°: –ö–æ–Ω–≤–µ—Ä—Å–∏—è, —Å—Ä–æ—á–Ω–æ—Å—Ç—å, –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–æ—á–∫–∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è

–°–ï–ö–¶–ò–ò:
1. Hero Section: –Ø—Ä–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (500px) + —Ü–µ–Ω–∞/–≤—ã–≥–æ–¥–∞
2. Urgency Banner: –ö–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–π –±–∞–Ω–Ω–µ—Ä —Å–æ —Å—Ä–æ–∫–∞–º–∏
3. Benefits Grid: 3-4 –∫–ª—é—á–µ–≤—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞  
4. Mini Gallery: 2-3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ä—è–¥ –¥–ª—è –¥–æ–≤–µ—Ä–∏—è
5. Primary CTA: –ë–æ–ª—å—à–∞—è —è—Ä–∫–∞—è –∫–Ω–æ–ø–∫–∞
6. Secondary CTA: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
7. Urgency CTA: –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ

–°–¢–ò–õ–¨: –ö–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–µ —Ü–≤–µ—Ç–∞, –∫—Ä—É–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏, –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–µ —Ü–µ–Ω—ã`;

    case 'luxury-visual':
      return `${baseRequirements}

‚ú® LUXURY VISUAL LAYOUT STRATEGY:
–°–¢–†–£–ö–¢–£–†–ê: Header ‚Üí Hero ‚Üí Gallery Showcase ‚Üí Premium Content ‚Üí Exclusive CTA ‚Üí Footer
–ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø: –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≤—ã—Å–æ–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ, –±–æ–ª—å—à–∏–µ —Ä–∞–∑–º–µ—Ä—ã
–§–û–ö–£–°: –í–∏–∑—É–∞–ª—å–Ω–∞—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –ø—Ä–µ–º–∏—É–º –æ—â—É—â–µ–Ω–∏–µ, —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ—Å—Ç—å

–°–ï–ö–¶–ò–ò:
1. Hero Section: –ü–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (600px) + —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
2. Gallery Showcase: –°–µ—Ç–∫–∞ 2x2 –±–æ–ª—å—à–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (300px –∫–∞–∂–¥–æ–µ)
3. Premium Content: –ò–∑—ã—Å–∫–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ—Å—Ç—å
4. Social Proof: –≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–µ –æ—Ç–∑—ã–≤—ã/–Ω–∞–≥—Ä–∞–¥—ã
5. Exclusive CTA: –°—Ç–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å –∑–æ–ª–æ—Ç—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏

–°–¢–ò–õ–¨: –≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π, –º–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞, –∑–æ–ª–æ—Ç—ã–µ/—Å–µ—Ä–µ–±—Ä—è–Ω—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã, serif —à—Ä–∏—Ñ—Ç—ã –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤`;

    default: // gallery-focused
      return `${baseRequirements}

üñºÔ∏è GALLERY-FOCUSED LAYOUT STRATEGY:
–°–¢–†–£–ö–¢–£–†–ê: Header ‚Üí Hero ‚Üí Gallery Grid ‚Üí Content ‚Üí CTA ‚Üí Footer  
–ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø: –í–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–∞—Å—Å–∫–∞–∑, —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
–§–û–ö–£–°: –í–∏–∑—É–∞–ª—å–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ, –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è

–°–ï–ö–¶–ò–ò:
1. Hero Section: –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (550px) + –∑–∞–≥–æ–ª–æ–≤–æ–∫
2. Gallery Grid: –û—Å—Ç–∞–≤—à–∏–µ—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–µ—Ç–∫–µ 2x2 (200px –∫–∞–∂–¥–æ–µ)
3. Content Section: –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
4. Benefits List: –ö—Ä–∞—Ç–∫–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
5. CTA Section: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é

–°–¢–ò–õ–¨: –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–∏–∑—É–∞–ª/—Ç–µ–∫—Å—Ç, —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã`;
  }
}

/**
 * Determine layout type based on campaign content and metadata
 */
function determineLayoutType(contentContext: any, assetManifest: any, templateDesign?: any): {
  layoutType: string;
  imageStrategy: string;
  sectionPriority: string[];
} {
  const imageCount = assetManifest?.images?.length || 0;
  const hasMultipleCTAs = contentContext.call_to_action && Object.keys(contentContext.call_to_action).length > 1;
  const contentLength = JSON.stringify(contentContext.body || {}).length;
  if (!templateDesign?.metadata?.campaign_type) {
    throw new Error('‚ùå Campaign type is required in templateDesign.metadata.campaign_type');
  }
  const campaignType = templateDesign.metadata.campaign_type;
  
  // LAYOUT TYPE DECISION LOGIC
  let layoutType = 'gallery-focused'; // default
  let imageStrategy = 'standard-gallery';
  let sectionPriority = ['hero', 'gallery', 'content', 'cta', 'footer'];

  // 1. MINIMAL LAYOUT: Less content, fewer images
  if (imageCount <= 2 || contentLength < 500) {
    layoutType = 'minimal';
    imageStrategy = 'hero-only';
    sectionPriority = ['hero', 'content', 'cta', 'footer'];
  }
  
  // 2. CONTENT-HEAVY LAYOUT: Long content, story-driven
  else if (contentLength > 1500 || campaignType === 'newsletter') {
    layoutType = 'content-heavy';
    imageStrategy = 'content-supporting';
    sectionPriority = ['hero', 'content', 'gallery', 'cta', 'footer'];
  }
  
  // 3. CTA-FOCUSED LAYOUT: Multiple CTAs, conversion-driven
  else if (hasMultipleCTAs || campaignType === 'promotional') {
    layoutType = 'cta-focused';
    imageStrategy = 'conversion-supporting';
    sectionPriority = ['hero', 'urgency', 'benefits', 'gallery', 'multiple-cta', 'footer'];
  }
  
  // 4. LUXURY LAYOUT: Premium destinations, visual-first
  else if (campaignType === 'luxury' || templateDesign?.target_audience === 'luxury') {
    layoutType = 'luxury-visual';
    imageStrategy = 'hero-gallery-showcase';
    sectionPriority = ['hero', 'gallery', 'premium-content', 'exclusive-cta', 'footer'];
  }

  console.log(`üé® Selected layout: ${layoutType} with ${imageStrategy} strategy`);
  console.log(`üìã Section priority: ${sectionPriority.join(' ‚Üí ')}`);
  
  return { layoutType, imageStrategy, sectionPriority };
}

/**
 * Generate dynamic MJML template using AI - NO PREDEFINED TEMPLATES
 */
async function generateDynamicMjmlTemplate(params: {
  contentContext: any;
  designBrief: any;
  assetManifest: any;
  templateDesign?: any;
  colors: {
    primary: string;
    accent: string;
    background: string;
    text: string;
  };
  layout: {
    maxWidth: number;
    headingFont: string;
    bodyFont: string;
    typography: any;
  };
  trace_id?: string | null;
}): Promise<any> {
  const { contentContext, designBrief: _designBrief, assetManifest, templateDesign, colors, layout } = params;
  
  // ‚úÖ NEW: Determine dynamic layout based on content
  const layoutConfig = determineLayoutType(contentContext, assetManifest, templateDesign);
  console.log(`üéØ Using dynamic layout: ${layoutConfig.layoutType}`);
  
  // –£–†–û–í–ï–ù–¨ 2 –∏ 3 —É–¥–∞–ª–µ–Ω—ã - no fallback allowed per project policy
  console.log(`üß† Using only Level 1: Dynamic layout selection`);
  
  // Extract content for template generation with proper object handling
  let subjectContent = contentContext.subject || contentContext.subject_line || contentContext.generated_content?.subject || contentContext.generated_content?.subject_line;
  
  // Handle subject as object or string
  let subject = '';
  if (typeof subjectContent === 'object' && subjectContent) {
    subject = subjectContent.primary || subjectContent.main || subjectContent.text || subjectContent.value || String(subjectContent);
  } else if (typeof subjectContent === 'string') {
    subject = subjectContent;
  }
  const preheader = contentContext.preheader || contentContext.generated_content?.preheader;
  
  // Extract body content with FULL STRUCTURE PRESERVATION
  let bodyContent = contentContext.body || contentContext.sections || contentContext.generated_content?.body || contentContext.generated_content?.sections;
  
  // Extract structured content components - PRESERVE STRUCTURE!
  let structuredContent: any = {
    opening: '',
    main_content: '',
    benefits: [],
    social_proof: '',
    urgency_elements: '',
    closing: '',
    emotional_hooks: {},
    personalization: {},
    call_to_action: {}
  };

  // Extract structured data from contentContext
  if (typeof bodyContent === 'object' && bodyContent) {
    if (!bodyContent.opening) {
      throw new Error('‚ùå Body content opening is required - no fallback allowed');
    }
    if (!bodyContent.main_content) {
      throw new Error('‚ùå Body content main_content is required - no fallback allowed');
    }
    
    structuredContent.opening = bodyContent.opening;
    structuredContent.main_content = bodyContent.main_content;
    
    if (!Array.isArray(bodyContent.benefits)) {
      throw new Error('‚ùå Body content benefits must be an array - no fallback allowed');
    }
    structuredContent.benefits = bodyContent.benefits;
    
    if (!bodyContent.social_proof) {
      throw new Error('‚ùå Body content social_proof is required - no fallback allowed');
    }
    structuredContent.social_proof = bodyContent.social_proof;
    
    if (!bodyContent.urgency_elements) {
      throw new Error('‚ùå Body content urgency_elements is required - no fallback allowed');
    }
    structuredContent.urgency_elements = bodyContent.urgency_elements;
    
    if (!bodyContent.closing) {
      throw new Error('‚ùå Body content closing is required - no fallback allowed');
    }
    structuredContent.closing = bodyContent.closing;
  } else {
    throw new Error('‚ùå Body content must be a valid object - no fallback allowed');
  }

  // Extract additional structured data from contentContext - NO FALLBACKS ALLOWED
  const emotionalHooks = contentContext.emotional_hooks || contentContext.generated_content?.emotional_hooks;
  if (!emotionalHooks) {
    throw new Error('‚ùå Emotional hooks are required - provide emotional_hooks or generated_content.emotional_hooks - no fallback allowed');
  }
  
  const personalization = contentContext.personalization || contentContext.generated_content?.personalization;
  if (!personalization) {
    throw new Error('‚ùå Personalization is required - provide personalization or generated_content.personalization - no fallback allowed');
  }
  
  const callToAction = contentContext.call_to_action || contentContext.cta || contentContext.generated_content?.call_to_action;
  if (!callToAction || !callToAction.primary || !callToAction.primary.text || !callToAction.primary.url) {
    throw new Error('‚ùå Primary call to action is required with text and url - no fallback allowed');
  }

  structuredContent.emotional_hooks = emotionalHooks;
  structuredContent.personalization = personalization;  
  structuredContent.call_to_action = callToAction;

  // DEBUG: Log structured content to understand what's being passed to AI
  console.log('üîç MJML Generator - Structured Content Diagnostic:', {
    opening: structuredContent.opening ? 'Available' : 'MISSING',
    main_content: structuredContent.main_content ? 'Available' : 'MISSING',
    benefits: Array.isArray(structuredContent.benefits) ? `${structuredContent.benefits.length} benefits` : 'MISSING',
    social_proof: structuredContent.social_proof ? 'Available' : 'MISSING',
    urgency_elements: structuredContent.urgency_elements ? 'Available' : 'MISSING',
    emotional_hooks: Object.keys(structuredContent.emotional_hooks).length,
    call_to_action: Object.keys(structuredContent.call_to_action).length
  });
  
  console.log('üìã Benefits content:', structuredContent.benefits);
  console.log('üìã Social proof content:', structuredContent.social_proof);
  console.log('üìã Urgency content:', structuredContent.urgency_elements);

  // Create fallback bodyText only for validation
  let bodyText = '';
  if (typeof bodyContent === 'object' && bodyContent) {
    const parts = [];
    if (bodyContent.opening) parts.push(bodyContent.opening);
    if (bodyContent.main_content) parts.push(bodyContent.main_content);
    if (bodyContent.benefits) parts.push('Benefits available');
    if (bodyContent.social_proof) parts.push('Social proof available');
    if (bodyContent.urgency_elements) parts.push('Urgency elements available');
    if (bodyContent.closing) parts.push(bodyContent.closing);
    bodyText = parts.join(' ');
  } else if (typeof bodyContent === 'string') {
    bodyText = bodyContent;
  }
  
  const pricing = contentContext.pricing || contentContext.pricing_analysis || contentContext.generated_content?.pricing;
  const cta = contentContext.cta || contentContext.call_to_action || contentContext.generated_content?.cta;
  if (!contentContext.destination && !contentContext.location && !contentContext.travel_destination) {
    throw new Error('‚ùå Destination is required - provide destination, location, or travel_destination - no fallback allowed');
  }
  const destination = contentContext.destination || contentContext.location || contentContext.travel_destination;
  
  if (!subject || !preheader || !bodyText || !cta) {
    console.error('Missing content fields diagnostic:', {
      subject: !!subject,
      preheader: !!preheader,
      body: !!bodyText,
      pricing: !!pricing,
      cta: !!cta,
      contentContextKeys: Object.keys(contentContext),
      generated_content: !!contentContext.generated_content,
      actualValues: {
        subject_from: contentContext.subject ? 'subject' : contentContext.subject_line ? 'subject_line' : 'missing',
        preheader_from: contentContext.preheader ? 'preheader' : 'missing',
        body_from: bodyText ? 'body/bodyText' : 'missing',
        pricing_from: contentContext.pricing ? 'pricing' : contentContext.pricing_analysis ? 'pricing_analysis' : 'missing',
        cta_from: contentContext.cta ? 'cta' : contentContext.call_to_action ? 'call_to_action' : 'missing'
      }
    });
    
    const missingFields = [];
    if (!subject) missingFields.push('subject (looking for: subject, subject_line)');
    if (!preheader) missingFields.push('preheader');
    if (!bodyText) missingFields.push('body (looking for: body, sections)');
    if (!cta) missingFields.push('cta (looking for: cta, call_to_action)');
    
    throw new Error(`Required content fields missing: ${missingFields.join(', ')}`);
  }
  
  // Pricing is optional - log if available
  if (pricing) {
    console.log('üìä Pricing information available:', typeof pricing === 'string' ? pricing.substring(0, 100) + '...' : 'object data');
  } else {
    console.log('üí∞ No explicit pricing field found, pricing information may be embedded in content');
  }
  
  // Extract images from asset manifest - NO FALLBACK
  // Support both direct and nested asset manifest structures
  const images = assetManifest?.images || assetManifest?.assetManifest?.images || [];
  if (!images || !Array.isArray(images) || images.length === 0) {
    console.log('üîç Debug asset manifest structure:', {
      hasAssetManifest: !!assetManifest,
      hasDirectImages: !!assetManifest?.images,
      hasNestedImages: !!assetManifest?.assetManifest?.images,
      assetManifestKeys: assetManifest ? Object.keys(assetManifest) : 'none',
      imagesLength: images?.length || 0
    });
    throw new Error('Asset manifest must contain at least one image');
  }
  
  // üåê PROCESS IMAGES WITH EXTERNAL URL SUPPORT
  const processedImages = images.map((image: any, index: number) => {
    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–æ–ª—è –∏–∑ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
    const isExternal = image.purpose === 'external_image' || image.isExternal || (image.path && image.path.startsWith('http'));
    const imageUrl = image.path || image.file_path || image.url;
    const altText = image.description || image.alt_text || `Image ${index + 1}`;
    
    console.log(`üì∏ Processing image ${index + 1}: ${isExternal ? 'EXTERNAL' : 'LOCAL'} - ${imageUrl}`);
    
    return {
      url: imageUrl,
      alt_text: altText,
      isExternal: isExternal,
      usage: image.usage || 'general',
      description: image.description || altText
    };
  });
  
  console.log(`üñºÔ∏è  Found ${processedImages.length} images for MJML template`);
  
  // const _heroImage = processedImages[0]; // Currently unused
  // const _galleryImages = processedImages.slice(1, 4); // Currently unused
  
  // Extract fonts from asset manifest - check both direct and nested structure
  const fonts = assetManifest?.fonts || assetManifest?.assetManifest?.fonts;
  let fontConfiguration = {
    headingFont: 'Arial, sans-serif',
    bodyFont: 'Arial, sans-serif',
    fontWeights: ['normal', 'bold']
  };
  
  if (fonts && fonts.length > 0) {
    // Use first font as primary, or find heading/body specific fonts
    const headingFont = fonts.find((font: any) => font.usage === 'heading') || fonts[0];
    const bodyFont = fonts.find((font: any) => font.usage === 'body') || fonts[0];
    
    fontConfiguration = {
          headingFont: headingFont.family ? `${headingFont.family}${headingFont.fallbacks ? ', ' + headingFont.fallbacks.join(', ') : ''}` : (() => { throw new Error('‚ùå Heading font family is required - no fallback allowed'); })(),
    bodyFont: bodyFont.family ? `${bodyFont.family}${bodyFont.fallbacks ? ', ' + bodyFont.fallbacks.join(', ') : ''}` : (() => { throw new Error('‚ùå Body font family is required - no fallback allowed'); })(),
      fontWeights: headingFont.weights || ['normal', 'bold']
    };
    
    console.log(`üî§ Using fonts from asset manifest:`);
    console.log(`   Heading: ${fontConfiguration.headingFont}`);
    console.log(`   Body: ${fontConfiguration.bodyFont}`);
  } else {
    console.log('üìù No fonts in asset manifest, using default Arial for best compatibility');
  }
  
  // üé® USE AI TEMPLATE DESIGN IF AVAILABLE
  // let __templateStructure = ''; // Currently unused
  // let __designGuidance = ''; // Currently unused
  
  if (templateDesign) {
    console.log('üéØ Using AI Template Design for enhanced MJML generation');
    
    // Set default template_name if not provided
    if (!templateDesign.template_name) {
      templateDesign.template_name = `template_${Date.now()}`;
      console.log('‚ö†Ô∏è Template name missing, using default:', templateDesign.template_name);
    }
    
    if (!templateDesign.layout || !templateDesign.layout.type) {
      throw new Error('Template design must have layout with type');
    }
    
    if (!templateDesign.sections || templateDesign.sections.length === 0) {
      throw new Error('Template design must have at least one section');
    }
    
    if (!templateDesign.components || templateDesign.components.length === 0) {
      throw new Error('Template design must have at least one component');
    }
    
    /* _templateStructure = `
–°–¢–†–£–ö–¢–£–†–ê –ò–ó AI TEMPLATE DESIGN:
- Template: ${templateDesign.template_name}
- Layout: ${templateDesign.layout.type}
- Sections: ${templateDesign.sections.length}
- Components: ${templateDesign.components.length}

–°–ï–ö–¶–ò–ò:
${templateDesign.sections.map((section: any, index: number) => 
  `${index + 1}. ${section.name || section.type}: –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç`
).join('\n')}

üì∏ –ì–ê–õ–ï–†–ï–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô (–µ—Å–ª–∏ >2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π):

–ö–û–ú–ü–û–ù–ï–ù–¢–´:
${templateDesign.components.map((comp: any) => 
  `- ${comp.id}: ${comp.type} (${comp.styling ? Object.keys(comp.styling).join(', ') : '–±–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏'})`
).join('\n')}
`; */

    if (!templateDesign.visual_concept) {
      throw new Error('Template design must have visual_concept');
    }
    
    if (!templateDesign.target_audience) {
      throw new Error('Template design must have target_audience');
    }
    
    if (!templateDesign.layout.max_width) {
      throw new Error('Template design layout must have max_width');
    }
    
    if (!templateDesign.layout.spacing_system) {
      throw new Error('Template design layout must have spacing_system');
    }

    /* _designGuidance = `
–°–õ–ï–î–£–ô –¢–û–ß–ù–û –≠–¢–û–ú–£ –î–ò–ó–ê–ô–ù–£:
- Visual Concept: ${templateDesign.visual_concept}
- Target Audience: ${templateDesign.target_audience}
- Layout Type: ${templateDesign.layout.type}
- Max Width: ${templateDesign.layout.max_width}px
- Spacing System: ${JSON.stringify(templateDesign.layout.spacing_system)}

RESPONSIVE BREAKPOINTS:
${templateDesign.responsive?.breakpoints?.map((bp: any) => 
  `- ${bp.name}: ${bp.max_width} (${bp.adjustments ? Object.keys(bp.adjustments).join(', ') : '–±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'})`
).join('\n')}

ACCESSIBILITY REQUIREMENTS:
- ${templateDesign.accessibility?.alt_texts}
- ${templateDesign.accessibility?.color_contrast}
- ${templateDesign.accessibility?.font_sizes}
`; */
  } else {
    throw new Error('Template design is required for MJML generation - run generateTemplateDesign first');
  }
  
  // ‚úÖ NEW: Generate dynamic layout-specific prompt
      const layoutSpecificPrompt = generateLayoutSpecificPrompt(layoutConfig, processedImages, structuredContent, colors);
  
  // Create AI prompt for MJML generation with dynamic layout
  let templatePrompt = `
–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ MJML (Mailjet Markup Language). –°–æ–∑–¥–∞–π –í–ê–õ–ò–î–ù–´–ô MJML email —à–∞–±–ª–æ–Ω —Å –î–ò–ù–ê–ú–ò–ß–ï–°–ö–û–ô –°–¢–†–£–ö–¢–£–†–û–ô –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.

üß† –ê–ù–ê–õ–ò–ó –ö–û–ù–¢–ï–ù–¢–ê:
- –ó–∞–≥–æ–ª–æ–≤–æ–∫: "${subject}"
- –ü—Ä–µ–≤—å—é: "${preheader}"  
- –¢–∏–ø layout: ${layoutConfig.layoutType}
- –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${layoutConfig.imageStrategy}

üìù –°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ù–´–ô –ö–û–ù–¢–ï–ù–¢:
- –û—Ç–∫—Ä—ã—Ç–∏–µ: "${structuredContent.opening}"
- –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å: "${structuredContent.main_content}"
- –ó–∞–∫–ª—é—á–µ–Ω–∏–µ: "${structuredContent.closing}"

üéØ –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:
${structuredContent.benefits.map((benefit: string, index: number) => `${index + 1}. ${benefit}`).join('\n')}

üí¨ –°–û–¶–ò–ê–õ–¨–ù–û–ï –î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í–û: "${structuredContent.social_proof}"
‚ö° –≠–õ–ï–ú–ï–ù–¢–´ –°–†–û–ß–ù–û–°–¢–ò: "${structuredContent.urgency_elements}"

üîó –ü–†–ò–ó–´–í–´ –ö –î–ï–ô–°–¢–í–ò–Æ:
- –û—Å–Ω–æ–≤–Ω–æ–π: "${structuredContent.call_to_action.primary.text}" (${structuredContent.call_to_action.primary.url})
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π: "${structuredContent.call_to_action.secondary?.text || '–ù–ï–¢'}" (${structuredContent.call_to_action.secondary?.url || '–ù–ï–¢'})
- –°—Ä–æ—á–Ω—ã–π: "${structuredContent.call_to_action.urgency_cta?.text || '–ù–ï–¢'}" (${structuredContent.call_to_action.urgency_cta?.url || '–ù–ï–¢'})

üí∞ –¶–ï–ù–û–í–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:
- –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${pricing?.best_price || '–ù–ï–¢'} ${pricing?.currency || '–ù–ï–¢'}
- –¢–µ–º–∞—Ç–∏–∫–∞: ${destination}

${layoutSpecificPrompt}

–§–ò–ù–ê–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
1. –°–æ–∑–¥–∞–π –≤–∞–ª–∏–¥–Ω—É—é MJML —Å—Ç—Ä—É–∫—Ç—É—Ä—É: <mjml><mj-head><mj-title>...<mj-body>...
2. –ò—Å–ø–æ–ª—å–∑—É–π –í–°–ï –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
3. –í–∫–ª—é—á–∏ –í–°–ï —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π
4. –°–æ–∑–¥–∞–π —Ä–µ–∞–ª—å–Ω—ã–µ CTA –∫–Ω–æ–ø–∫–∏ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ URLs
5. –°–ª–µ–¥—É–π –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É layout —Ç–∏–ø—É: ${layoutConfig.layoutType}

üß† –ê–ù–ê–õ–ò–ó –ö–û–ù–¢–ï–ù–¢–ê –ò –ë–†–ï–ù–î–ê:

–ö–û–ù–¢–ï–ù–¢ –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê:
- –ó–∞–≥–æ–ª–æ–≤–æ–∫: "${subject}"
- –ü—Ä–µ–≤—å—é: "${preheader}"  

–°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ù–´–ô –ö–û–ù–¢–ï–ù–¢:
üìù –û–°–ù–û–í–ù–û–ô –ö–û–ù–¢–ï–ù–¢:
- –û—Ç–∫—Ä—ã—Ç–∏–µ: "${structuredContent.opening}"
- –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å: "${structuredContent.main_content}"
- –ó–∞–∫–ª—é—á–µ–Ω–∏–µ: "${structuredContent.closing}"

üéØ –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê (—Å–æ–∑–¥–∞–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫):
${structuredContent.benefits.map((benefit: string, index: number) => `${index + 1}. ${benefit}`).join('\n')}

üí¨ –°–û–¶–ò–ê–õ–¨–ù–û–ï –î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í–û:
"${structuredContent.social_proof}"

‚ö° –≠–õ–ï–ú–ï–ù–¢–´ –°–†–û–ß–ù–û–°–¢–ò:
"${structuredContent.urgency_elements}"

üíñ –≠–ú–û–¶–ò–û–ù–ê–õ–¨–ù–´–ï –•–£–ö–ò:
- –ñ–µ–ª–∞–Ω–∏–µ: "${structuredContent.emotional_hooks.desire || '–ù–ï–¢'}"
- FOMO: "${structuredContent.emotional_hooks.fear_of_missing_out || '–ù–ï–¢'}"
- –°—Ç—Ä–µ–º–ª–µ–Ω–∏—è: "${structuredContent.emotional_hooks.aspiration || '–ù–ï–¢'}"

üë§ –ü–ï–†–°–û–ù–ê–õ–ò–ó–ê–¶–ò–Ø:
- –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: "${structuredContent.personalization.greeting || '–ù–ï–¢'}"
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: "${structuredContent.personalization.recommendations || '–ù–ï–¢'}"

üîó –ü–†–ò–ó–´–í–´ –ö –î–ï–ô–°–¢–í–ò–Æ:
- –û—Å–Ω–æ–≤–Ω–æ–π: "${structuredContent.call_to_action.primary.text}"
  URL: "${structuredContent.call_to_action.primary.url}"
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π: "${structuredContent.call_to_action.secondary?.text || '–ù–ï–¢'}"
  URL: "${structuredContent.call_to_action.secondary?.url || '–ù–ï–¢'}"
- –°—Ä–æ—á–Ω—ã–π: "${structuredContent.call_to_action.urgency_cta?.text || '–ù–ï–¢'}"
  URL: "${structuredContent.call_to_action.urgency_cta?.url || '–ù–ï–¢'}"

üí∞ –¶–ï–ù–û–í–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø (–∏—Å–ø–æ–ª—å–∑—É–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤):
- –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${pricing?.best_price || '–ù–ï–¢'} ${pricing?.currency || '–ù–ï–¢'}
- –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: ${pricing?.optimal_dates_pricing?.average_on_optimal || '–ù–ï–¢'} ${pricing?.currency || '–ù–ï–¢'}
- –≠–∫–æ–Ω–æ–º–∏—è: –†–∞—Å—Å—á–∏—Ç–∞–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–Ω–æ—Å—Ç–∏ —Å—Ä–µ–¥–Ω–µ–π –∏ —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã
- –õ—É—á—à–∞—è –¥–∞—Ç–∞: ${pricing?.price_insights?.cheapest_optimal_date || '–ù–ï–¢'}
- –í—Å–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: ${pricing?.comprehensive_pricing?.total_offers_found || '–ù–ï–¢'}
- –î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω: ${pricing?.comprehensive_pricing?.best_price_overall || '–ù–ï–¢'} - ${pricing?.comprehensive_pricing?.worst_price_overall || '–ù–ï–¢'} ${pricing?.currency || '–ù–ï–¢'}

üè¢ –ë–†–ï–ù–î: ${colors.primary ? 'Kupibilet' : '–ù–µ —É–∫–∞–∑–∞–Ω'}

–î–û–°–¢–£–ü–ù–´–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø (${processedImages.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π) - –ò–°–ü–û–õ–¨–ó–£–ô –í–°–ï:
${processedImages.map((img: any, index: number) => 
  `${index + 1}. ${img.url} - ${img.alt_text} (${img.description})`
).join('\n')}

ÔøΩÔøΩ –¢–ï–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –î–õ–Ø –ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø: ${destination}
- –ò—Å–ø–æ–ª—å–∑—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è —Ç–µ–º—ã "${destination}"
- –ü—Ä–æ–≤–µ—Ä—å —á—Ç–æ alt —Ç–µ–∫—Å—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç–µ–º–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
- –î–ª—è –≥–æ—Ä–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ - –≥–æ—Ä–Ω—ã–µ –ø–µ–π–∑–∞–∂–∏, –¥–ª—è —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏—Ö - —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏–µ –≤–∏–¥—ã
- –ò–∑–±–µ–≥–∞–π generic —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–π —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞

üñºÔ∏è –ì–ê–õ–ï–†–ï–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô (–ù–û–í–û–ï –£–õ–£–ß–®–ï–ù–ò–ï):
- –°–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—É—é —Å–µ–∫—Ü–∏—é "gallery" –ø–æ—Å–ª–µ hero
- –ò—Å–ø–æ–ª—å–∑—É–π <mj-group> –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (2-3 –∫–æ–ª–æ–Ω–∫–∏)
- –ö–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ <mj-column> —Å –ø–æ–¥–ø–∏—Å—å—é
- –î–æ–±–∞–≤—å hover-—ç—Ñ—Ñ–µ–∫—Ç—ã —á–µ—Ä–µ–∑ CSS
- –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞: –º–æ–±–∞–π–ª=1 –∫–æ–ª–æ–Ω–∫–∞, –ø–ª–∞–Ω—à–µ—Ç=2, –¥–µ—Å–∫—Ç–æ–ø=3

–ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô:
- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ #1: Hero –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–ø–æ–ª–Ω–∞—è —à–∏—Ä–∏–Ω–∞)
- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è #2-${processedImages.length}: –ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (—Å–µ—Ç–∫–∞)
- –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –≤ –≥–∞–ª–µ—Ä–µ–µ
- –î–æ–±–∞–≤–ª—è–π alt-—Ç–µ–∫—Å—Ç –∏ –ø–æ–¥–ø–∏—Å–∏ –∫ –∫–∞–∂–¥–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é

–ë–ê–ó–û–í–´–ï –¶–í–ï–¢–ê –ë–†–ï–ù–î–ê (–º–æ–∂–µ—à—å –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å):
- –û—Å–Ω–æ–≤–Ω–æ–π: ${colors.primary}
- –ê–∫—Ü–µ–Ω—Ç: ${colors.accent}  
- –§–æ–Ω: ${colors.background}
- –¢–µ–∫—Å—Ç: ${colors.text}

–®–†–ò–§–¢–´:
- –ó–∞–≥–æ–ª–æ–≤–∫–∏: ${fontConfiguration.headingFont}
- –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç: ${fontConfiguration.bodyFont}

üé® –ó–ê–î–ê–ß–ê: –°–û–ó–î–ê–ô –°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ù–´–ô EMAIL –° –ü–û–õ–ù–´–ú –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï–ú –ö–û–ù–¢–ï–ù–¢–ê

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û - MJML –ü–†–ê–í–ò–õ–ê –í–ê–õ–ò–î–ê–¶–ò–ò:
‚ùå –ó–ê–ü–†–ï–©–ï–ù–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´ (–ù–ï –ò–°–ü–û–õ–¨–ó–£–ô):
- <mj-list> –∏ <mj-list-item> - –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ MJML
- –ê—Ç—Ä–∏–±—É—Ç class="" - –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º –≤ MJML —ç–ª–µ–º–µ–Ω—Ç–∞—Ö

‚úÖ –†–ê–ó–†–ï–®–ï–ù–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´ MJML:
- <mj-section>, <mj-column>, <mj-text>, <mj-button>
- <mj-image>, <mj-divider>, <mj-spacer>
- <mj-group>, <mj-wrapper>, <mj-hero>

‚úÖ –î–õ–Ø –°–ü–ò–°–ö–û–í –ò–°–ü–û–õ–¨–ó–£–ô:
- <mj-text> —Å HTML —Å–ø–∏—Å–∫–∞–º–∏: <ul><li>—ç–ª–µ–º–µ–Ω—Ç</li></ul>
- –ò–ª–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–µ <mj-text> –±–ª–æ–∫–∏ —Å –∏–∫–æ–Ω–∫–∞–º–∏/–Ω–æ–º–µ—Ä–∞–º–∏

‚úÖ –î–õ–Ø –°–¢–ò–õ–ò–ó–ê–¶–ò–ò –ò–°–ü–û–õ–¨–ó–£–ô:
- css-class –≤–º–µ—Å—Ç–æ class
- Inline —Å—Ç–∏–ª–∏: background-color, color, font-size, padding
- MJML –∞—Ç—Ä–∏–±—É—Ç—ã: width, padding, align, background-color

üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –£–õ–£–ß–®–ï–ù–ò–Ø –í MJML (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û):

1. üì∏ –°–¢–†–£–ö–¢–£–†–ê –° –ì–ê–õ–ï–†–ï–ï–ô:
   - Header —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ –ø—Ä–µ–≤—å—é
   - Hero —Å–µ–∫—Ü–∏—è —Å –æ—Ç–∫—Ä—ã—Ç–∏–µ–º (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ #1)
   - Gallery —Å–µ–∫—Ü–∏—è —Å —Å–µ—Ç–∫–æ–π –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
   - Benefits —Å–µ–∫—Ü–∏—è –≤ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
   - Multiple CTA —Å–µ–∫—Ü–∏–∏
   - Social proof —Å visual indicators
   - Footer –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π

2. üìê –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –†–ê–ó–ú–ï–†–ê:
   - –û–±—ä–µ–¥–∏–Ω—è–π –ø–æ—Ö–æ–∂–∏–µ —Å–µ–∫—Ü–∏–∏ –≤ –æ–¥–Ω—É
   - –ò—Å–ø–æ–ª—å–∑—É–π <mj-group> –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏
   - –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π –ª–∏—à–Ω–∏–µ <mj-spacer>
   - –¶–µ–ª—å: –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å <600 —Å—Ç—Ä–æ–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ HTML
   - Benefits —Å–µ–∫—Ü–∏—è —Å HTML —Å–ø–∏—Å–∫–æ–º –≤ <mj-text>
   - Social Proof —Å–µ–∫—Ü–∏—è —Å –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–π —Ü–∏—Ç–∞—Ç–æ–π
   - Urgency —Å–µ–∫—Ü–∏—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏
   - Emotional hooks –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–µ –±–ª–æ–∫–∏
   - Multiple CTA —Å–µ–∫—Ü–∏–∏ (primary, secondary, urgency)
   - Footer —Å compliance –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π

2. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ò–°–ü–û–õ–¨–ó–£–ô –í–°–ï –°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï:
   ‚úÖ –°–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—É—é —Å–µ–∫—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Å HTML —Å–ø–∏—Å–∫–æ–º
   ‚úÖ –í—ã–¥–µ–ª–∏ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –±–ª–æ–∫ —Å –∫–∞–≤—ã—á–∫–∞–º–∏
   ‚úÖ –î–æ–±–∞–≤—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ä–æ—á–Ω–æ—Å—Ç–∏ –∫–∞–∫ —è—Ä–∫–∏–µ –±–∞–Ω–Ω–µ—Ä—ã
   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ö—É–∫–∏ –∫–∞–∫ highlighted —Å–µ–∫—Ü–∏–∏
   ‚úÖ –°–æ–∑–¥–∞–π 3 —Ä–∞–∑–Ω—ã–µ CTA –∫–Ω–æ–ø–∫–∏ (primary, secondary, urgency)
   ‚úÖ –î–æ–±–∞–≤—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é –≤ greeting –∏ recommendations

3. –¶–í–ï–¢–û–í–ê–Ø –°–•–ï–ú–ê –ò –°–¢–ò–õ–¨:
   - –û–ø—Ä–µ–¥–µ–ª–∏ —Ç–µ–º–∞—Ç–∏–∫—É –∏ –ø–æ–¥–±–µ—Ä–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ü–≤–µ—Ç–∞
   - –î–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π: —Ç–µ–ø–ª—ã–µ —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏–µ —Ç–æ–Ω–∞
   - –î–ª—è –±–∏–∑–Ω–µ—Å–∞: –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞
   - –î–ª—è –∞–∫—Ü–∏–π: —è—Ä–∫–∏–µ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–µ —Ü–≤–µ—Ç–∞
   - –ò—Å–ø–æ–ª—å–∑—É–π –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –¥–ª—è emotional hooks

4. –°–¢–†–£–ö–¢–£–†–ê MJML (–°–¢–†–û–ì–û –í–ê–õ–ò–î–ù–ê–Ø):
   - –ò—Å–ø–æ–ª—å–∑—É–π <mjml><mj-head> –∏ <mj-body>
   - –°–æ–∑–¥–∞–π –æ—Ç–¥–µ–ª—å–Ω—ã–µ <mj-section> –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–ª–æ–∫–∞
   - Hero —Å–µ–∫—Ü–∏—è —Å opening —Ç–µ–∫—Å—Ç–æ–º
   - Gallery —Å–µ–∫—Ü–∏—è —Å grid –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å >2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
   - Main content —Å–µ–∫—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Å—Ç—å—é  
   - Benefits —Å–µ–∫—Ü–∏—è —Å HTML —Å–ø–∏—Å–∫–æ–º –≤ <mj-text>
   - Social proof —Å–µ–∫—Ü–∏—è —Å –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–π —Ü–∏—Ç–∞—Ç–æ–π
   - Urgency —Å–µ–∫—Ü–∏—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏

5. üì∏ –ì–ê–õ–ï–†–ï–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô (–µ—Å–ª–∏ >2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π):
   - –°–æ–∑–¥–∞–π —Å–µ–∫—Ü–∏—é –ø–æ—Å–ª–µ hero —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º "–ì–∞–ª–µ—Ä–µ—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
   - –ò—Å–ø–æ–ª—å–∑—É–π <mj-group> —Å <mj-column> –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
   - –ö–†–ò–¢–ò–ß–ù–û: –®–∏—Ä–∏–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ú–ò–ù–ò–ú–£–ú 150px! –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π width="16px" –∏–ª–∏ width="50px"
   - –î–ª—è 3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: width="33%" –Ω–æ –º–∏–Ω–∏–º—É–º 150px
   - –î–ª—è 2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: width="50%" –Ω–æ –º–∏–Ω–∏–º—É–º 200px  
   - –î–æ–±–∞–≤—å –ø–æ–¥–ø–∏—Å–∏ –ø–æ–¥ –∫–∞–∂–¥—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —á–µ—Ä–µ–∑ <mj-text>
   - –ò—Å–ø–æ–ª—å–∑—É–π <mj-image width="150px" /> —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —à–∏—Ä–∏–Ω–æ–π –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏
   - –î–ª—è hero –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π –ø–æ–ª–Ω—É—é —à–∏—Ä–∏–Ω—É: <mj-image width="550px" />

5. –°–û–ó–î–ê–ô –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´:
   - CTA –∫–Ω–æ–ø–∫–∏: –∏—Å–ø–æ–ª—å–∑—É–π –†–ï–ê–õ–¨–ù–´–ï URLs –∏–∑ section "–ü–†–ò–ó–´–í–´ –ö –î–ï–ô–°–¢–í–ò–Æ" (–ù–ï href="#")
   - –ö–Ω–æ–ø–∫–∏: –∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ MJML –∞—Ç—Ä–∏–±—É—Ç—ã (–ù–ï class)
   - –≠–ª–µ–º–µ–Ω—Ç—ã –¥–æ–≤–µ—Ä–∏—è: –ø–æ–¥ —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –±—Ä–µ–Ω–¥–∞
   - –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞: –ø–æ–¥ –∫–æ–Ω—Ç–µ–∫—Å—Ç

–°–¢–†–£–ö–¢–£–†–ê MJML:
<mjml>
  <mj-head>
    <mj-title>[–ê–î–ê–ü–¢–ò–†–û–í–ê–ù–ù–´–ô –ó–ê–ì–û–õ–û–í–û–ö]</mj-title>
    <mj-preview>[–ê–î–ê–ü–¢–ò–†–û–í–ê–ù–ù–û–ï –ü–†–ï–í–¨–Æ]</mj-preview>
    <mj-attributes>
      <mj-all font-family="[–í–´–ë–†–ê–ù–ù–´–ô –®–†–ò–§–¢]" />
      <mj-text font-size="[–û–ü–¢–ò–ú–ê–õ–¨–ù–´–ô –†–ê–ó–ú–ï–†]" line-height="[–ß–ò–¢–ê–ï–ú–û–°–¢–¨]" />
    </mj-attributes>
    <mj-style>
      [–ê–î–ê–ü–¢–ò–†–û–í–ê–ù–ù–´–ï CSS –°–¢–ò–õ–ò –ü–û–î –ö–û–ù–¢–ï–ù–¢]
    </mj-style>
  </mj-head>
  <mj-body>
    [–°–ï–ö–¶–ò–ò –ê–î–ê–ü–¢–ò–†–û–í–ê–ù–ù–´–ï –ü–û–î –ö–û–ù–¢–ï–ù–¢]
  </mj-body>
</mjml>

–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
1. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏—Å–ø–æ–ª—å–∑—É–π –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–π <mjml> –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π </mjml>
2. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π <mj-head> —Å <mj-title> –∏ <mj-preview>
3. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–∑–¥–∞–π <mj-body> —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ <mj-section>
4. –ö–ê–ñ–î–ê–Ø <mj-section> –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å <mj-column>
5. –ò—Å–ø–æ–ª—å–∑—É–π –í–°–ï ${processedImages.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ <mj-image>
6. –í–∫–ª—é—á–∏ –í–ï–°–¨ —Ç–µ–∫—Å—Ç –∏–∑ body (–Ω–µ —Å–æ–∫—Ä–∞—â–∞–π!)
7. ‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ù–û –î–õ–Ø –ì–ê–õ–ï–†–ï–ò: –ò—Å–ø–æ–ª—å–∑—É–π width="150px" –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –ù–ï width="16px"!
8. –°–æ–∑–¥–∞–π –∫–Ω–æ–ø–∫–∏ CTA —á–µ—Ä–µ–∑ <mj-button> —Å –†–ï–ê–õ–¨–ù–´–ú–ò URLs:
   - –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π URL –∏–∑ "–û—Å–Ω–æ–≤–Ω–æ–π" CTA
   - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π URL –∏–∑ "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π" CTA  
   - –°—Ä–æ—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π URL –∏–∑ "–°—Ä–æ—á–Ω—ã–π" CTA
9. –î–æ–±–∞–≤—å —Ñ—É—Ç–µ—Ä —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π

–í–ê–ñ–ù–û: 
- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞–∂–¥—ã–π —Å–ª—É—á–∞–π –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ
- –°–æ–∑–¥–∞–≤–∞–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –ø–æ–¥ –∫–æ–Ω—Ç–µ–Ω—Ç
- –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–µ MJML —Ç–µ–≥–∏
- –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π HTML —Ç–µ–≥–∏ –≤–Ω—É—Ç—Ä–∏ MJML
- –ù–ï –≤–∫–ª–∞–¥—ã–≤–∞–π <mj-section> –≤–Ω—É—Ç—Ä—å <mj-section>
- –ö–∞–∂–¥–∞—è —Å–µ–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å <mj-column>
- –í–∫–ª—é—á–∏ –í–°–ï –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
- –ù–µ —Å–æ–∫—Ä–∞—â–∞–π —Ç–µ–∫—Å—Ç!
- –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏—Å–ø–æ–ª—å–∑—É–π —Ä–µ–∞–ª—å–Ω—ã–µ URLs –≤ href –∞—Ç—Ä–∏–±—É—Ç–∞—Ö –∫–Ω–æ–ø–æ–∫

–í–ï–†–ù–ò –¢–û–õ–¨–ö–û MJML –ö–û–î –ë–ï–ó –û–ë–™–Ø–°–ù–ï–ù–ò–ô –ò –ë–ï–ó MARKDOWN –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø:
`;

  // üéØ GENERATE MJML TEMPLATE USING AI WITH RETRY MECHANISM
  console.log('üé® Generating MJML template using AI with retry mechanism...');
  
  let mjmlCode = '';
  let attempts = 0;
  const maxAttempts = 3;
  
  while (attempts < maxAttempts) {
    attempts++;
    console.log(`üîÑ AI generation attempt ${attempts}/${maxAttempts}`);
    
    try {
      // üîç DEBUG: Log template prompt length and structure
      console.log(`üîç Template prompt length: ${templatePrompt.length} characters`);
      console.log(`üîç Template prompt preview: ${templatePrompt.substring(0, 200)}...`);
      
      // Call OpenAI API directly - integrated with main workflow
      const response = await openai.chat.completions.create({
        model: 'gpt-4o-mini',
        messages: [
          {
            role: 'system',
            content: MJML_GENERATION_INSTRUCTIONS
          },
          {
            role: 'user',
            content: templatePrompt
          }
        ],
        temperature: 0.7,
        max_tokens: 4000
      });
      
      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ MJML –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –æ—Ç OpenAI API
      let mjmlContent = response.choices?.[0]?.message?.content;
      
      if (!mjmlContent || typeof mjmlContent !== 'string') {
        if (!response.choices?.[0]?.message) {
      throw new Error('‚ùå AI failed to generate MJML template - no response message received');
    }
    throw new Error(`‚ùå AI failed to generate MJML template. Response: ${JSON.stringify(response.choices[0].message)}`);
      }
      
      logToFile('info', `Raw AI MJML generated: ${mjmlContent.length} characters`, 'DesignSpecialist-MJML', params.trace_id || undefined);
      
      // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ MJML
      mjmlContent = validateAndFixMjml(mjmlContent);
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ MJML –∫–æ–¥ –µ—Å–ª–∏ –æ–Ω –≤ –±–ª–æ–∫–µ –∫–æ–¥–∞
      const mjmlMatch = mjmlContent.match(/```mjml\n([\s\S]*?)\n```/) || 
                       mjmlContent.match(/```\n([\s\S]*?)\n```/) ||
                       mjmlContent.match(/<mjml[^>]*>[\s\S]*<\/mjml>/);
      
      if (mjmlMatch) {
        mjmlContent = mjmlMatch[1] || mjmlMatch[0];
        mjmlContent = mjmlContent.trim();
      }
      
      logToFile('info', `Processed MJML: ${mjmlContent.length} characters`, 'DesignSpecialist-MJML', params.trace_id || undefined);
      
      // Validate MJML structure
      const validationErrors = [];
      
      if (!mjmlContent.includes('<mjml>') || !mjmlContent.includes('</mjml>')) {
        validationErrors.push('Missing required <mjml> tags');
      }
      
      if (!mjmlContent.includes('<mj-head>') || !mjmlContent.includes('<mj-body>')) {
        validationErrors.push('Missing required <mj-head> or <mj-body> sections');
      }
      
      if (!mjmlContent.includes('<mj-section>')) {
        validationErrors.push('Missing required <mj-section> tags');
      }
      
      if (!mjmlContent.includes('<mj-column>')) {
        validationErrors.push('Missing required <mj-column> tags');
      }
      
      // Check for basic content (handle subject as string or object) - NO FALLBACKS
      if (typeof subject !== 'string' && !((subject as any)?.text || (subject as any)?.value)) {
        throw new Error('‚ùå Subject must be a string or object with text/value property - no fallback allowed');
      }
      const subjectText = typeof subject === 'string' ? subject : ((subject as any)?.text || (subject as any)?.value);
      if (subjectText && !mjmlContent.includes(subjectText.substring(0, 10))) {
        validationErrors.push('Subject not found in generated MJML');
      }
      
      if (validationErrors.length === 0) {
        console.log('‚úÖ MJML template generated successfully using AI');
        mjmlCode = mjmlContent; // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –≤–∞–ª–∏–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        logToFile('info', `MJML template generated successfully: ${mjmlCode.length} characters`, 'DesignSpecialist-MJML', params.trace_id || undefined);
        break;
      } else {
        console.log(`‚ùå Validation failed (attempt ${attempts}): ${validationErrors.join(', ')}`);
        
        if (attempts < maxAttempts) {
          console.log('üîÑ Retrying with improved prompt...');
          
          // Improve prompt for next attempt
          templatePrompt += `

–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í –ü–†–ï–î–´–î–£–©–ï–ô –ü–û–ü–´–¢–ö–ï:
${validationErrors.join('\n')}

–ò–°–ü–†–ê–í–¨ –≠–¢–ò –û–®–ò–ë–ö–ò! –£–±–µ–¥–∏—Å—å —á—Ç–æ:
1. –ï—Å—Ç—å –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–π <mjml> –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π </mjml>
2. –ï—Å—Ç—å <mj-head> —Å <mj-title> –∏ <mj-preview>
3. –ï—Å—Ç—å <mj-body> —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ <mj-section>
4. –ö–∞–∂–¥–∞—è <mj-section> —Å–æ–¥–µ—Ä–∂–∏—Ç <mj-column>
5. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–æ–ª–æ–≤–æ–∫: "${subject}"
6. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–µ–≤—å—é: "${preheader}"
7. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç: "${bodyText.substring(0, 100)}..."

–ì–ï–ù–ï–†–ò–†–£–ô –¢–û–õ–¨–ö–û –í–ê–õ–ò–î–ù–´–ô MJML –ö–û–î!`;
        }
      }
      
    } catch (error) {
      console.error(`‚ùå AI generation failed (attempt ${attempts}):`, error);
      
      if (attempts < maxAttempts) {
        console.log('üîÑ Retrying AI generation...');
        
        // Add error context to prompt
        templatePrompt += `

–û–®–ò–ë–ö–ê –í –ü–†–ï–î–´–î–£–©–ï–ô –ü–û–ü–´–¢–ö–ï: ${error instanceof Error ? error.message : 'Unknown error'}

–ò–°–ü–†–ê–í–¨ –û–®–ò–ë–ö–£ –ò –ì–ï–ù–ï–†–ò–†–£–ô –ö–û–†–†–ï–ö–¢–ù–´–ô MJML!`;
      }
    }
  }
  
  if (!mjmlCode || mjmlCode.length < 100) {
    throw new Error(`Failed to generate valid MJML after ${maxAttempts} attempts. Last attempt produced: ${mjmlCode.substring(0, 200)}...`);
  }

  // üîç –í–ê–õ–ò–î–ê–¶–ò–Ø MJML –ü–ï–†–ï–î –ü–ï–†–ï–î–ê–ß–ï–ô –í HTML –ö–û–ú–ü–ò–õ–Ø–¢–û–†
  console.log('üîç Validating generated MJML before compilation...');
  
  const mjmlValidationErrors: string[] = [];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
  if (!mjmlCode.includes('<mjml>') || !mjmlCode.includes('</mjml>')) {
    mjmlValidationErrors.push('Missing MJML root tags');
  }
  
  if (!mjmlCode.includes('<mj-head>') || !mjmlCode.includes('</mj-head>')) {
    mjmlValidationErrors.push('Missing MJML head section');
  }
  
  if (!mjmlCode.includes('<mj-body>') || !mjmlCode.includes('</mj-body>')) {
    mjmlValidationErrors.push('Missing MJML body section');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è
  const mjmlImageCount = (mjmlCode.match(/<mj-image[^>]*src=/g) || []).length;
  if (mjmlImageCount < processedImages.length) {
    mjmlValidationErrors.push(`Only ${mjmlImageCount}/${processedImages.length} images used in MJML`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –µ—Å–ª–∏ –µ—Å—Ç—å >2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  if (processedImages.length > 2) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≥–∞–ª–µ—Ä–µ–∏ (–Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Å–µ–∫—Ü–∏–∏)
    const hasGalleryStructure = mjmlCode.includes('mj-group') || 
                               (mjmlCode.match(/<mj-image/g) || []).length >= 2;
    
    if (!hasGalleryStructure) {
      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è - AI –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ç–æ
      console.log(`üì∏ Multiple images detected (${processedImages.length}), AI will optimize gallery layout`);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å CTA –∫–Ω–æ–ø–∫–∏
  const ctaButtonCount = (mjmlCode.match(/<mj-button[^>]*href=/g) || []).length;
  if (ctaButtonCount === 0) {
    mjmlValidationErrors.push('No CTA buttons found in MJML');
  }
  
  if (mjmlValidationErrors.length > 0) {
    console.warn('‚ö†Ô∏è MJML validation warnings:', mjmlValidationErrors);
    console.warn('‚ö†Ô∏è Proceeding with compilation, HTML validator will fix issues');
  } else {
    console.log('‚úÖ MJML validation passed');
  }

  try {
    
          // Create MJML template object with metadata
      const mjmlTemplateObject: MjmlTemplate = {
        source: mjmlCode,
        file_size: Buffer.byteLength(mjmlCode, 'utf8'),
        technical_compliance: {
          max_width_respected: mjmlCode.includes('max-width') || mjmlCode.includes('600px'),
          color_scheme_applied: mjmlCode.includes(colors.primary) || mjmlCode.includes(colors.accent),
          typography_followed: mjmlCode.includes('font-family') || mjmlCode.includes('font-size'),
          email_client_optimized: mjmlCode.includes('mj-') && mjmlCode.includes('<mjml>'),
          real_asset_paths: !!assetManifest?.images?.length
        },
        specifications_used: {
          layout: templateDesign?.layout?.type ? templateDesign.layout.type : (() => { throw new Error('‚ùå Layout type is required in templateDesign.layout.type - no fallback allowed'); })(),
          max_width: 600,
          color_scheme: Object.keys(colors).length,
          typography: `${layout.headingFont}, ${layout.bodyFont}`,
          email_clients: 4 // gmail, outlook, apple-mail, yahoo-mail
        }
      };
    
    return mjmlTemplateObject;
    
  } catch (error) {
    console.error('‚ùå AI MJML generation failed:', error);
    throw new Error(`Failed to generate MJML template: ${error instanceof Error ? error.message : 'Unknown error'}`);
  }
}

/**
 * MJML template generation tool
 */
export const generateMjmlTemplate = tool({
  name: 'generateMjmlTemplate',
  description: 'Generate MJML email template with AI-powered dynamic creation and technical optimization',
  parameters: z.object({
    content_context: z.object({}).strict().describe('Content context from Content Specialist'),
    design_requirements: z.object({}).strict().nullable().describe('Design requirements and brand guidelines'),
    trace_id: z.string().nullable().describe('Trace ID for debugging')
  }),
  execute: async (params, context) => {
    // ‚úÖ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º campaign context –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    autoRestoreCampaignLogging(context, 'generateMjmlTemplate');
    
    console.log('\nüìß === MJML TEMPLATE GENERATOR (OpenAI Agents SDK) ===');
    
    // ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ó–ê–©–ò–¢–ê –û–¢ –ë–ï–°–ö–û–ù–ï–ß–ù–û–ô –†–ï–ö–£–†–°–ò–ò
    let campaignPath;
    
    // –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–ª—É—á–µ–Ω–∏—è campaign path –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–π –∑–∞—â–∏—Ç—ã
    if ((context?.context as any)?.designContext?.campaign_path) {
      campaignPath = (context?.context as any).designContext.campaign_path;
    } else if ((context?.context as any)?.campaign?.path) {
      campaignPath = (context?.context as any).campaign.path;
    } else if ((context?.context as any)?.campaignContext?.campaign?.path) {
      campaignPath = (context?.context as any).campaignContext.campaign.path;
    }
    
    if (campaignPath) {
      const mjmlPath = path.join(campaignPath, 'templates', 'email-template.mjml');
      try {
        await fs.access(mjmlPath);
        console.log('üõ°Ô∏è RECURSION PROTECTION: MJML template already exists, stopping execution');
        logToFile('info', 'RECURSION PROTECTION: MJML template already exists, skipping duplicate generation', 'DesignSpecialist-MJML', params.trace_id || undefined);
        return 'MJML template already generated and available - recursion prevented.';
      } catch {
        // File doesn't exist, proceed with generation
        console.log('üîç MJML template not found, proceeding with generation');
      }
    }
    
    // Load content context from email-content.json file - REQUIRED
    console.log('üîç Loading content context from email-content.json...');
    let contentContext;
    
    // Extract campaign path from context - NO CONTENT ACCESS YET
    // let campaignPath; // Already declared above for duplication check
    
    if ((context?.context as any)?.campaign?.path) {
      // OpenAI SDK context format
      campaignPath = (context?.context as any).campaign.path;
      console.log('‚úÖ Found campaign path in OpenAI SDK context.campaign.path');
    } else if ((context?.context as any)?.campaign?.id) {
      // Try to construct path from campaign ID
      campaignPath = `/Users/rtuzov/PycharmProjects/Email-Makers/campaigns/${(context?.context as any).campaign.id}`;
      console.log('‚úÖ Constructed campaign path from context.campaign.id:', campaignPath);
    } else if ((context?.context as any)?.designContext?.campaign_path) {
      campaignPath = (context?.context as any).designContext.campaign_path;
      console.log('‚úÖ Found campaign path in context.designContext.campaign_path');
    } else {
      // Last resort: try to auto-detect from latest campaign
      console.log('üîç Attempting auto-detection of campaign path...');
      try {
        const fs = require('fs');
        const path = require('path');
        const campaignsDir = '/Users/rtuzov/PycharmProjects/Email-Makers/campaigns';
        const campaigns = fs.readdirSync(campaignsDir).filter((dir: string) => dir.startsWith('campaign_'));
        if (campaigns.length > 0) {
          const latestCampaign = campaigns.sort().pop();
          campaignPath = path.join(campaignsDir, latestCampaign);
          console.log('‚úÖ Auto-detected campaign path from latest campaign:', campaignPath);
        } else {
          throw new Error('‚ùå CRITICAL ERROR: No campaigns found for auto-detection');
        }
      } catch (autoDetectError) {
        console.error('‚ùå Auto-detection failed:', autoDetectError instanceof Error ? autoDetectError.message : String(autoDetectError));
        throw new Error('‚ùå CRITICAL ERROR: Campaign path not found in any context and auto-detection failed. Available context: ' + JSON.stringify(Object.keys(context || {})));
      }
    }
    
    // Load content context from email-content.json
    const contentFilePath = path.join(campaignPath, 'content', 'email-content.json');
    const contentFileContent = await fs.readFile(contentFilePath, 'utf8');
    contentContext = JSON.parse(contentFileContent);
    console.log('‚úÖ Content context loaded from email-content.json');
    
    // Debug logging after loading content
    console.log('üîç Debug - Available context keys:', Object.keys(context || {}));
    console.log('üîç Debug - Content context keys:', Object.keys(contentContext || {}));
    console.log('üîç Debug - Context campaign:', (context?.context as any)?.campaign);
    console.log('üîç Debug - Context designContext:', !!(context?.context as any)?.designContext);
    
    if (!contentContext.campaign?.id) {
    throw new Error('‚ùå Campaign ID is required in contentContext.campaign.id - no fallback allowed');
  }
  console.log(`üìã Campaign: ${contentContext.campaign.id}`);
    console.log(`üìÅ Campaign Path: ${campaignPath}`);
    console.log(`üîç Trace ID: ${params.trace_id || 'none'}`);

    try {
      // Get required data from design context
      let assetManifest = (context?.context as any)?.designContext?.asset_manifest;
      let templateDesign = (context?.context as any)?.designContext?.template_design;
      // const _technicalSpec = (context?.context as any)?.designContext?.technical_specification; // Currently unused
      
      // Load asset manifest from correct path
      if (!assetManifest) {
        console.log('üîç Asset manifest not found in context, loading from assets/manifests/asset-manifest.json...');
        const assetManifestPath = path.join(campaignPath, 'assets', 'manifests', 'asset-manifest.json');
        const assetManifestContent = await fs.readFile(assetManifestPath, 'utf8');
        assetManifest = JSON.parse(assetManifestContent);
        console.log('‚úÖ Asset manifest loaded from file successfully');
      }
      
      // üéØ CRITICAL: Load template design from file if not in context
      if (!templateDesign) {
        console.log('üîç Template design not found in context, loading from file...');
        const templateDesignPath = path.join(campaignPath, 'design', 'template-design.json');
        try {
          const templateDesignContent = await fs.readFile(templateDesignPath, 'utf8');
          templateDesign = JSON.parse(templateDesignContent);
          console.log('‚úÖ Template design loaded from file');
        } catch (error) {
          throw new Error(`Template design file not found: ${templateDesignPath}. generateTemplateDesign must be completed first.`);
        }
      }

      // All design data now comes from template-design.json (no technical specification)

      console.log('‚úÖ Loaded technical specification and asset manifest');
      console.log(`üìä Assets: ${Array.isArray(assetManifest?.images || assetManifest?.assetManifest?.images) ? (assetManifest?.images || assetManifest?.assetManifest?.images).length : 0} images, ${Array.isArray(assetManifest?.icons || assetManifest?.assetManifest?.icons) ? (assetManifest?.icons || assetManifest?.assetManifest?.icons).length : 0} icons`);

      // Generate MJML template - NO FALLBACK ALLOWED
      console.log('üé® Using AI template design for enhanced MJML generation');
      
      // Extract colors from template-design.json - NO FALLBACKS
      if (!templateDesign.metadata?.brand_colors?.primary || !templateDesign.metadata?.brand_colors?.accent || !templateDesign.metadata?.brand_colors?.background) {
        throw new Error('‚ùå Brand colors (primary, accent, background) are required in templateDesign.metadata.brand_colors - no fallback allowed');
      }
      const colors = {
        primary: templateDesign.metadata.brand_colors.primary,
        accent: templateDesign.metadata.brand_colors.accent, 
        background: templateDesign.metadata.brand_colors.background,
        text: '#2C3959'
      };
      
      // Extract layout from template-design.json
      const layout = {
        maxWidth: templateDesign.layout?.max_width || 600,
        headingFont: 'Inter',
        bodyFont: 'Inter',
        typography: {
          headingFont: { family: 'Inter', size: '24px' },
          bodyFont: { family: 'Inter', size: '16px' }
        }
      };
      
      let mjmlTemplate = await generateDynamicMjmlTemplate({
        contentContext,
        designBrief: null, // Not used in current implementation
        templateDesign,
        assetManifest,
        colors,
        layout,
        trace_id: params.trace_id || null
      });

      // Save MJML template to campaign
      const mjmlTemplatePath = path.join(campaignPath, 'templates', 'email-template.mjml');
      await fs.mkdir(path.dirname(mjmlTemplatePath), { recursive: true });
      await fs.writeFile(mjmlTemplatePath, mjmlTemplate.source);
      mjmlTemplate.mjml_path = mjmlTemplatePath;
      
      console.log('‚úÖ MJML template saved to campaign');

      // üîß COMPILE MJML TO HTML USING SEPARATE FUNCTION
      mjmlTemplate = await compileMjmlToHtml(mjmlTemplate, campaignPath);

      // Update design context
      const updatedDesignContext = buildDesignContext(context, {
        mjml_template: mjmlTemplate,
        trace_id: params.trace_id
      });

      // Save context to context parameter (OpenAI SDK pattern)
      if (context && context.context) {
        (context.context as any).designContext = updatedDesignContext;
      }

      console.log('‚úÖ MJML Template generation completed successfully');
      console.log(`üìè Template size: ${mjmlTemplate.source.length} characters`);
      console.log(`üé® HTML size: ${mjmlTemplate.file_size} bytes`);
      console.log(`üì± Email client optimized: ${mjmlTemplate.technical_compliance.email_client_optimized ? 'Yes' : 'No'}`);

      // ‚úÖ LOG TO CAMPAIGN
      logToFile('info', `MJML Template generated successfully: ${mjmlTemplate.source.length} characters, HTML: ${mjmlTemplate.file_size} bytes`, 'DesignSpecialist-MJML', params.trace_id || undefined);
      logToFile('info', `Email client optimized: ${mjmlTemplate.technical_compliance.email_client_optimized ? 'Yes' : 'No'}`, 'DesignSpecialist-MJML', params.trace_id || undefined);

      return `MJML Template generated successfully! Template size: ${mjmlTemplate.source.length} characters. HTML file size: ${mjmlTemplate.file_size} bytes. Email client optimization: ${mjmlTemplate.technical_compliance.email_client_optimized ? 'enabled' : 'disabled'}. Layout: ${mjmlTemplate.specifications_used.layout}. Typography: ${mjmlTemplate.specifications_used.typography}.`;

    } catch (error) {
      const errorMessage = error instanceof Error ? error.message : String(error);
      const errorStack = error instanceof Error ? error.stack : 'No stack trace';
      console.error('‚ùå MJML Template generation failed:', errorMessage);
      console.error('‚ùå Error stack:', errorStack);
      console.error('‚ùå MJML generation error:', errorMessage);
      throw new Error(`MJML Template generation failed: ${errorMessage}`);
    }
  }
});
