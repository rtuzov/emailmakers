/**
 * üöÄ SIMPLE CONTENT GENERATOR
 * 
 * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è content_generator –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 * –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∑–∞–≤–∏—Å–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
 */

import { z } from 'zod';
import { tool } from '@openai/agents';

// –ü—Ä–æ—Å—Ç–∞—è Zod —Å—Ö–µ–º–∞
const simpleContentGeneratorSchema = z.object({
  topic: z.string().describe('–¢–µ–º–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞'),
  action: z.enum(['generate', 'test']).describe('–î–µ–π—Å—Ç–≤–∏–µ'),
  language: z.string().optional().nullable().describe('–Ø–∑—ã–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞'),
  tone: z.string().optional().nullable().describe('–¢–æ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç–∞'),
  pricing_data: z.any().optional().nullable().describe('–¶–µ–Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ'),
  include_analytics: z.boolean().optional().nullable().describe('–í–∫–ª—é—á–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É')
});

type SimpleContentGeneratorParams = z.infer<typeof simpleContentGeneratorSchema>;

/**
 * –ü—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */
export async function simpleContentGenerator(params: SimpleContentGeneratorParams): Promise<any> {
  const startTime = Date.now();
  console.log(`üöÄ Simple Content Generator: ${params.action} for "${params.topic}"`);
  
  try {
    // –ü—Ä–æ—Å—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    const content = {
      subject: `${params.topic} - –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç Kupibilet`,
      preheader: `–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏`,
      body: `–£–≤–∞–∂–∞–µ–º—ã–π –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫! –ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –æ—Ç–ª–∏—á–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ —Ç–µ–º–µ "${params.topic}". ${
        params.pricing_data?.cheapest ? `–¶–µ–Ω—ã –æ—Ç ${params.pricing_data.cheapest} ${params.pricing_data.currency}.` : ''
      } –ó–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è! –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∫–æ–º—Ñ–æ—Ä—Ç –≤–∞—à–µ–π —Å–µ–º—å–∏ - –Ω–∞—à –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç.`,
      cta: '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å',
      language: params.language || 'ru',
      tone: params.tone || 'friendly'
    };

    const result = {
      success: true,
      action: params.action,
      data: {
        content: content
      },
      analytics: params.include_analytics ? {
        execution_time: Date.now() - startTime,
        content_length: content.body.length,
        complexity_score: 75,
        generation_confidence: 85,
        ai_model_used: 'simple-generator'
      } : undefined
    };

    console.log(`‚úÖ Simple Content Generator: Completed in ${Date.now() - startTime}ms`);
    return JSON.stringify(result);

  } catch (error) {
    console.error('‚ùå Simple Content Generator error:', error);
    
    const errorResult = {
      success: false,
      action: params.action,
      error: error instanceof Error ? error.message : 'Unknown error',
      analytics: {
        execution_time: Date.now() - startTime,
        content_length: 0,
        complexity_score: 0,
        generation_confidence: 0,
        ai_model_used: 'error'
      }
    };
    
    return JSON.stringify(errorResult);
  }
}

// Export the tool
export const simpleContentGeneratorTool = tool({
  name: 'simple_content_generator',
  description: '–ü—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è email –∫–∞–º–ø–∞–Ω–∏–π –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π',
  parameters: simpleContentGeneratorSchema,
  execute: simpleContentGenerator
}); 