/**
 * ÔøΩÔøΩÔ∏è ASSET TAG PLANNER - OpenAI Agents SDK Compatible
 * 
 * –ü–ª–∞–Ω–∏—Ä—É–µ—Ç —Ç–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ email –∫–∞–º–ø–∞–Ω–∏–∏.
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±—Ä–∏—Ñ –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏ –¥–ª—è Figma –∏ –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.
 * 
 * –ê–†–•–ò–¢–ï–ö–¢–£–†–ê:
 * ‚îú‚îÄ‚îÄ –ê–Ω–∞–ª–∏–∑ –±—Ä–∏—Ñ–∞ –∫–∞–º–ø–∞–Ω–∏–∏
 * ‚îú‚îÄ‚îÄ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
 * ‚îú‚îÄ‚îÄ –ú–∞–ø–ø–∏–Ω–≥ –Ω–∞ —Ä—É—Å—Å–∫–∏–µ —Ç–µ–≥–∏ Figma
 * ‚îú‚îÄ‚îÄ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 * ‚îî‚îÄ‚îÄ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –∞—Å—Å–µ—Ç–æ–≤
 */

import { z } from 'zod';
import { tool } from '@openai/agents';
import { AITagMapper } from './ai-tag-mapper';

// ============================================================================
// SCHEMAS & TYPES
// ============================================================================

/**
 * –°—Ö–µ–º–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —Ç–µ–≥–æ–≤ –∞—Å—Å–µ—Ç–æ–≤
 */
export const AssetTagPlannerParamsSchema = z.object({
  campaign_brief: z.string().describe('–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏'),
  campaign_type: z.enum(['promotional', 'seasonal', 'informational']).describe('–¢–∏–ø –∫–∞–º–ø–∞–Ω–∏–∏'),
  target_audience: z.string().describe('–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è'),
  emotional_tone: z.enum(['positive', 'neutral', 'urgent', 'friendly']).describe('–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω'),
  content_context: z.string().optional().nullable().describe('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞'),
  destinations: z.array(z.string()).optional().nullable().describe('–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π'),
  themes: z.array(z.string()).optional().nullable().describe('–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã –∫–∞–º–ø–∞–Ω–∏–∏')
});

/**
 * –°—Ö–µ–º–∞ –ø–ª–∞–Ω–∞ —Ç–µ–≥–æ–≤ –∞—Å—Å–µ—Ç–æ–≤
 */
export const AssetTagPlanSchema = z.object({
  success: z.boolean().describe('–£—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è'),
  asset_requirements: z.object({
    hero_image: z.object({
      tags: z.array(z.string()).describe('–¢–µ–≥–∏ –¥–ª—è hero –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'),
      description: z.string().describe('–û–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ hero –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é'),
      priority: z.enum(['high', 'medium', 'low']).describe('–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç')
    }),
    content_images: z.array(z.object({
      tags: z.array(z.string()).describe('–¢–µ–≥–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'),
      description: z.string().describe('–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'),
      placement: z.string().describe('–†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ —à–∞–±–ª–æ–Ω–µ')
    })).describe('–ö–æ–Ω—Ç–µ–Ω—Ç–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'),
    footer_elements: z.array(z.object({
      tags: z.array(z.string()).describe('–¢–µ–≥–∏ –¥–ª—è footer —ç–ª–µ–º–µ–Ω—Ç–æ–≤'),
      description: z.string().describe('–û–ø–∏—Å–∞–Ω–∏–µ footer —ç–ª–µ–º–µ–Ω—Ç–æ–≤'),
      type: z.enum(['icon', 'logo', 'decoration']).describe('–¢–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞')
    })).describe('Footer —ç–ª–µ–º–µ–Ω—Ç—ã')
  }).describe('–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∞—Å—Å–µ—Ç–∞–º'),
  figma_search_tags: z.array(z.string()).describe('–¢–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ Figma'),
  external_search_tags: z.array(z.string()).describe('–¢–µ–≥–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –ø–æ–∏—Å–∫–∞'),
  image_distribution: z.object({
    figma_images_count: z.number().describe('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ Figma'),
    external_images_count: z.number().describe('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–Ω–µ—à–Ω–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'),
    total_images_needed: z.number().describe('–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π')
  }).describe('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'),
  reasoning: z.string().describe('–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏')
});

type AssetTagPlannerParams = z.infer<typeof AssetTagPlannerParamsSchema>;
type AssetTagPlan = z.infer<typeof AssetTagPlanSchema>;

// ============================================================================
// OPENAI AGENTS SDK TOOL DEFINITION
// ============================================================================

/**
 * OpenAI Agents SDK —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–≥–æ–≤ –∞—Å—Å–µ—Ç–æ–≤
 */
export const assetTagPlannerTool = tool({
  name: 'asset_tag_planner',
  description: '–ü–ª–∞–Ω–∏—Ä—É–µ—Ç —Ç–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ email –∫–∞–º–ø–∞–Ω–∏–∏. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±—Ä–∏—Ñ –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏ –¥–ª—è Figma –∏ –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.',
  parameters: AssetTagPlannerParamsSchema,
  execute: async (params: AssetTagPlannerParams): Promise<AssetTagPlan> => {
    console.log('üè∑Ô∏è Asset Tag Planner: Starting planning process...');
    console.log('üìã Campaign Brief:', params.campaign_brief);
    
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AI Tag Mapper
      const aiTagMapper = new AITagMapper();
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –±—Ä–∏—Ñ–∞
      const keywords = extractKeywordsFromBrief(params.campaign_brief);
      console.log('üîç Extracted keywords:', keywords);
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ —Ç–µ–≥–∏
      const baseTags = generateBaseTags(params);
      console.log('üè∑Ô∏è Base tags:', baseTags);
      
      // –ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º –≤—Å–µ —Ç–µ–≥–∏
      const allTags = [...keywords, ...baseTags];
      
      // –ú–∞–ø–ø–∏–º —Ç–µ–≥–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–µ Figma —Ç–µ–≥–∏
      const mappingResult = await aiTagMapper.mapTags({
        inputTags: allTags,
        campaignType: params.campaign_type,
        emotionalTone: params.emotional_tone,
        ...(params.content_context ? { contentContext: params.content_context } : {})
      });
      
      const figmaTags = mappingResult.success ? mappingResult.mappedTags : [];
      
      console.log('üéØ Mapped Figma tags:', figmaTags);
      
      // –ü–ª–∞–Ω–∏—Ä—É–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      const distribution = planImageDistribution(params);
      console.log('üìä Image distribution:', distribution);
      
      // –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∞—Å—Å–µ—Ç–∞–º
      const assetRequirements = createAssetRequirements(figmaTags, params, distribution);
      
      // –°–æ–∑–¥–∞–µ–º —Ç–µ–≥–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –ø–æ–∏—Å–∫–∞
      const externalTags = createExternalSearchTags(allTags, params);
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω
      const plan: AssetTagPlan = {
        success: true,
        asset_requirements: assetRequirements,
        figma_search_tags: figmaTags,
        external_search_tags: externalTags,
        image_distribution: distribution,
        reasoning: `–°–æ–∑–¥–∞–Ω –ø–ª–∞–Ω –¥–ª—è ${params.campaign_type} –∫–∞–º–ø–∞–Ω–∏–∏ —Å ${distribution.total_images_needed} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏. ` +
                  `${distribution.figma_images_count} –∏–∑ Figma (–±—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ) –∏ ${distribution.external_images_count} –≤–Ω–µ—à–Ω–∏—Ö. ` +
                  `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã —Ç–µ–≥–∏: ${figmaTags.slice(0, 3).join(', ')} –∏ –¥—Ä—É–≥–∏–µ.`
      };
      
      console.log('‚úÖ Asset Tag Planner: Plan created successfully');
      return plan;
      
    } catch (error) {
      console.error('‚ùå Asset Tag Planner error:', error);
      throw new Error(`Asset Tag Planner failed: ${error instanceof Error ? error instanceof Error ? error.message : String(error) : String(error)}`);
    }
  }
});

// ============================================================================
// HELPER FUNCTIONS
// ============================================================================

/**
 * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∏–∑ –±—Ä–∏—Ñ–∞ –∫–∞–º–ø–∞–Ω–∏–∏
 */
function extractKeywordsFromBrief(brief: string): string[] {
  const keywords: string[] = [];
  
  // –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π
  const travelKeywords = ['–ø—É—Ç–µ—à–µ—Å—Ç–≤', '–æ—Ç–¥—ã—Ö', '–ø–µ—Ä–µ–ª–µ—Ç', '–∞–≤–∏–∞', '—Å–∞–º–æ–ª–µ—Ç', '–ø–æ–ª–µ—Ç', '–±–∏–ª–µ—Ç', '–º–∞—Ä—à—Ä—É—Ç'];
  const seasonKeywords = ['–≤–µ—Å–Ω–∞', '–ª–µ—Ç–æ', '–æ—Å–µ–Ω—å', '–∑–∏–º–∞', '—Å–µ–∑–æ–Ω'];
  const locationKeywords = ['—è–ø–æ–Ω–∏—è', '—Å–æ—á–∏', '–º–æ—Å–∫–≤–∞', '–µ–≤—Ä–æ–ø–∞', '–∞–∑–∏—è'];
  const actionKeywords = ['—Å–∫–∏–¥–∫–∞', '–∞–∫—Ü–∏—è', '–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ', '–≥–æ—Ä—è—â–∏–π', '—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π'];
  
  const briefLower = brief.toLowerCase();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
  [...travelKeywords, ...seasonKeywords, ...locationKeywords, ...actionKeywords].forEach(keyword => {
    if (briefLower.includes(keyword)) {
      keywords.push(keyword);
    }
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Ç–µ–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  if (briefLower.includes('—è–ø–æ–Ω–∏—è') || briefLower.includes('—Å–∞–∫—É—Ä–∞')) {
    keywords.push('—è–ø–æ–Ω–∏—è', '—Å–∞–∫—É—Ä–∞', '–∞–∑–∏—è');
  }
  
  if (briefLower.includes('–≥–æ—Ä—è—â–∏–µ') || briefLower.includes('—Å–∫–∏–¥–∫–∞')) {
    keywords.push('–∞–∫—Ü–∏—è', '—Å–∫–∏–¥–∫–∞', '–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ');
  }
  
  return [...new Set(keywords)]; // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö —Ç–µ–≥–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–∞–º–ø–∞–Ω–∏–∏
 */
function generateBaseTags(params: AssetTagPlannerParams): string[] {
  const tags: string[] = [];
  
  // –¢–µ–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –∫–∞–º–ø–∞–Ω–∏–∏
  switch (params.campaign_type) {
    case 'promotional':
      tags.push('promotion', 'sale', 'offer', '–∞–∫—Ü–∏—è');
      break;
    case 'seasonal':
      tags.push('seasonal', 'holiday', 'celebration', '—Å–µ–∑–æ–Ω');
      break;
    case 'informational':
      tags.push('info', 'news', 'update', '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è');
      break;
  }
  
  // –¢–µ–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–æ–Ω–∞
  switch (params.emotional_tone) {
    case 'positive':
      tags.push('happy', 'joy', 'positive', '–≤–µ—Å–µ–ª—ã–π');
      break;
    case 'friendly':
      tags.push('friendly', 'warm', 'welcoming', '–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π');
      break;
    case 'urgent':
      tags.push('urgent', 'fast', 'quick', '—Å—Ä–æ—á–Ω–æ');
      break;
  }
  
  // –¢–µ–≥–∏ –¥–ª—è —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏
  if (params.target_audience.includes('–º–æ–ª–æ–¥–µ–∂') || params.target_audience.includes('young')) {
    tags.push('young', 'youth', 'modern', '–º–æ–ª–æ–¥–µ–∂—å');
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  if (params.destinations) {
    tags.push(...params.destinations);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–º—ã
  if (params.themes) {
    tags.push(...params.themes);
  }
  
  return tags;
}

/**
 * –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
function planImageDistribution(params: AssetTagPlannerParams): {
  figma_images_count: number;
  external_images_count: number;
  total_images_needed: number;
} {
  // –ë–∞–∑–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∫–∞–º–ø–∞–Ω–∏–∏
  let totalImages = 3; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: hero + 1 content + 1 footer
  
  if (params.campaign_type === 'promotional') {
    totalImages = 4; // –ë–æ–ª—å—à–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–º–æ
  } else if (params.campaign_type === 'seasonal') {
    totalImages = 5; // –°–µ–∑–æ–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –±–æ–ª–µ–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ
  }
  
  // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç Figma –∞—Å—Å–µ—Ç–∞–º (–±—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ)
  const figmaCount = Math.ceil(totalImages * 0.7); // 70% –∏–∑ Figma
  const externalCount = totalImages - figmaCount;
  
  return {
    figma_images_count: figmaCount,
    external_images_count: externalCount,
    total_images_needed: totalImages
  };
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ –∞—Å—Å–µ—Ç–∞–º
 */
function createAssetRequirements(
  figmaTags: string[],
  params: AssetTagPlannerParams,
  distribution: { figma_images_count: number; external_images_count: number; total_images_needed: number; }
): AssetTagPlan['asset_requirements'] {
  
  // Hero –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–≤—Å–µ–≥–¥–∞ –∏–∑ Figma –¥–ª—è –±—Ä–µ–Ω–¥–∏–Ω–≥–∞)
  const heroTags = figmaTags.filter(tag => 
    ['–∑–∞—è—Ü', '–∫—Ä–æ–ª–∏–∫', '–ø–µ—Ä—Å–æ–Ω–∞–∂', '–≥–µ—Ä–æ–π', '–≥–ª–∞–≤–Ω—ã–π'].includes(tag)
  ).slice(0, 3);
  
  // –ö–æ–Ω—Ç–µ–Ω—Ç–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const contentImages = [];
  const remainingTags = figmaTags.filter(tag => !heroTags.includes(tag));
  
  for (let i = 0; i < distribution.total_images_needed - 2; i++) { // -2 –¥–ª—è hero –∏ footer
    const startIdx = i * 2;
    const imageTags = remainingTags.slice(startIdx, startIdx + 3);
    
    contentImages.push({
      tags: imageTags,
      description: `–ö–æ–Ω—Ç–µ–Ω—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${i + 1} –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è`,
      placement: i === 0 ? 'main_content' : `section_${i + 1}`
    });
  }
  
  // Footer —ç–ª–µ–º–µ–Ω—Ç—ã
  const footerTags = ['–∏–∫–æ–Ω–∫–∞', '–ª–æ–≥–æ—Ç–∏–ø', '–∑–Ω–∞—á–æ–∫'].filter(tag => figmaTags.includes(tag));
  
  return {
    hero_image: {
      tags: heroTags.length > 0 ? heroTags : ['–∑–∞—è—Ü', '–ø–µ—Ä—Å–æ–Ω–∞–∂', '–≥–µ—Ä–æ–π'],
      description: `Hero –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è ${params.campaign_type} –∫–∞–º–ø–∞–Ω–∏–∏ —Å –±—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º`,
      priority: 'high' as const
    },
    content_images: contentImages,
    footer_elements: [{
      tags: footerTags.length > 0 ? footerTags : ['–∏–∫–æ–Ω–∫–∞', '–ª–æ–≥–æ—Ç–∏–ø'],
      description: 'Footer —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –∏–∫–æ–Ω–∫–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∑–∞–π–Ω–∞',
      type: 'icon' as const
    }]
  };
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–æ–≤ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –ø–æ–∏—Å–∫–∞
 */
function createExternalSearchTags(inputTags: string[], params: AssetTagPlannerParams): string[] {
  const externalTags = [];
  
  // –ü–µ—Ä–µ–≤–æ–¥–∏–º —Ä—É—Å—Å–∫–∏–µ —Ç–µ–≥–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
  const translationMap: Record<string, string> = {
    '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è': 'travel',
    '–æ—Ç–¥—ã—Ö': 'vacation',
    '–∞–≤–∏–∞—Ü–∏—è': 'aviation',
    '—Å–∞–º–æ–ª–µ—Ç': 'airplane',
    '–≤–µ—Å–Ω–∞': 'spring',
    '–ª–µ—Ç–æ': 'summer',
    '—è–ø–æ–Ω–∏—è': 'japan',
    '—Å–∞–∫—É—Ä–∞': 'sakura',
    '–º–æ–ª–æ–¥–µ–∂—å': 'young people',
    '–∞–∫—Ü–∏—è': 'promotion',
    '—Å–∫–∏–¥–∫–∞': 'discount'
  };
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–µ —Ç–µ–≥–∏
  inputTags.forEach(tag => {
    const translated = translationMap[tag.toLowerCase()];
    if (translated) {
      externalTags.push(translated);
    } else if (!/[–∞-—è—ë]/i.test(tag)) { // –ï—Å–ª–∏ —Ç–µ–≥ —É–∂–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º
      externalTags.push(tag);
    }
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —Ç–µ–≥–∏
  externalTags.push('high quality', 'professional', 'marketing');
  
  if (params.campaign_type === 'promotional') {
    externalTags.push('sale', 'offer', 'deal');
  }
  
  return [...new Set(externalTags)]; // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
}

// No fallback plans - all errors must be handled properly by throwing

// ============================================================================
// EXPORTS
// ============================================================================

// –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ - –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
export const executeAssetTagPlanner = async (params: AssetTagPlannerParams): Promise<AssetTagPlan> => {
  // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ –≤ tool.execute
  console.log('üè∑Ô∏è Asset Tag Planner: Starting planning process...');
  console.log('üìã Campaign Brief:', params.campaign_brief);
  
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AI Tag Mapper
    const aiTagMapper = new AITagMapper();
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –±—Ä–∏—Ñ–∞
    const keywords = extractKeywordsFromBrief(params.campaign_brief);
    console.log('üîç Extracted keywords:', keywords);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ —Ç–µ–≥–∏
    const baseTags = generateBaseTags(params);
    console.log('üè∑Ô∏è Base tags:', baseTags);
    
    // –ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º –≤—Å–µ —Ç–µ–≥–∏
    const allTags = [...keywords, ...baseTags];
    
    // –ú–∞–ø–ø–∏–º —Ç–µ–≥–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–µ Figma —Ç–µ–≥–∏
    const mappingResult = await aiTagMapper.mapTags({
      inputTags: allTags,
      campaignType: params.campaign_type,
      emotionalTone: params.emotional_tone,
      ...(params.content_context ? { contentContext: params.content_context } : {})
    });
    
    const figmaTags = mappingResult.success ? mappingResult.mappedTags : [];
    
    console.log('üéØ Mapped Figma tags:', figmaTags);
    
    // –ü–ª–∞–Ω–∏—Ä—É–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const distribution = planImageDistribution(params);
    console.log('üìä Image distribution:', distribution);
    
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∞—Å—Å–µ—Ç–∞–º
    const assetRequirements = createAssetRequirements(figmaTags, params, distribution);
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ–≥–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –ø–æ–∏—Å–∫–∞
    const externalTags = createExternalSearchTags(allTags, params);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω
    const plan: AssetTagPlan = {
      success: true,
      asset_requirements: assetRequirements,
      figma_search_tags: figmaTags,
      external_search_tags: externalTags,
      image_distribution: distribution,
      reasoning: `–°–æ–∑–¥–∞–Ω –ø–ª–∞–Ω –¥–ª—è ${params.campaign_type} –∫–∞–º–ø–∞–Ω–∏–∏ —Å ${distribution.total_images_needed} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏. ` +
                `${distribution.figma_images_count} –∏–∑ Figma (–±—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ) –∏ ${distribution.external_images_count} –≤–Ω–µ—à–Ω–∏—Ö. ` +
                `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã —Ç–µ–≥–∏: ${figmaTags.slice(0, 3).join(', ')} –∏ –¥—Ä—É–≥–∏–µ.`
    };
    
    console.log('‚úÖ Asset Tag Planner: Plan created successfully');
    return plan;
    
  } catch (error) {
    console.error('‚ùå Asset Tag Planner error:', error);
    throw new Error(`Asset Tag Planner failed: ${error instanceof Error ? error instanceof Error ? error.message : String(error) : String(error)}`);
  }
};

export type { AssetTagPlannerParams, AssetTagPlan };
export default assetTagPlannerTool; 