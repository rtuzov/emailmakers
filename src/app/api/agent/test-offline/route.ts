import { NextRequest, NextResponse } from 'next/server';

/**
 * Test Offline Agent Route
 * Tests the agent tools in offline mode without external API dependencies
 */
export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    console.log('üß™ Test offline agent called with:', body);

    // A/B testing integration DISABLED
    // A/B testing has been temporarily disabled as requested
    let abTestingConfig = null;
    console.log('üö´ A/B testing is disabled - using default configuration');

    // COMMENTED OUT - Original A/B testing integration
    /*
    // Get A/B testing configuration if userId provided
    let abTestingConfig = null;
    if (body.userId) {
      try {
        const abResponse = await fetch(`http://localhost:3000/api/ab-testing?action=config&userId=${body.userId}`);
        const abData = await abResponse.json();
        if (abData.success) {
          abTestingConfig = abData.data;
          console.log('üß™ A/B Testing Config applied:', abTestingConfig);
        }
      } catch (abError) {
        console.warn('‚ö†Ô∏è A/B testing config failed, using defaults:', abError);
      }
    }
    */

    // Simulate the agent processing time
    await new Promise(resolve => setTimeout(resolve, 2000));

    // Return a successful response with mock HTML content
    const mockResponse = {
      status: 'success',
      data: {
        html: `<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üèõÔ∏è –ú–æ—Å–∫–≤–∞ –∂–¥–µ—Ç! –ë–∏–ª–µ—Ç—ã –æ—Ç 7253 RUB</title>
    <style>
        body { margin: 0; font-family: Arial, sans-serif; background-color: #f5f5f5; }
        .container { max-width: 600px; margin: 0 auto; background-color: white; }
        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; text-align: center; }
        .content { padding: 30px; }
        .price { background-color: #e8f5e8; border-left: 4px solid #4caf50; padding: 15px; margin: 20px 0; }
        .cta { background-color: #ff6b35; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; display: inline-block; margin: 20px 0; }
        .footer { background-color: #f8f9fa; padding: 20px; text-align: center; color: #666; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üèõÔ∏è –ú–æ—Å–∫–≤–∞ –∂–¥–µ—Ç –≤–∞—Å!</h1>
            <p>–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è —Å—Ç–æ–ª–∏—Ü—É –†–æ—Å—Å–∏–∏ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º —Ü–µ–Ω–∞–º</p>
        </div>
        
        <div class="content">
            <h2>–ú–µ—á—Ç–∞–µ—Ç–µ –æ –ø–æ–µ–∑–¥–∫–µ –≤ —Å–µ—Ä–¥—Ü–µ –†–æ—Å—Å–∏–∏?</h2>
            <p>–ú–æ—Å–∫–≤–∞ ‚Äî —ç—Ç–æ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–π –≥–æ—Ä–æ–¥, –≥–¥–µ –∏—Å—Ç–æ—Ä–∏—è –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å—é! –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –∂–∏—Ç–µ–ª–µ–π –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞ –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –∞–≤–∏–∞–±–∏–ª–µ—Ç—ã.</p>
            
            <div class="price">
                <h3>‚úàÔ∏è –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –Ω–∞ —Ñ–µ–≤—Ä–∞–ª—å 2025:</h3>
                <ul>
                    <li><strong>LED ‚Üí MOW:</strong> –æ—Ç 7,253 ‚ÇΩ (1 —Ñ–µ–≤—Ä–∞–ª—è)</li>
                    <li><strong>LED ‚Üí MOW:</strong> –æ—Ç 8,150 ‚ÇΩ (8 —Ñ–µ–≤—Ä–∞–ª—è)</li>
                    <li><strong>LED ‚Üí MOW:</strong> –æ—Ç 7,890 ‚ÇΩ (15 —Ñ–µ–≤—Ä–∞–ª—è)</li>
                </ul>
            </div>
            
            <h3>üéØ –ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç –≤ –ú–æ—Å–∫–≤–µ:</h3>
            <ul>
                <li>üèõÔ∏è –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å –∏ –ö—Ä–µ–º–ª—å</li>
                <li>üé≠ –ë–æ–ª—å—à–æ–π —Ç–µ–∞—Ç—Ä –∏ –¢—Ä–µ—Ç—å—è–∫–æ–≤—Å–∫–∞—è –≥–∞–ª–µ—Ä–µ—è</li>
                <li>üçΩÔ∏è –ò–∑—ã—Å–∫–∞–Ω–Ω–∞—è —Ä—É—Å—Å–∫–∞—è –∫—É—Ö–Ω—è</li>
                <li>üõçÔ∏è –¢–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã –∏ –±—É—Ç–∏–∫–∏</li>
            </ul>
            
            <p>–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Å–µ—Ç–∏—Ç—å —Å—Ç–æ–ª–∏—Ü—É –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º! –ë—Ä–æ–Ω–∏—Ä—É–π—Ç–µ –±–∏–ª–µ—Ç—ã —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∏—Ç–µ –≥–∞—Ä–∞–Ω—Ç–∏—é –ª—É—á—à–µ–π —Ü–µ–Ω—ã.</p>
            
            <a href="https://kupibilet.ru" class="cta">–ù–∞–π—Ç–∏ –±–∏–ª–µ—Ç—ã ‚Üí</a>
        </div>
        
        <div class="footer">
            <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –∫–æ–º–∞–Ω–¥–∞ Kupibilet<br>
            –í–∞—à–∏ –Ω–∞–¥–µ–∂–Ω—ã–µ –ø–æ–º–æ—â–Ω–∏–∫–∏ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö</p>
        </div>
    </div>
</body>
</html>`,
        subject: "üèõÔ∏è –ú–æ—Å–∫–≤–∞ –∂–¥–µ—Ç! –ë–∏–ª–µ—Ç—ã –æ—Ç 7,253 ‚ÇΩ",
        preheader: "–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è —Å—Ç–æ–ª–∏—Ü—É –†–æ—Å—Å–∏–∏ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º —Ü–µ–Ω–∞–º",
        metadata: {
          duration: 2000,
          mode: 'test_offline',
          tools_used: ['T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9'],
          generation_time: 2.0,
          token_usage: 1200,
          file_size: 2847
        }
      },
      layout_regression: 'pass',
      litmus: 'pass',
      generation_time: 2.0,
      token_usage: 1200
    };

    console.log('‚úÖ Test offline agent returning mock response');
    return NextResponse.json(mockResponse);

  } catch (error) {
    console.error('‚ùå Test offline agent error:', error);
    return NextResponse.json({
      status: 'error',
      error_message: error instanceof Error ? error.message : 'Unknown error'
    }, { status: 500 });
  }
}

export async function GET() {
  return NextResponse.json({
    status: 'healthy',
    message: 'Test Offline Agent API',
    description: 'Simulates agent response for frontend testing'
  });
} 