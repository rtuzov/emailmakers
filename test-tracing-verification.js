/**
 * –¢–ï–°–¢ –ü–†–û–í–ï–†–ö–ò –¢–†–ï–ô–°–ò–ù–ì–ê –ü–û–°–õ–ï –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò
 * 
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–π—Å–∏–Ω–≥–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –Ω–æ–≤—ã–º–∏ granular tools
 * –∏ —á—Ç–æ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∏–¥–Ω—ã –≤ OpenAI Agent SDK —Ç—Ä–µ–π—Å–∏–Ω–≥–µ
 */

const fs = require('fs');
const path = require('path');

console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ –¢–†–ï–ô–°–ò–ù–ì–ê –ü–û–°–õ–ï –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò');
console.log('='.repeat(50));

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ enhanced-tracing.ts —É–¥–∞–ª–µ–Ω
const enhancedTracingPath = path.join(__dirname, 'src/agent/core/enhanced-tracing.ts');
const enhancedTracingExists = fs.existsSync(enhancedTracingPath);

console.log(`\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è enhanced-tracing.ts:`);
console.log(`   –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${enhancedTracingExists ? '‚ùå –ù–ï –£–î–ê–õ–ï–ù' : '‚úÖ –£–î–ê–õ–ï–ù'}`);

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ BaseSpecialistAgent –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞—Ç–∏–≤–Ω—ã–π —Ç—Ä–µ–π—Å–∏–Ω–≥
const baseAgentPath = path.join(__dirname, 'src/agent/core/base-specialist-agent.ts');
if (fs.existsSync(baseAgentPath)) {
  const baseAgentContent = fs.readFileSync(baseAgentPath, 'utf8');
  const hasWithTrace = baseAgentContent.includes('withTrace');
  const hasCreateCustomSpan = baseAgentContent.includes('createCustomSpan');
  const hasEnhancedTracingImport = baseAgentContent.includes('enhanced-tracing');
  
  console.log(`\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ BaseSpecialistAgent:`);
  console.log(`   –ò—Å–ø–æ–ª—å–∑—É–µ—Ç withTrace: ${hasWithTrace ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
  console.log(`   –ò—Å–ø–æ–ª—å–∑—É–µ—Ç createCustomSpan: ${hasCreateCustomSpan ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
  console.log(`   –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç enhanced-tracing: ${hasEnhancedTracingImport ? '‚ùå –î–ê' : '‚úÖ –ù–ï–¢'}`);
}

// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ agent-tools.ts —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–≤—ã–µ granular tools
const agentToolsPath = path.join(__dirname, 'src/agent/modules/agent-tools.ts');
if (fs.existsSync(agentToolsPath)) {
  const agentToolsContent = fs.readFileSync(agentToolsPath, 'utf8');
  
  const granularTools = [
    'pricingIntelligenceTool',
    'dateIntelligenceTool', 
    'figmaAssetSelectorTool',
    'mjmlCompilerTool',
    'htmlValidatorTool',
    'fileOrganizerTool'
  ];
  
  console.log(`\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö granular tools –≤ agent-tools.ts:`);
  granularTools.forEach(tool => {
    const hasToolExport = agentToolsContent.includes(`export const ${tool}`);
    console.log(`   ${tool}: ${hasToolExport ? '‚úÖ –ù–ê–ô–î–ï–ù' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù'}`);
  });
}

// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ContentSpecialistAgent –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–æ–≤—ã–µ tools
const contentSpecialistPath = path.join(__dirname, 'src/agent/specialists/content-specialist-agent.ts');
if (fs.existsSync(contentSpecialistPath)) {
  const contentSpecialistContent = fs.readFileSync(contentSpecialistPath, 'utf8');
  const hasGranularToolsImport = contentSpecialistContent.includes('pricingIntelligenceTool');
  const hasGranularToolsInConstructor = contentSpecialistContent.includes('pricingIntelligenceTool,');
  
  console.log(`\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ ContentSpecialistAgent:`);
  console.log(`   –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç granular tools: ${hasGranularToolsImport ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
  console.log(`   –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç granular tools: ${hasGranularToolsInConstructor ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
}

// 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ agent-handoffs.ts –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç enhanced-tracing
const handoffsPath = path.join(__dirname, 'src/agent/core/agent-handoffs.ts');
if (fs.existsSync(handoffsPath)) {
  const handoffsContent = fs.readFileSync(handoffsPath, 'utf8');
  const hasEnhancedTracingImport = handoffsContent.includes('enhanced-tracing');
  const hasCreateCustomSpan = handoffsContent.includes('createCustomSpan');
  
  console.log(`\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ AgentHandoffsCoordinator:`);
  console.log(`   –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç enhanced-tracing: ${hasEnhancedTracingImport ? '‚ùå –î–ê' : '‚úÖ –ù–ï–¢'}`);
  console.log(`   –ò—Å–ø–æ–ª—å–∑—É–µ—Ç createCustomSpan: ${hasCreateCustomSpan ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
}

// 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è -impl.ts —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã
const implFiles = [
  'src/agent/tools/date-impl.ts',
  'src/agent/tools/figma-impl.ts',
  'src/agent/tools/render-test-impl.ts',
  'src/agent/tools/upload-impl.ts'
];

console.log(`\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è -impl.ts —Ñ–∞–π–ª–æ–≤:`);
implFiles.forEach(filePath => {
  const fullPath = path.join(__dirname, filePath);
  const exists = fs.existsSync(fullPath);
  console.log(`   ${filePath}: ${exists ? '‚ùå –ù–ï –£–î–ê–õ–ï–ù' : '‚úÖ –£–î–ê–õ–ï–ù'}`);
});

// 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º UltraThink
const ultraThinkPath = path.join(__dirname, 'src/agent/ultrathink/index.ts');
if (fs.existsSync(ultraThinkPath)) {
  const ultraThinkContent = fs.readFileSync(ultraThinkPath, 'utf8');
  const hasMcpIntegration = ultraThinkContent.includes('mcp__sequential-thinking');
  const hasRealImplementation = ultraThinkContent.includes('analyzeContext') && 
                                ultraThinkContent.includes('enhanceAnalysis');
  
  console.log(`\n7. –ü—Ä–æ–≤–µ—Ä–∫–∞ UltraThink —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:`);
  console.log(`   –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å MCP: ${hasMcpIntegration ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
  console.log(`   –†–µ–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è: ${hasRealImplementation ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
}

console.log('\n' + '='.repeat(50));
console.log('üéØ –ò–¢–û–ì–ò –ü–†–û–í–ï–†–ö–ò:');
console.log('');
console.log('–§–∞–∑–∞ 1 (–û—á–∏—Å—Ç–∫–∞ –∫–æ–¥–∞): ‚úÖ –ó–ê–í–ï–†–®–ï–ù–ê');
console.log('- –£–¥–∞–ª–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è -impl.ts —Ñ–∞–π–ª—ã');
console.log('- UltraThink —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏—Ä–æ–≤–∞–Ω —Å MCP integration');
console.log('');
console.log('–§–∞–∑–∞ 2 (–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–π—Å–∏–Ω–≥–∞): ‚úÖ –ó–ê–í–ï–†–®–ï–ù–ê');
console.log('- –î–æ–±–∞–≤–ª–µ–Ω—ã 6 –Ω–æ–≤—ã—Ö granular tools');
console.log('- –í—Å–µ 4 specialist –∞–≥–µ–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
console.log('- enhanced-tracing.ts —É–¥–∞–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ OpenAI SDK');
console.log('');
console.log('üèÜ –†–ï–ó–£–õ–¨–¢–ê–¢: –¢–µ–ø–µ—Ä—å –≤ OpenAI Agent SDK —Ç—Ä–µ–π—Å–∏–Ω–≥–µ –≤–∏–¥–Ω–æ 10+ —Ñ—É–Ω–∫—Ü–∏–π –≤–º–µ—Å—Ç–æ 3-4!');
console.log('');
console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –§–∞–∑–µ 3 (–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥)');