# Email-Makers Production Nginx Configuration
# Optimized for performance, security, and scalability

# Main context
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events context
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

# HTTP context
http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format json escape=json '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_response_time":"$upstream_response_time",'
        '"upstream_connect_time":"$upstream_connect_time",'
        '"upstream_header_time":"$upstream_header_time"'
    '}';

    access_log /var/log/nginx/access.log json;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    # Client settings
    client_max_body_size 50M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=100r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.emailmakers.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https://cdn.emailmakers.com https://images.unsplash.com https://api.figma.com; connect-src 'self' https://api.openai.com https://api.anthropic.com https://api.figma.com https://api.litmus.com; font-src 'self' https://fonts.gstatic.com; object-src 'none'; media-src 'self'; frame-src 'none';" always;

    # Upstream configuration for load balancing
    upstream emailmakers_app {
        least_conn;
        server app:3000 max_fails=3 fail_timeout=30s;
        # Add more app instances for horizontal scaling
        # server app2:3000 max_fails=3 fail_timeout=30s;
        # server app3:3000 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }

    # Cache zones
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=10m use_temp_path=off;

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name emailmakers.com www.emailmakers.com;
        
        # Security headers for HTTP
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Health check endpoint (allow HTTP for load balancer health checks)
        location /health {
            access_log off;
            proxy_pass http://emailmakers_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name emailmakers.com www.emailmakers.com;

        # SSL certificate configuration
        ssl_certificate /etc/nginx/ssl/emailmakers.crt;
        ssl_certificate_key /etc/nginx/ssl/emailmakers.key;
        ssl_trusted_certificate /etc/nginx/ssl/emailmakers-chain.crt;

        # HSTS header
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Rate limiting
        limit_req zone=general burst=50 nodelay;
        limit_conn perip 20;
        limit_conn perserver 1000;

        # Root location - Next.js application
        location / {
            proxy_pass http://emailmakers_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # API routes with specific rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://emailmakers_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API-specific timeouts (longer for AI processing)
            proxy_connect_timeout 5s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # Disable caching for API routes by default
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Cache static API responses (like health checks)
        location ~* ^/api/(health|status|info)$ {
            proxy_pass http://emailmakers_app;
            proxy_cache api_cache;
            proxy_cache_valid 200 1m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_revalidate on;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Static assets with aggressive caching
        location /_next/static/ {
            limit_req zone=static burst=100 nodelay;
            
            proxy_pass http://emailmakers_app;
            proxy_cache static_cache;
            proxy_cache_valid 200 1y;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            
            # Cache headers
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header X-Cache-Status $upstream_cache_status;
            
            # Compression
            gzip_static on;
        }

        # Image optimization and caching
        location /_next/image {
            proxy_pass http://emailmakers_app;
            proxy_cache static_cache;
            proxy_cache_valid 200 24h;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            
            add_header Cache-Control "public, max-age=86400, stale-while-revalidate=31536000";
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Favicon and manifest files
        location ~* \.(ico|png|svg|webmanifest)$ {
            proxy_pass http://emailmakers_app;
            proxy_cache static_cache;
            proxy_cache_valid 200 7d;
            proxy_cache_valid 404 1h;
            
            add_header Cache-Control "public, max-age=604800";
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Font files
        location ~* \.(woff|woff2|eot|ttf|otf)$ {
            proxy_pass http://emailmakers_app;
            proxy_cache static_cache;
            proxy_cache_valid 200 1y;
            proxy_cache_valid 404 1h;
            
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header Access-Control-Allow-Origin "*";
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Robots.txt and sitemap
        location ~* \.(txt|xml)$ {
            proxy_pass http://emailmakers_app;
            proxy_cache static_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_valid 404 1m;
            
            add_header Cache-Control "public, max-age=3600";
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Security.txt
        location /.well-known/security.txt {
            proxy_pass http://emailmakers_app;
            add_header Cache-Control "public, max-age=86400";
        }

        # Block access to sensitive files
        location ~* \.(env|log|config)$ {
            deny all;
            return 404;
        }

        # Block access to hidden files
        location ~ /\. {
            deny all;
            return 404;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /500.html;

        # Health check endpoint for load balancers
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Metrics endpoint for monitoring
        location /nginx-status {
            access_log off;
            allow 172.20.0.0/16;  # Allow from app network
            allow 172.21.0.0/16;  # Allow from monitoring network
            deny all;
            
            stub_status on;
        }
    }

    # Monitoring and metrics servers
    server {
        listen 8080;
        server_name localhost;
        
        location /metrics {
            access_log off;
            allow 172.21.0.0/16;  # Allow from monitoring network
            deny all;
            
            # Nginx metrics (requires nginx-prometheus-exporter)
            proxy_pass http://localhost:9113/metrics;
        }
    }
}

# Stream context for TCP/UDP load balancing (if needed)
# stream {
#     upstream database {
#         server database:5432;
#     }
#     
#     server {
#         listen 5432;
#         proxy_pass database;
#         proxy_timeout 1s;
#         proxy_responses 1;
#         error_log /var/log/nginx/database.log;
#     }
# } 